{"version":3,"file":"static/js/70.9056f334.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/PoolFinder/index.tsx?9997","components/BreadcrumbNav/index.tsx","components/V2Unsupported.tsx","hooks/useTotalSupply.ts","webpack://@uniswap/interface/./src/pages/PoolFinder/index.tsx?72f2","pages/LegacyPool/redirects.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ClickableStyle } from \"theme/components/styles\";\nimport { useMedia } from \"ui/src\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nexport const BreadcrumbNavContainer = styled.nav`\n  display: flex;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 16px;\n  line-height: 24px;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n  width: fit-content;\n`;\nexport const BreadcrumbNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral2};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  text-decoration: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.neutral3};\n  }\n`;\nconst CurrentPageBreadcrumbContainer = styled(Row)`\n  gap: 6px;\n`;\nconst PageTitleText = styled.h1`\n  font-weight: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: ${({ theme }) => theme.neutral1};\n  white-space: nowrap;\n  margin: 0;\n`;\nconst TokenAddressHoverContainer = styled(Row)`\n  cursor: ${({ isDisabled }) => isDisabled ? \"default\" : \"pointer\"};\n  gap: 10px;\n  white-space: nowrap;\n`;\nconst CopyIcon = styled(Copy)`\n  ${ClickableStyle}\n`;\nexport const CurrentPageBreadcrumb = ({\n  address,\n  currency,\n  poolName\n}) => {\n  const { t } = useTranslation();\n  const { neutral2 } = useTheme();\n  const [hover, setHover] = useState(false);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const isNative = currency?.isNative;\n  const tokenSymbolName = currency?.symbol ?? t(\"tdp.symbolNotFound\");\n  const media = useMedia();\n  const shouldEnableCopy = !media.md;\n  const shouldShowActions = shouldEnableCopy && hover && !isCopied;\n  return <CurrentPageBreadcrumbContainer\n    aria-current=\"page\"\n    data-testid=\"current-breadcrumb\"\n    onMouseEnter={() => setHover(true)}\n    onMouseLeave={() => setHover(false)}\n  ><PageTitleText>{currency ? tokenSymbolName : poolName}</PageTitleText>{\" \"}{(!currency || currency && !isNative) && <TokenAddressHoverContainer\n    data-testid=\"breadcrumb-token-address\"\n    isDisabled={!shouldEnableCopy}\n    onClick={shouldEnableCopy ? copy : void 0}\n  ><MouseoverTooltip\n    placement=\"bottom\"\n    size={TooltipSize.Max}\n    forceShow={isCopied}\n    text={t(\"common.copied\")}\n    disabled\n  >{shortenAddress(address)}</MouseoverTooltip>{shouldShowActions && <CopyIcon data-testid=\"breadcrumb-hover-copy\" width={16} height={16} color={neutral2} />}</TokenAddressHoverContainer>}</CurrentPageBreadcrumbContainer>;\n};\n","\"use strict\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nconst TextWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral3};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport function V2Unsupported() {\n  return <AutoColumn gap=\"lg\" justify=\"center\"><AutoColumn gap=\"md\" style={{ width: \"100%\" }}><TextWrapper><ThemedText.BodySecondary color=\"neutral2\" textAlign=\"center\"><Trans i18nKey=\"v2.notAvailable\" /></ThemedText.BodySecondary></TextWrapper></AutoColumn></AutoColumn>;\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useMemo } from \"react\";\nimport { assume0xAddress } from \"utils/wagmi\";\nimport { erc20Abi } from \"viem\";\nimport { useReadContract } from \"wagmi\";\nexport function useTotalSupply(token) {\n  const address = token?.isToken ? assume0xAddress(token.address) : void 0;\n  const { data } = useReadContract({ address, chainId: token?.chainId, abi: erc20Abi, functionName: \"totalSupply\" });\n  return useMemo(\n    () => token?.isToken && data ? CurrencyAmount.fromRawAmount(token, data?.toString()) : void 0,\n    [token, data]\n  );\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport CurrencySearchModal from \"components/SearchModal/CurrencySearchModal\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useTotalSupply } from \"hooks/useTotalSupply\";\nimport { useV2Pair } from \"hooks/useV2Pairs\";\nimport JSBI from \"jsbi\";\nimport ms from \"ms\";\nimport { CurrencySelector } from \"pages/Pool/Positions/create/SelectTokenStep\";\nimport { useEffect, useState } from \"react\";\nimport { ArrowLeft } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useTokenBalance } from \"state/connection/hooks\";\nimport { usePairAdder } from \"state/user/hooks\";\nimport { PositionField } from \"types/position\";\nimport { Button, Flex, Text } from \"ui/src\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport default function PoolFinder() {\n  const account = useAccount();\n  const { t } = useTranslation();\n  const accountDrawer = useAccountDrawer();\n  const { formatCurrencyAmount } = useFormatter();\n  const [success, setSuccess] = useState(false);\n  const [currency0, setCurrency0] = useState(\n    () => account.chainId ? nativeOnChain(account.chainId) : void 0\n  );\n  const [currency1, setCurrency1] = useState();\n  const [currencySearchInputState, setCurrencySearchInputState] = useState(void 0);\n  const [, pair] = useV2Pair(currency0, currency1);\n  const addPair = usePairAdder();\n  useEffect(() => {\n    if (pair) {\n      addPair(pair);\n    }\n  }, [pair, addPair]);\n  const position = useTokenBalance(account.address, pair?.liquidityToken);\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.quotient, JSBI.BigInt(0)));\n  const userPoolBalance = useTokenBalance(account.address, pair?.liquidityToken);\n  const totalPoolTokens = useTotalSupply(pair?.liquidityToken);\n  const [token0Deposited, token1Deposited] = !!pair && !!totalPoolTokens && !!userPoolBalance && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient) ? [\n    pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n    pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false)\n  ] : [void 0, void 0];\n  const token0UsdValue = useUSDCValue(token0Deposited);\n  const token1UsdValue = useUSDCValue(token1Deposited);\n  const currency0CurrencyInfo = useCurrencyInfo(currencyId(currency0));\n  const currency1CurrencyInfo = useCurrencyInfo(currencyId(currency1));\n  const networkSupportsV2 = useNetworkSupportsV2();\n  if (!networkSupportsV2) {\n    return <V2Unsupported />;\n  }\n  return <Trace logImpression page={InterfacePageName.POOL_PAGE}><Flex width=\"100%\" py=\"$spacing48\" px=\"$spacing40\" maxWidth={650}><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink style={{ gap: \"8px\" }} to=\"/positions\"><ArrowLeft size={14} /> <Trans i18nKey=\"pool.positions.title\" /></BreadcrumbNavLink></BreadcrumbNavContainer><Text variant=\"heading2\">{t(\"pool.import.positions.v2\")}</Text><Flex mt=\"$spacing40\" borderRadius=\"$rounded20\" borderColor=\"$surface3\" borderWidth=\"$spacing1\" p=\"$spacing24\"><Text variant=\"subheading1\">{t(\"pool.selectPair\")}</Text><Text variant=\"body3\" mt=\"$gap4\">{t(\"pool.import.positions.v2.selectPair.description\")}</Text><Flex row gap=\"$gap16\" $md={{ flexDirection: \"column\" }} mt=\"$spacing12\"><CurrencySelector\n    currencyInfo={currency0CurrencyInfo}\n    onPress={() => setCurrencySearchInputState(PositionField.TOKEN0)}\n  /><CurrencySelector\n    currencyInfo={currency1CurrencyInfo}\n    onPress={() => setCurrencySearchInputState(PositionField.TOKEN1)}\n  /></Flex>{currency0 && currency1 && account.isConnected ? <><Text variant=\"subheading1\" mt=\"$gap32\">{t(\"poolFinder.availablePools\")}</Text><Text variant=\"body3\" mt=\"$gap4\">{hasPosition ? t(\"poolFinder.availablePools.found.description\") : t(\"poolFinder.availablePools.notFound.description\")}</Text></> : null}{hasPosition && pair && token0UsdValue && token1UsdValue && <Flex\n    mt=\"$gap12\"\n    width=\"100%\"\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    p=\"$padding16\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"$spacing1\"\n    borderColor=\"$surface3\"\n    $md={{ row: false, gap: \"$gap16\", alignItems: \"flex-start\" }}\n  ><Flex row alignItems=\"center\" gap=\"$gap16\" $md={{ justifyContent: \"space-between\" }}><DoubleCurrencyLogo currencies={[currency0, currency1]} size={40} /><Text variant=\"subheading1\">{currency0?.symbol}/{currency1?.symbol}</Text></Flex><Flex\n    $md={{\n      row: true,\n      gap: \"$gap8\",\n      alignItems: \"center\",\n      flexDirection: \"row-reverse\",\n      justifyContent: \"space-between\"\n    }}\n  ><Text variant=\"body2\" textAlign=\"right\">{formatCurrencyAmount({\n    amount: token0UsdValue.add(token1UsdValue),\n    type: NumberType.FiatTokenQuantity\n  })}</Text><Text variant=\"body3\" color=\"$neutral2\">{t(\"position.value\")}</Text></Flex></Flex>}<Flex row>{!account.isConnected ? <Button size=\"large\" emphasis=\"secondary\" mt=\"$gap32\" onPress={accountDrawer.open}>{t(\"common.connectWallet.button\")}</Button> : <Button\n    size=\"large\"\n    emphasis=\"secondary\"\n    mt=\"$gap32\"\n    isDisabled={!hasPosition || success}\n    onPress={() => {\n      if (hasPosition && pair) {\n        addPair(pair);\n        setSuccess(true);\n        setTimeout(() => {\n          setSuccess(false);\n        }, ms(\"3s\"));\n      }\n    }}\n  >{hasPosition ? success ? t(\"pool.import.success\") : t(\"pool.import\") : t(\"common.button.continue\")}</Button>}</Flex></Flex><CurrencySearchModal\n    isOpen={currencySearchInputState !== void 0}\n    onDismiss={() => setCurrencySearchInputState(void 0)}\n    onCurrencySelect={(currency) => {\n      if (currencySearchInputState === PositionField.TOKEN0) {\n        setCurrency0(currency);\n      } else if (currencySearchInputState === PositionField.TOKEN1) {\n        setCurrency1(currency);\n      }\n      setCurrencySearchInputState(void 0);\n    }}\n  /></Flex></Trace>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useV2Pair } from \"hooks/useV2Pairs\";\nimport { getCurrencyWithWrap } from \"pages/Pool/Positions/create/utils\";\nimport PoolFinder from \"pages/PoolFinder\";\nimport { Navigate, useParams, useSearchParams } from \"react-router-dom\";\nimport { parseCurrencyFromURLParameter } from \"state/swap/hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { getChainIdFromChainUrlParam, searchParamToBackendName } from \"utils/chainParams\";\nimport { useAccount } from \"wagmi\";\nexport function LegacyPoolRedirects() {\n  return <Navigate to=\"/positions\" replace />;\n}\nexport function PoolFinderRedirects() {\n  return <PoolFinder />;\n}\nexport function RemoveLiquidityV2WithTokenRedirects() {\n  const { chainId: connectedChainId } = useAccount();\n  const { defaultChainId } = useEnabledChains();\n  const { currencyIdA, currencyIdB } = useParams();\n  const [searchParams] = useSearchParams();\n  const chainParam = searchParams.get(\"chain\") ?? void 0;\n  const currencyAddressA = parseCurrencyFromURLParameter(currencyIdA ?? \"\");\n  const currencyAddressB = parseCurrencyFromURLParameter(currencyIdB ?? \"\");\n  const chainId = getChainIdFromChainUrlParam(chainParam) ?? connectedChainId ?? defaultChainId;\n  const [currencyA, currencyB] = [useCurrency(currencyAddressA, chainId), useCurrency(currencyAddressB, chainId)];\n  const [, pair] = useV2Pair(\n    getCurrencyWithWrap(currencyA, ProtocolVersion.V2),\n    getCurrencyWithWrap(currencyB, ProtocolVersion.V2)\n  );\n  if (pair) {\n    return <Navigate to={`/positions/v2/${toGraphQLChain(chainId).toLowerCase()}/${pair.liquidityToken.address}`} replace />;\n  }\n  return <Navigate to=\"/positions\" replace />;\n}\nexport function LegacyPositionPageRedirects() {\n  const { tokenId } = useParams();\n  const [searchParams] = useSearchParams();\n  const { chainId: connectedChainId } = useAccount();\n  const { defaultChainId } = useEnabledChains();\n  const chainName = searchParamToBackendName(searchParams.get(\"chain\"))?.toLowerCase() ?? toGraphQLChain(connectedChainId ?? defaultChainId).toLowerCase();\n  return <Navigate to={`/positions/v3/${chainName}/${tokenId}`} replace />;\n}\n"],"names":["BreadcrumbNavContainer","styled","nav","theme","neutral2","BreadcrumbNavLink","Link","transition","duration","fast","neutral3","CurrentPageBreadcrumbContainer","Row","PageTitleText","h1","neutral1","TokenAddressHoverContainer","isDisabled","CopyIcon","Copy","ClickableStyle","CurrentPageBreadcrumb","address","currency","poolName","t","useTranslation","useTheme","hover","setHover","useState","isCopied","setCopied","useCopyClipboard","copy","useCallback","isNative","tokenSymbolName","symbol","shouldEnableCopy","useMedia","md","shouldShowActions","aria-current","data-testid","onMouseEnter","onMouseLeave","onClick","MouseoverTooltip","placement","size","TooltipSize","Max","forceShow","text","disabled","shortenAddress","width","height","color","TextWrapper","div","V2Unsupported","AutoColumn","gap","justify","style","ThemedText","BodySecondary","textAlign","Trans","i18nKey","useTotalSupply","token","isToken","assume0xAddress","data","useReadContract","chainId","abi","erc20Abi","functionName","useMemo","CurrencyAmount","fromRawAmount","toString","_cn7","_cn6","_cn5","_cn4","_cn3","_cn2","_cn","PoolFinder","pair","currency0","currency1","account","useAccount","accountDrawer","useAccountDrawer","formatCurrencyAmount","useFormatter","success","setSuccess","setCurrency0","nativeOnChain","setCurrency1","currencySearchInputState","setCurrencySearchInputState","useV2Pair","addPair","usePairAdder","useEffect","position","useTokenBalance","liquidityToken","hasPosition","Boolean","JSBI","quotient","userPoolBalance","totalPoolTokens","token0Deposited","token1Deposited","getLiquidityValue","token0","token1","token0UsdValue","useUSDCValue","token1UsdValue","currency0CurrencyInfo","useCurrencyInfo","currencyId","currency1CurrencyInfo","useNetworkSupportsV2","Trace","logImpression","page","InterfacePageName","POOL_PAGE","className","aria-label","to","ArrowLeft","Text","variant","mt","CurrencySelector","currencyInfo","onPress","PositionField","TOKEN0","TOKEN1","isConnected","DoubleCurrencyLogo","currencies","amount","add","type","NumberType","FiatTokenQuantity","Button","emphasis","setTimeout","ms","open","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","LegacyPoolRedirects","Navigate","replace","PoolFinderRedirects","RemoveLiquidityV2WithTokenRedirects","connectedChainId","defaultChainId","useEnabledChains","currencyIdA","currencyIdB","useParams","searchParams","useSearchParams","chainParam","get","currencyAddressA","parseCurrencyFromURLParameter","currencyAddressB","getChainIdFromChainUrlParam","currencyA","currencyB","useCurrency","getCurrencyWithWrap","ProtocolVersion","V2","toGraphQLChain","toLowerCase","LegacyPositionPageRedirects","searchParamToBackendName","tokenId","chainName"],"sourceRoot":""}