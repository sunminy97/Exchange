{"version":3,"file":"static/js/3613.9d021b5c.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/plus.js","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx?61d9","webpack://@uniswap/interface/./src/pages/PoolDetails/index.tsx?6f81","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsLink.tsx?85e6","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsHeader.tsx?ddf5","webpack://@uniswap/interface/./src/components/LpIncentives/LpIncentivesPoolDetailsRewardsDistribution.tsx?a838","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/ChartSection/index.tsx?9caf","webpack://@uniswap/interface/./src/pages/NotFound/index.tsx?8065","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx?7025","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx?37e4","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsApr.tsx?5173","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsStats.tsx?4f35","components/AccountDrawer/Scrim.tsx","webpack://@uniswap/interface/./src/pages/NotFound/index.tsx?7fe7","webpack://@uniswap/interface/./src/components/LpIncentives/LpIncentivesPoolDetailsRewardsDistribution.tsx?345b","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/ChartSection/index.tsx?5656","components/Pools/PoolDetails/ChartSection/hooks.ts","components/LpIncentives/utils.ts","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsApr.tsx?4c3e","components/Pools/PoolDetails/shared.ts","../../../node_modules/react-feather/dist/icons/external-link.js","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsHeader.tsx?77cb","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsLink.tsx?42b6","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsStats.tsx?41ad","../../../packages/utilities/src/tokens/constants.ts","components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync.ts","utils/arrays.ts","components/AccountDrawer/MiniPortfolio/Pools/hooks.ts","components/AccountDrawer/MiniPortfolio/Pools/cache.ts","components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions.tsx","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx?99d3","components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx","graphql/data/pools/usePoolTransactions.ts","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx?1606","components/Pools/PoolDetails/PoolDetailsTable.tsx","graphql/data/pools/usePoolData.ts","pages/PoolDetails/utils.ts","webpack://@uniswap/interface/./src/pages/PoolDetails/index.tsx?0046"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Plus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"12\",y1:\"5\",x2:\"12\",y2:\"19\"}),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Plus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Plus.displayName=\"Plus\";export default Plus;","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport styled from \"lib/styled-components\";\nimport { useEffect } from \"react\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { useDeviceDimensions } from \"ui/src/hooks/useDeviceDimensions\";\nimport { breakpoints } from \"ui/src/theme\";\nconst ScrimBackground = styled.div`\n  z-index: ${({ $zIndex }) => $zIndex ?? Z_INDEX.modalBackdrop};\n  overflow: hidden;\n  top: 0;\n  left: 0;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.scrim};\n\n  opacity: 0;\n  pointer-events: none;\n  @media only screen and (max-width: ${({ theme, $maxWidth }) => `${$maxWidth ?? theme.breakpoint.md}px`}) {\n    opacity: ${({ $open }) => $open ? 1 : 0};\n    pointer-events: ${({ $open }) => $open ? \"auto\" : \"none\"};\n    transition: opacity ${({ theme }) => theme.transition.duration.medium} ease-in-out;\n  }\n`;\nexport const Scrim = (props) => {\n  const { fullWidth: width } = useDeviceDimensions();\n  useEffect(() => {\n    if (width && width < breakpoints.md && props.$open) {\n      document.body.style.overflow = \"hidden\";\n    }\n    return () => {\n      document.body.style.overflow = \"visible\";\n    };\n  }, [props.$open, width]);\n  return <ScrimBackground {...props} />;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport darkImage from \"assets/images/404-page-dark.png\";\nimport lightImage from \"assets/images/404-page-light.png\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsDarkMode } from \"theme/components/ThemeToggle\";\nimport { Button, Flex } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled(Container)`\n  gap: 30px;\n`;\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`;\nexport default function NotFound({ title, subtitle, actionButton }) {\n  const isDarkMode = useIsDarkMode();\n  const isMobile = useIsMobile();\n  const navigate = useNavigate();\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero;\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge;\n  return <PageWrapper><Trace logImpression page={InterfacePageName.NOT_FOUND}><Header><Container>{title ?? <Title>404</Title>}{subtitle ?? <Paragraph color=\"neutral2\"><Trans i18nKey=\"common.pageNotFound\" /></Paragraph>}</Container><Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" /></Header>{actionButton ?? <Flex row alignSelf=\"stretch\"><Button onPress={() => navigate(\"/\")} variant=\"branded\"><Trans i18nKey=\"notFound.oops\" /></Button></Flex>}</Trace></PageWrapper>;\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { LP_INCENTIVES_REWARD_TOKEN } from \"components/LpIncentives/constants\";\nimport JSBI from \"jsbi\";\nimport ms from \"ms\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { useCurrentLanguage } from \"uniswap/src/features/language/hooks\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst formatDateRange = (startTimestamp, endTimestamp, locale) => {\n  if (!startTimestamp || !endTimestamp) {\n    return \"\";\n  }\n  const start = new Date(startTimestamp * 1e3);\n  const end = new Date(endTimestamp * 1e3);\n  const options = { month: \"short\", day: \"numeric\" };\n  const startDateStr = new Intl.DateTimeFormat(locale, options).format(start);\n  const endDateStr = new Intl.DateTimeFormat(locale, options).format(end);\n  return `${startDateStr} - ${endDateStr}`;\n};\nconst getDaysRemaining = (endTimestamp, t) => {\n  if (!endTimestamp) {\n    return \"\";\n  }\n  const now = Date.now();\n  const end = endTimestamp * 1e3;\n  const diff = end - now;\n  if (diff <= 0) {\n    return t(\"common.ended\");\n  }\n  const days = diff / ms(\"1d\");\n  if (days < 1) {\n    return `< 1 ${t(\"common.day\")}`;\n  }\n  return `${Math.ceil(days)} ${t(\"pool.incentives.daysLeft\")}`;\n};\nconst BarChartSide = ({ percent, color, isLeft }) => {\n  return <Flex\n    height={8}\n    width={`${percent * 100}%`}\n    backgroundColor={color}\n    {...isLeft ? { borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderRightWidth: 1, borderRightColor: \"$surface2\" } : { borderTopRightRadius: 5, borderBottomRightRadius: 5, borderLeftWidth: 1, borderLeftColor: \"$surface2\" }}\n  />;\n};\nexport const LpIncentivesPoolDetailsRewardsDistribution = ({\n  rewardsCampaign\n}) => {\n  const { formatCurrencyAmount } = useFormatter();\n  const { price: uniPrice } = useUSDCPrice(LP_INCENTIVES_REWARD_TOKEN);\n  const { t } = useTranslation();\n  const currentLanguage = useCurrentLanguage();\n  const rewardsPercent = useMemo(() => {\n    if (!rewardsCampaign) {\n      return 0;\n    }\n    const distributed = rewardsCampaign.distributedRewards ? JSBI.BigInt(rewardsCampaign.distributedRewards) : JSBI.BigInt(0);\n    const total = rewardsCampaign.totalRewardAllocation ? JSBI.BigInt(rewardsCampaign.totalRewardAllocation) : JSBI.BigInt(0);\n    if (JSBI.greaterThan(total, JSBI.BigInt(0))) {\n      const distributedNum = parseFloat(distributed.toString());\n      const totalNum = parseFloat(total.toString());\n      if (totalNum === 0) {\n        return 0;\n      }\n      return Math.min(1, distributedNum / totalNum);\n    }\n    return 0;\n  }, [rewardsCampaign]);\n  const timePercent = useMemo(() => {\n    if (!rewardsCampaign) {\n      return 0;\n    }\n    const start = rewardsCampaign.startTimestamp;\n    const end = rewardsCampaign.endTimestamp;\n    if (!start || !end || start >= end) {\n      return 0;\n    }\n    const now = Date.now() / 1e3;\n    if (now <= start) {\n      return 0;\n    }\n    if (now >= end) {\n      return 1;\n    }\n    const duration = end - start;\n    const elapsed = now - start;\n    return elapsed / duration;\n  }, [rewardsCampaign]);\n  if (!rewardsCampaign) {\n    return null;\n  }\n  const distributedRewardsRaw = rewardsCampaign.distributedRewards ? JSBI.BigInt(rewardsCampaign.distributedRewards) : JSBI.BigInt(0);\n  const totalRewardAllocationRaw = rewardsCampaign.totalRewardAllocation ? JSBI.BigInt(rewardsCampaign.totalRewardAllocation) : JSBI.BigInt(0);\n  const distributedRewardsAmount = CurrencyAmount.fromRawAmount(LP_INCENTIVES_REWARD_TOKEN, distributedRewardsRaw);\n  const totalRewardAllocationAmount = CurrencyAmount.fromRawAmount(LP_INCENTIVES_REWARD_TOKEN, totalRewardAllocationRaw);\n  const distributedRewardsFiat = uniPrice?.quote(distributedRewardsAmount);\n  const totalRewardAllocationFiat = uniPrice?.quote(totalRewardAllocationAmount);\n  const formattedDistributedToken = formatCurrencyAmount({\n    amount: distributedRewardsAmount,\n    type: NumberType.TokenQuantityStats\n  });\n  const formattedTotalToken = formatCurrencyAmount({\n    amount: totalRewardAllocationAmount,\n    type: NumberType.TokenQuantityStats\n  });\n  const formattedDistributedFiat = formatCurrencyAmount({\n    amount: distributedRewardsFiat,\n    type: NumberType.FiatTokenStats,\n    placeholder: \"--\"\n  });\n  const formattedTotalFiat = formatCurrencyAmount({\n    amount: totalRewardAllocationFiat,\n    type: NumberType.FiatTokenStats,\n    placeholder: \"--\"\n  });\n  const daysRemaining = getDaysRemaining(rewardsCampaign.endTimestamp, t);\n  const dateRange = formatDateRange(rewardsCampaign.startTimestamp, rewardsCampaign.endTimestamp, currentLanguage);\n  return <Flex\n    mb={24}\n    mt={-24}\n    $xl={{ my: 0 }}\n    padding=\"$spacing20\"\n    borderRadius=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    width=\"100%\"\n  ><Flex flex={1} gap=\"$gap8\" minWidth={180} $md={{ minWidth: 150 }}><Text color=\"$neutral2\" variant=\"body2\">{t(\"pool.incentives.rewardsDistribution\")}</Text><Flex row justifyContent=\"space-between\" alignItems=\"flex-end\"><Text variant=\"body3\" color=\"$neutral1\">{formattedDistributedToken} {LP_INCENTIVES_REWARD_TOKEN.symbol} ({formattedDistributedFiat})\r\n          </Text><Text variant=\"body3\" color=\"$neutral2\">\r\n            / {formattedTotalToken} {LP_INCENTIVES_REWARD_TOKEN.symbol} ({formattedTotalFiat})\r\n          </Text></Flex><Flex row width=\"100%\"><BarChartSide percent={rewardsPercent} color=\"$accent1\" isLeft={true} /><BarChartSide percent={1 - rewardsPercent} color=\"$accent2\" isLeft={false} /></Flex></Flex><Flex flex={1} gap=\"$gap8\" minWidth={180} $md={{ minWidth: 150 }} mt=\"$spacing20\"><Text variant=\"body2\" color=\"$neutral2\">{t(\"pool.incentives.timePeriod\")}</Text><Flex row justifyContent=\"space-between\" alignItems=\"flex-end\"><Text variant=\"body3\" color=\"$neutral1\">{daysRemaining}</Text><Text variant=\"body3\" color=\"$neutral2\">{dateRange}</Text></Flex><Flex row width=\"100%\"><BarChartSide percent={timePercent} color=\"$accent1\" isLeft={true} /><BarChartSide percent={1 - timePercent} color=\"$accent2\" isLeft={false} /></Flex></Flex></Flex>;\n};\n","\"use strict\";\nimport { ProtocolVersion as RestProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { FeeAmount } from \"@uniswap/v3-sdk\";\nimport { ChartHeader } from \"components/Charts/ChartHeader\";\nimport { Chart, refitChartContentAtom } from \"components/Charts/ChartModel\";\nimport { LiquidityBarChartModel, useLiquidityBarData } from \"components/Charts/LiquidityChart\";\nimport { ChartSkeleton } from \"components/Charts/LoadingState\";\nimport { PriceChartDelta, PriceChartModel } from \"components/Charts/PriceChart\";\nimport { VolumeChart } from \"components/Charts/VolumeChart\";\nimport { ChartType, PriceChartType } from \"components/Charts/utils\";\nimport { parseProtocolVersion } from \"components/Liquidity/utils\";\nimport { usePDPPriceChartData, usePDPVolumeChartData } from \"components/Pools/PoolDetails/ChartSection/hooks\";\nimport { ChartActionsContainer, DEFAULT_PILL_TIME_SELECTOR_OPTIONS } from \"components/Tokens/TokenDetails/ChartSection\";\nimport { ChartTypeDropdown } from \"components/Tokens/TokenDetails/ChartSection/ChartTypeSelector\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { LoadingChart } from \"components/Tokens/TokenDetails/Skeleton\";\nimport {\n  DISPLAYS,\n  TimePeriodDisplay,\n  getTimePeriodFromDisplay\n} from \"components/Tokens/TokenTable/VolumeTimeFrameSelector\";\nimport { TimePeriod, gqlToCurrency, toHistoryDuration } from \"graphql/data/util\";\nimport { useAtomValue } from \"jotai/utils\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nimport { EllipsisStyle } from \"theme/components/styles\";\nimport { textFadeIn } from \"theme/styles\";\nimport { Flex, SegmentedControl, useMedia } from \"ui/src\";\nimport { Chain, ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { fromGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst PDP_CHART_HEIGHT_PX = 356;\nconst PDP_CHART_SELECTOR_OPTIONS = [ChartType.VOLUME, ChartType.PRICE, ChartType.LIQUIDITY];\nconst ChartTypeSelectorContainer = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    width: 100%;\n  }\n`;\nconst PDPChartTypeSelector = ({\n  chartType,\n  onChartTypeChange,\n  disabledOption\n}) => <ChartTypeSelectorContainer><ChartTypeDropdown\n  options={PDP_CHART_SELECTOR_OPTIONS}\n  currentChartType={chartType}\n  onSelectOption={onChartTypeChange}\n  disabledOption={disabledOption}\n/></ChartTypeSelectorContainer>;\nfunction usePDPChartState(poolData, tokenA, tokenB, isReversed, chain, protocolVersion) {\n  const [timePeriod, setTimePeriod] = useState(TimePeriod.DAY);\n  const [chartType, setChartType] = useState(ChartType.VOLUME);\n  const isV2 = protocolVersion === ProtocolVersion.V2;\n  const isV3 = protocolVersion === ProtocolVersion.V3;\n  const isV4 = protocolVersion === ProtocolVersion.V4;\n  const variables = {\n    addressOrId: poolData?.idOrAddress ?? \"\",\n    chain,\n    duration: toHistoryDuration(timePeriod),\n    isV4,\n    isV3,\n    isV2\n  };\n  const priceQuery = usePDPPriceChartData(variables, poolData, isReversed ? tokenB : tokenA, protocolVersion);\n  const volumeQuery = usePDPVolumeChartData(variables);\n  return useMemo(() => {\n    const activeQuery = (() => {\n      switch (chartType) {\n        case ChartType.PRICE:\n          return priceQuery;\n        case ChartType.VOLUME:\n          return volumeQuery;\n        case ChartType.LIQUIDITY:\n          return {\n            chartType: ChartType.LIQUIDITY,\n            entries: [],\n            loading: false,\n            dataQuality: DataQuality.VALID\n          };\n      }\n    })();\n    return {\n      timePeriod,\n      setTimePeriod,\n      setChartType,\n      activeQuery\n    };\n  }, [chartType, volumeQuery, priceQuery, timePeriod]);\n}\nexport default function ChartSection(props) {\n  const { defaultChainId } = useEnabledChains();\n  const media = useMedia();\n  const [currencyA, currencyB] = [\n    props.poolData?.token0 && gqlToCurrency(props.poolData.token0),\n    props.poolData?.token1 && gqlToCurrency(props.poolData.token1)\n  ];\n  const { setChartType, timePeriod, setTimePeriod, activeQuery } = usePDPChartState(\n    props.poolData,\n    currencyA?.wrapped,\n    currencyB?.wrapped,\n    props.isReversed,\n    props.chain ?? Chain.Ethereum,\n    props.poolData?.protocolVersion ?? ProtocolVersion.V3\n  );\n  const refitChartContent = useAtomValue(refitChartContentAtom);\n  const loading = props.loading || (activeQuery.chartType !== ChartType.LIQUIDITY ? activeQuery?.loading : false);\n  const ChartBody = (() => {\n    if (!currencyA || !currencyB || !props.poolData || !props.chain) {\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} />;\n    }\n    const selectedChartProps = {\n      ...props,\n      feeTier: Number(props.poolData.feeTier),\n      height: PDP_CHART_HEIGHT_PX,\n      timePeriod,\n      tokenA: currencyA.wrapped,\n      tokenB: currencyB.wrapped,\n      chainId: fromGraphQLChain(props.chain) ?? defaultChainId,\n      poolId: props.poolData.idOrAddress,\n      hooks: props.poolData.hookAddress,\n      version: parseProtocolVersion(props.poolData.protocolVersion) ?? RestProtocolVersion.V3,\n      tickSpacing: props.poolData.tickSpacing\n    };\n    if (activeQuery.chartType === ChartType.LIQUIDITY) {\n      return <LiquidityChart {...selectedChartProps} currencyA={currencyA} currencyB={currencyB} />;\n    }\n    if (activeQuery.dataQuality === DataQuality.INVALID || !currencyA || !currencyB) {\n      const errorText = loading ? void 0 : <Trans i18nKey=\"chart.error.pools\" />;\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} errorText={errorText} />;\n    }\n    const stale = activeQuery.dataQuality === DataQuality.STALE;\n    switch (activeQuery.chartType) {\n      case ChartType.PRICE:\n        return <PriceChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n      case ChartType.VOLUME:\n        return <VolumeChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n    }\n  })();\n  const filteredTimeOptions = useMemo(() => {\n    if (activeQuery.chartType === ChartType.PRICE) {\n      const filtered = DEFAULT_PILL_TIME_SELECTOR_OPTIONS.filter((option) => option.value !== TimePeriodDisplay.HOUR);\n      if (timePeriod === TimePeriod.HOUR) {\n        setTimePeriod(TimePeriod.DAY);\n      }\n      return {\n        options: filtered,\n        selected: DISPLAYS[timePeriod]\n      };\n    }\n    return {\n      options: DEFAULT_PILL_TIME_SELECTOR_OPTIONS,\n      selected: DISPLAYS[timePeriod]\n    };\n  }, [activeQuery.chartType, timePeriod, setTimePeriod]);\n  const disabledChartOption = props.poolData?.protocolVersion === ProtocolVersion.V2 ? ChartType.LIQUIDITY : void 0;\n  return <Flex data-testid=\"pdp-chart-container\">{ChartBody}<ChartActionsContainer><PDPChartTypeSelector\n    chartType={activeQuery.chartType}\n    onChartTypeChange={setChartType}\n    disabledOption={disabledChartOption}\n  />{activeQuery.chartType !== ChartType.LIQUIDITY && <Flex $md={{ width: \"100%\" }}><SegmentedControl\n    fullWidth={media.md}\n    options={filteredTimeOptions.options}\n    selectedOption={filteredTimeOptions.selected}\n    onSelectOption={(option) => {\n      const time = getTimePeriodFromDisplay(option);\n      if (time === timePeriod) {\n        refitChartContent?.();\n      } else {\n        setTimePeriod(time);\n      }\n    }}\n  /></Flex>}</ChartActionsContainer></Flex>;\n}\nconst PriceDisplayContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 4px;\n`;\nconst ChartPriceText = styled(ThemedText.HeadlineMedium)`\n  ${EllipsisStyle}\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    font-size: 24px !important;\n    line-height: 32px !important;\n  }\n`;\nfunction PriceChart({\n  tokenA,\n  tokenB,\n  isReversed,\n  data,\n  stale\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const [primaryToken, referenceToken] = isReversed ? [tokenB, tokenA] : [tokenA, tokenB];\n  const params = useMemo(() => ({ data, stale, type: PriceChartType.LINE }), [data, stale]);\n  const { price } = useUSDCPrice(referenceToken);\n  const lastPrice = data[data.length - 1];\n  return <Chart height={PDP_CHART_HEIGHT_PX} Model={PriceChartModel} params={params}>{(crosshairData) => {\n    const displayValue = crosshairData ?? lastPrice;\n    const currencyBAmountRaw = Math.floor(\n      (displayValue.value ?? displayValue.close) * 10 ** referenceToken.decimals\n    );\n    const priceDisplay = <PriceDisplayContainer><ChartPriceText>{`1 ${referenceToken.symbol} = ${formatCurrencyAmount({\n      amount: CurrencyAmount.fromRawAmount(referenceToken, currencyBAmountRaw)\n    })} \n            ${primaryToken.symbol}`}</ChartPriceText><ChartPriceText color=\"neutral2\">{price ? \"(\" + formatPrice({ price }) + \")\" : \"\"}</ChartPriceText></PriceDisplayContainer>;\n    return <ChartHeader\n      value={priceDisplay}\n      additionalFields={<PriceChartDelta startingPrice={data[0]} endingPrice={displayValue} />}\n      valueFormatterType={NumberType.FiatTokenPrice}\n      time={crosshairData?.time}\n    />;\n  }}</Chart>;\n}\nconst FadeInHeading = styled(ThemedText.H1Medium)`\n  ${textFadeIn};\n  line-height: 32px;\n`;\nconst FadeInSubheader = styled(ThemedText.SubHeader)`\n  ${textFadeIn}\n`;\nfunction LiquidityTooltipDisplay({\n  data,\n  tokenADescriptor,\n  tokenBDescriptor,\n  currentTick\n}) {\n  const { t } = useTranslation();\n  const { formatNumber } = useFormatter();\n  if (!currentTick) {\n    return null;\n  }\n  const displayValue0 = data.tick >= currentTick ? formatNumber({\n    input: data.amount0Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  const displayValue1 = data.tick <= currentTick ? formatNumber({\n    input: data.amount1Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  return <><ThemedText.BodySmall>{t(\"liquidityPool.chart.tooltip.amount\", { token: tokenADescriptor, amount: displayValue0 })}</ThemedText.BodySmall><ThemedText.BodySmall>{t(\"liquidityPool.chart.tooltip.amount\", { token: tokenBDescriptor, amount: displayValue1 })}</ThemedText.BodySmall></>;\n}\nfunction LiquidityChart({\n  currencyA,\n  currencyB,\n  feeTier,\n  isReversed,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  poolId\n}) {\n  const { t } = useTranslation();\n  const tokenADescriptor = currencyA.symbol ?? currencyA.name ?? t(\"common.tokenA\");\n  const tokenBDescriptor = currencyB.symbol ?? currencyB.name ?? t(\"common.tokenB\");\n  const { tickData, activeTick, loading } = useLiquidityBarData({\n    currencyA,\n    currencyB,\n    feeTier,\n    isReversed,\n    chainId,\n    version,\n    tickSpacing,\n    hooks,\n    poolId\n  });\n  const theme = useTheme();\n  const params = useMemo(() => {\n    return {\n      data: tickData?.barData ?? [],\n      tokenAColor: isReversed ? theme.token1 : theme.token0,\n      tokenBColor: isReversed ? theme.token0 : theme.token1,\n      highlightColor: theme.surface3,\n      activeTick,\n      activeTickProgress: tickData?.activeRangePercentage\n    };\n  }, [activeTick, isReversed, theme, tickData]);\n  if (loading) {\n    return <LoadingChart />;\n  }\n  return <Chart\n    height={PDP_CHART_HEIGHT_PX}\n    Model={LiquidityBarChartModel}\n    params={params}\n    TooltipBody={\n      // TODO(WEB-3628): investigate potential off-by-one or subgraph issues causing calculated TVL issues on 1 bip pools\n      feeTier !== FeeAmount.LOWEST ? ({ data }) => <LiquidityTooltipDisplay\n        data={data}\n        tokenADescriptor={tokenADescriptor}\n        tokenBDescriptor={tokenBDescriptor}\n        currentTick={tickData?.activeRangeData?.tick}\n      /> : void 0\n    }\n  >{(crosshair) => {\n    const displayPoint = crosshair ?? tickData?.activeRangeData;\n    const display = <><FadeInHeading>{`1 ${tokenADescriptor} = ${displayPoint?.price0} ${tokenBDescriptor}`}</FadeInHeading><FadeInHeading>{`1 ${tokenBDescriptor} = ${displayPoint?.price1} ${tokenADescriptor}`}</FadeInHeading>{displayPoint && displayPoint.tick === activeTick && <FadeInSubheader color=\"neutral2\" paddingTop=\"4px\"><Trans i18nKey=\"pool.activeRange\" /></FadeInSubheader>}</>;\n    return <ChartHeader value={display} />;\n  }}</Chart>;\n}\n","\"use strict\";\nimport { ChartType } from \"components/Charts/utils\";\nimport { checkDataQuality, withUTCTimestamp } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { usePoolPriceChartData } from \"hooks/usePoolPriceChartData\";\nimport { useMemo } from \"react\";\nimport {\n  usePoolVolumeHistoryQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nexport function usePDPPriceChartData(variables, poolData, tokenA, protocolVersion) {\n  return usePoolPriceChartData(variables, tokenA, protocolVersion, poolData?.token0?.address ?? \"\");\n}\nexport function usePDPVolumeChartData(variables) {\n  const { data, loading } = usePoolVolumeHistoryQuery({\n    variables,\n    skip: !variables.addressOrId || variables.addressOrId === \"\"\n  });\n  return useMemo(() => {\n    const { historicalVolume } = data?.v2Pair ?? data?.v3Pool ?? data?.v4Pool ?? {};\n    const entries = historicalVolume?.filter((amt) => amt !== null).map(withUTCTimestamp) ?? [];\n    const dataQuality = checkDataQuality(entries, ChartType.VOLUME, variables.duration);\n    return { chartType: ChartType.VOLUME, entries, loading, dataQuality };\n  }, [data?.v2Pair, data?.v3Pool, data?.v4Pool, loading, variables.duration]);\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nexport const calculateTotalApr = (poolApr, rewardsApr) => {\n  const rewardsAprPercent = new Percent(Math.round(rewardsApr * 100), BIPS_BASE);\n  return poolApr.add(rewardsAprPercent);\n};\n","\"use strict\";\nimport { LpIncentivesAprDisplay } from \"components/LpIncentives/LpIncentivesAprDisplay\";\nimport { calculateTotalApr } from \"components/LpIncentives/utils\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { useFormatter } from \"utils/formatNumbers\";\nexport const PoolDetailsApr = ({ poolApr, rewardsApr }) => {\n  const { t } = useTranslation();\n  const { formatPercent } = useFormatter();\n  const showAprBreakdown = rewardsApr !== void 0 && rewardsApr > 0;\n  const totalApr = rewardsApr ? formatPercent(calculateTotalApr(poolApr, rewardsApr), 2) : `${poolApr.toFixed(2)}%`;\n  return <Flex\n    gap=\"$spacing12\"\n    padding=\"$spacing20\"\n    borderRadius=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    width=\"100%\"\n    flexDirection=\"column\"\n    mt={-24}\n    mb={24}\n    $xl={{ my: 0 }}\n  ><Flex><Text variant=\"body2\" color=\"$neutral2\">{t(\"pool.totalAPR\")}</Text><Text variant=\"heading2\" color=\"$neutral1\" mt=\"$spacing4\">{totalApr}</Text></Flex>{showAprBreakdown && <Flex mt=\"$spacing8\" gap=\"$spacing6\"><Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$gap8\"><Text variant=\"body3\" color=\"$neutral2\">{t(\"pool.apr.base\")}</Text><Text variant=\"body3\" color=\"$neutral1\">{formatPercent(poolApr, 2)}</Text></Flex><Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$gap8\"><Text variant=\"body3\" color=\"$neutral2\">{t(\"pool.apr.reward\")}</Text><LpIncentivesAprDisplay lpIncentiveRewardApr={rewardsApr} hideBackground showTokenSymbol /></Flex></Flex>}</Flex>;\n};\n","\"use strict\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport styled from \"lib/styled-components\";\nexport const DetailBubble = styled(LoadingBubble)`\n  height: ${({ $height }) => $height ? `${$height}px` : \"16px\"};\n  width: ${({ $width }) => $width ? `${$width}px` : \"80px\"};\n`;\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ExternalLink=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"path\",{d:\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"}),React.createElement(\"polyline\",{points:\"15 3 21 3 21 9\"}),React.createElement(\"line\",{x1:\"10\",y1:\"14\",x2:\"21\",y2:\"3\"}))}));ExternalLink.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ExternalLink.displayName=\"ExternalLink\";export default ExternalLink;","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { LpIncentivesAprDisplay } from \"components/LpIncentives/LpIncentivesAprDisplay\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport { PoolDetailsBadge } from \"components/Pools/PoolTable/PoolTable\";\nimport ShareButton from \"components/Tokens/TokenDetails/ShareButton\";\nimport { ActionButtonStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { ReversedArrowsIcon } from \"nft/components/iconExports\";\nimport { useMemo, useState } from \"react\";\nimport { ChevronRight, ExternalLink as ExternalLinkIcon } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { ClickableStyle, ClickableTamaguiStyle, EllipsisStyle } from \"theme/components/styles\";\nimport { textFadeIn } from \"theme/styles\";\nimport { Flex, TouchableArea, useIsTouchDevice, useMedia } from \"ui/src\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  &:hover {\n    // Override hover behavior from ExternalLink\n    opacity: 1;\n  }\n`;\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: 'flex-start';\n  width: 100%;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`;\nconst IconBubble = styled(LoadingBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nexport function PoolDetailsBreadcrumb({ chainId, poolAddress, token0, token1, loading }) {\n  const { defaultChainId } = useEnabledChains();\n  const chainUrlParam = getChainUrlParam(chainId ?? defaultChainId);\n  const exploreOrigin = `/explore/${chainUrlParam}`;\n  const poolsOrigin = `/explore/pools/${chainUrlParam}`;\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to={exploreOrigin}><Trans i18nKey=\"common.explore\" /> <ChevronRight size={14} /></BreadcrumbNavLink><BreadcrumbNavLink to={poolsOrigin}><Trans i18nKey=\"common.pools\" /> <ChevronRight size={14} /></BreadcrumbNavLink>{loading || !poolAddress ? <DetailBubble $width={200} /> : <CurrentPageBreadcrumb address={poolAddress} poolName={`${token0?.symbol} / ${token1?.symbol}`} />}</BreadcrumbNavContainer>;\n}\nconst StyledPoolDetailsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  width: max-content;\n  align-items: center;\n`;\nconst PoolName = styled(ThemedText.HeadlineMedium)`\n  font-size: 24px !important;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    font-size: 18px !important;\n    line-height: 24px !important;\n  }\n`;\nconst PoolDetailsTitle = ({\n  token0,\n  token1,\n  chainId,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n  hookAddress\n}) => {\n  const theme = useTheme();\n  const { formatPercent } = useFormatter();\n  const { defaultChainId } = useEnabledChains();\n  const graphQLChain = toGraphQLChain(chainId ?? defaultChainId);\n  const feePercent = feeTier && formatPercent(new Percent(feeTier, BIPS_BASE * 100));\n  return <StyledPoolDetailsTitle><Flex><PoolName><StyledLink\n    to={getTokenDetailsURL({\n      address: token0?.address,\n      chain: graphQLChain\n    })}\n  >{token0?.symbol}</StyledLink>\r\n          &nbsp;/&nbsp;\r\n          <StyledLink\n    to={getTokenDetailsURL({\n      address: token1?.address,\n      chain: graphQLChain\n    })}\n  >{token1?.symbol}</StyledLink></PoolName></Flex><Flex row gap=\"$gap4\" alignItems=\"center\"><PoolDetailsBadge variant=\"body3\" $position=\"left\">{protocolVersion?.toLowerCase()}</PoolDetailsBadge>{hookAddress && <ExternalLink href={getExplorerLink(chainId ?? defaultChainId, hookAddress, ExplorerDataType.ADDRESS)}><PoolDetailsBadge variant=\"body3\" {...ClickableTamaguiStyle}>{shortenAddress(hookAddress, 0, 4)}</PoolDetailsBadge></ExternalLink>}{!!feePercent && <PoolDetailsBadge variant=\"body3\" $position=\"right\">{feePercent}</PoolDetailsBadge>}</Flex><TouchableArea\n    hoverable\n    {...ClickableTamaguiStyle}\n    onPress={toggleReversed}\n    testID=\"toggle-tokens-reverse-arrows\"\n  ><ReversedArrowsIcon size=\"20px\" color={theme.neutral2} /></TouchableArea></StyledPoolDetailsTitle>;\n};\nconst ContractsDropdownRowContainer = styled(Row)`\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n  gap: 12px;\n  padding: 10px 8px;\n  border-radius: 8px;\n  ${EllipsisStyle}\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`;\nconst ContractsDropdownRow = ({\n  address,\n  chainId,\n  tokens\n}) => {\n  const theme = useTheme();\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const isPool = tokens.length === 2;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const isNative = address === NATIVE_CHAIN_ID;\n  const explorerUrl = chainId && address && getExplorerLink(\n    chainId,\n    address,\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  if (!chainId || !explorerUrl) {\n    return <ContractsDropdownRowContainer><DetailBubble $width={117} /></ContractsDropdownRowContainer>;\n  }\n  return <StyledExternalLink href={explorerUrl}><ContractsDropdownRowContainer><Row gap=\"sm\">{isPool ? <DoubleCurrencyLogo currencies={currencies} size={24} /> : <CurrencyLogo currency={currency} size={24} />}<ThemedText.BodyPrimary>{isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.symbol}</ThemedText.BodyPrimary><ThemedText.BodySecondary>{shortenAddress(address)}</ThemedText.BodySecondary></Row><ExternalLinkIcon size=\"16px\" stroke={theme.neutral2} /></ContractsDropdownRowContainer></StyledExternalLink>;\n};\nconst PoolDetailsHeaderActions = ({\n  chainId,\n  poolAddress,\n  poolName,\n  token0,\n  token1,\n  protocolVersion\n}) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const isTouchDevice = useIsTouchDevice();\n  const [contractsModalIsOpen, toggleContractsModal] = useState(false);\n  return <Row width=\"max-content\" justify=\"flex-end\" gap=\"sm\"><DropdownSelector\n    isOpen={contractsModalIsOpen}\n    toggleOpen={toggleContractsModal}\n    menuLabel={chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={theme.neutral1} />}\n    tooltipText={isTouchDevice ? void 0 : t(\"pool.explorers\")}\n    hideChevron\n    buttonStyle={ActionButtonStyle}\n    dropdownStyle={{ minWidth: 235 }}\n    alignRight\n  ><>{protocolVersion !== ProtocolVersion.V4 && <ContractsDropdownRow address={poolAddress} chainId={chainId} tokens={[token0, token1]} />}<ContractsDropdownRow address={token0?.address} chainId={chainId} tokens={[token0]} /><ContractsDropdownRow address={token1?.address} chainId={chainId} tokens={[token1]} /></></DropdownSelector><ShareButton name={poolName} utmSource=\"share-pool\" /></Row>;\n};\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  ${ClickableStyle}\n`;\nexport function PoolDetailsHeader({\n  chainId,\n  poolAddress,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  hookAddress,\n  toggleReversed,\n  loading,\n  rewardsApr\n}) {\n  const media = useMedia();\n  const shouldColumnBreak = media.md;\n  const poolName = `${token0?.symbol} / ${token1?.symbol}`;\n  const currencies = useMemo(\n    () => token0 && token1 ? [gqlToCurrency(token0), gqlToCurrency(token1)] : [],\n    [token0, token1]\n  );\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const showRewards = isLPIncentivesEnabled && rewardsApr && rewardsApr > 0;\n  if (loading) {\n    return <HeaderContainer data-testid=\"pdp-header-loading-skeleton\">{shouldColumnBreak ? <Column gap=\"sm\" style={{ width: \"100%\" }}><IconBubble /><DetailBubble $height={40} $width={137} /></Column> : <Row gap=\"sm\"><IconBubble /><DetailBubble $height={40} $width={137} /></Row>}</HeaderContainer>;\n  }\n  return <HeaderContainer>{shouldColumnBreak ? <Flex gap=\"$spacing4\" width=\"100%\"><Flex row gap=\"$spacing8\" justifyContent=\"space-between\"><DoubleCurrencyLogo currencies={currencies} data-testid=\"double-token-logo\" /><PoolDetailsHeaderActions\n    chainId={chainId}\n    poolAddress={poolAddress}\n    poolName={poolName}\n    token0={token0}\n    token1={token1}\n    protocolVersion={protocolVersion}\n  /></Flex><PoolDetailsTitle\n    token0={token0}\n    token1={token1}\n    chainId={chainId}\n    feeTier={feeTier}\n    protocolVersion={protocolVersion}\n    toggleReversed={toggleReversed}\n  />{showRewards && <LpIncentivesAprDisplay lpIncentiveRewardApr={rewardsApr} hideBackground />}</Flex> : <Flex row gap={showRewards ? \"$spacing16\" : \"$spacing12\"} alignItems=\"center\" width=\"100%\"><DoubleCurrencyLogo size={showRewards ? 56 : 30} currencies={currencies} data-testid=\"double-token-logo\" /><Flex flex={1}><Flex row justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\"><PoolDetailsTitle\n    token0={token0}\n    token1={token1}\n    chainId={chainId}\n    feeTier={feeTier}\n    protocolVersion={protocolVersion}\n    toggleReversed={toggleReversed}\n    hookAddress={hookAddress}\n  /><PoolDetailsHeaderActions\n    chainId={chainId}\n    poolAddress={poolAddress}\n    poolName={poolName}\n    token0={token0}\n    token1={token1}\n    protocolVersion={protocolVersion}\n  /></Flex>{showRewards && <LpIncentivesAprDisplay lpIncentiveRewardApr={rewardsApr} hideBackground />}</Flex></Flex>}</HeaderContainer>;\n}\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { ChevronRight, Copy } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { ClickableStyle, EllipsisStyle } from \"theme/components/styles\";\nimport { Flex } from \"ui/src\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { TokenStandard } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { isAddress, shortenAddress } from \"utilities/src/addresses\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nconst TokenName = styled(ThemedText.BodyPrimary)`\n  display: none;\n\n  @media (max-width: ${breakpoints.xl}px) and (min-width: ${breakpoints.xs}px) {\n    display: block;\n  }\n  ${EllipsisStyle}\n`;\nconst TokenTextWrapper = styled(Row)`\n  gap: 8px;\n  margin-right: 12px;\n  ${EllipsisStyle}\n  ${({ isClickable }) => isClickable && ClickableStyle}\n`;\nconst SymbolText = styled(ThemedText.BodyPrimary)`\n  flex-shrink: 0;\n\n  @media (max-width: ${breakpoints.xl}px) and (min-width: ${breakpoints.xs}px) {\n    color: ${({ theme }) => theme.neutral2};\n  }\n`;\nconst CopyAddress = styled(Row)`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  flex-shrink: 0;\n  ${ClickableStyle}\n`;\nconst StyledCopyIcon = styled(Copy)`\n  width: 16px;\n  height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  flex-shrink: 0;\n`;\nconst ExplorerWrapper = styled.div`\n  padding: 8px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  display: flex;\n  ${ClickableStyle}\n`;\nconst ButtonsRow = styled(Row)`\n  gap: 8px;\n  flex-shrink: 0;\n  width: max-content;\n`;\nexport function PoolDetailsLink({ address, chainId, tokens, loading }) {\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    const checksummedAddress = isAddress(address);\n    checksummedAddress && setCopied(checksummedAddress);\n  }, [address, setCopied]);\n  const isPool = tokens.length === 2;\n  const isNative = address === NATIVE_CHAIN_ID || tokens[0] && !isPool && tokens[0].standard === TokenStandard.Native;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const explorerUrl = chainId && getExplorerLink(\n    chainId,\n    address ?? \"\",\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  const navigate = useNavigate();\n  const { defaultChainId } = useEnabledChains();\n  const chainUrlParam = getChainUrlParam(chainId ?? defaultChainId);\n  const handleTokenTextClick = useCallback(() => {\n    if (!isPool) {\n      navigate(getTokenDetailsURL({ address: tokens[0]?.address, chainUrlParam }));\n    }\n  }, [navigate, tokens, isPool, chainUrlParam]);\n  const [truncateAddress, setTruncateAddress] = useState(false);\n  const onTextRender = useCallback(\n    (textRef) => {\n      if (textRef) {\n        const hasOverflow = textRef.clientWidth < textRef.scrollWidth;\n        if (hasOverflow) {\n          setTruncateAddress((prev) => prev ? \"both\" : \"start\");\n        }\n      }\n    },\n    // This callback must run after it sets truncateAddress to 'start' to see if it needs to 'both'.\n    // It checks if the textRef has overflow, and sets truncateAddress accordingly to avoid it.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [truncateAddress]\n  );\n  if (loading || !chainId) {\n    return <Flex gap=\"$spacing8\"><LoadingBubble containerWidth=\"100%\" width=\"100%\" /><LoadingBubble containerWidth=\"100%\" width=\"100%\" /></Flex>;\n  }\n  return <Row align=\"space-between\"><TokenTextWrapper\n    data-testid={isPool ? `pdp-pool-logo-${tokens[0]?.symbol}-${tokens[1]?.symbol}` : `pdp-token-logo-${tokens[0]?.symbol}`}\n    isClickable={!isPool}\n    onClick={handleTokenTextClick}\n    ref={onTextRender}\n  >{isPool ? <DoubleCurrencyLogo currencies={currencies} size={20} /> : <CurrencyLogo currency={currency} size={20} />}<TokenName>{isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.name}</TokenName><SymbolText>{isPool ? `${tokens[0]?.symbol} / ${tokens[1]?.symbol}` : <Row gap=\"4px\">{tokens[0]?.symbol} <ChevronRight size={16} color={theme.neutral2} /></Row>}</SymbolText></TokenTextWrapper><ButtonsRow>{!isNative && <MouseoverTooltip\n    disabled\n    forceShow={isCopied}\n    placement=\"bottom\"\n    size={TooltipSize.Max}\n    text={t(\"common.copied\")}\n  ><CopyAddress data-testid={`copy-address-${address}`} onClick={copy}>{shortenAddress(address, truncateAddress ? 2 : void 0, truncateAddress === \"both\" ? 2 : void 0)}<StyledCopyIcon /></CopyAddress></MouseoverTooltip>}{explorerUrl && <ExternalLink href={explorerUrl} data-testid={`explorer-url-${explorerUrl}`}><ExplorerWrapper>{chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"16px\" height=\"16px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"16px\" height=\"16px\" fill={theme.neutral1} />}</ExplorerWrapper></ExternalLink>}</ButtonsRow></Row>;\n}\n","\"use strict\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport { DeltaArrow } from \"components/Tokens/TokenDetails/Delta\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, unwrapToken } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport styled, { css, useTheme } from \"lib/styled-components\";\nimport { useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { ThemedText } from \"theme/components\";\nimport { ClickableStyle } from \"theme/components/styles\";\nimport { Flex, useMedia } from \"ui/src\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst HeaderText = styled(Text)`\n  font-weight: 485;\n  font-size: 24px;\n  line-height: 36px;\n  @media (max-width: ${breakpoints.xl}px) {\n    width: 100%;\n  }\n`;\nconst StatsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  width: 100%;\n  z-index: 1;\n  margin-top: ${({ loaded }) => loaded && \"-24px\"};\n\n  @media (max-width: ${breakpoints.xl}px) {\n    flex-direction: row;\n    background: transparent;\n    flex-wrap: wrap;\n    padding: 20px 0px;\n    justify-content: space-between;\n    margin-top: 0px;\n  }\n`;\nconst StatItemColumn = styled(Column)`\n  gap: 8px;\n  flex: 1;\n  min-width: 180px;\n\n  @media (max-width: ${breakpoints.md}px) {\n    min-width: 150px;\n  }\n`;\nconst PoolBalanceSymbols = styled(Row)`\n  justify-content: space-between;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    flex-direction: column;\n  }\n`;\nconst PoolBalanceTokenNamesContainer = styled(Row)`\n  font-weight: 485;\n  font-size: 16px;\n  line-height: 24px;\n  width: max-content;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    font-size: 20px;\n    line-height: 28px;\n    width: 100%;\n  }\n`;\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`;\nconst leftBarChartStyles = css`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-right: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst rightBarChartStyles = css`\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-left: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst BalanceChartSide = styled.div`\n  height: 8px;\n  width: ${({ percent }) => percent * 100}%;\n  background: ${({ $color }) => $color};\n  ${({ isLeft }) => isLeft ? leftBarChartStyles : rightBarChartStyles}\n`;\nconst StatSectionBubble = styled(LoadingBubble)`\n  width: 180px;\n  height: 40px;\n`;\nconst StatHeaderBubble = styled(LoadingBubble)`\n  width: 116px;\n  height: 24px;\n  border-radius: 8px;\n`;\nconst PoolBalanceTokenNames = ({ token, chainId }) => {\n  const media = useMedia();\n  const isLargeScreen = !media.xl;\n  const { formatNumber } = useFormatter();\n  const unwrappedToken = chainId ? unwrapToken(chainId, token) : token;\n  const isNative = unwrappedToken?.address === NATIVE_CHAIN_ID;\n  const currency = isNative && chainId ? nativeOnChain(chainId) : token.currency;\n  const { defaultChainId } = useEnabledChains();\n  return <PoolBalanceTokenNamesContainer><Flex row alignItems=\"center\" gap=\"$spacing4\">{!isLargeScreen && <CurrencyLogo currency={currency} size={20} />}{formatNumber({\n    input: token.tvl,\n    type: NumberType.TokenQuantityStats\n  })}<StyledLink\n    to={getTokenDetailsURL({\n      address: unwrappedToken.address,\n      chain: toGraphQLChain(chainId ?? defaultChainId)\n    })}\n  >{unwrappedToken.symbol}</StyledLink></Flex></PoolBalanceTokenNamesContainer>;\n};\nexport function PoolDetailsStats({ poolData, isReversed, chainId, loading }) {\n  const media = useMedia();\n  const isLargeScreen = !media.xl;\n  const theme = useTheme();\n  const currency0 = useCurrency(poolData?.token0?.address, chainId);\n  const currency1 = useCurrency(poolData?.token1?.address, chainId);\n  const [token0, token1] = useMemo(() => {\n    if (poolData && poolData.tvlToken0 && poolData.token0Price && poolData.tvlToken1 && poolData.token1Price) {\n      const fullWidth = poolData?.tvlToken0 * poolData?.token0Price + poolData?.tvlToken1 * poolData?.token1Price;\n      const token0FullData = {\n        ...poolData?.token0,\n        price: poolData?.token0Price,\n        tvl: poolData?.tvlToken0,\n        percent: poolData?.tvlToken0 * poolData?.token0Price / fullWidth,\n        currency: currency0\n      };\n      const token1FullData = {\n        ...poolData?.token1,\n        price: poolData?.token1Price,\n        tvl: poolData?.tvlToken1,\n        percent: poolData?.tvlToken1 * poolData?.token1Price / fullWidth,\n        currency: currency1\n      };\n      return isReversed ? [token1FullData, token0FullData] : [token0FullData, token1FullData];\n    } else {\n      return [void 0, void 0];\n    }\n  }, [currency0, currency1, isReversed, poolData]);\n  if (loading || !token0 || !token1 || !poolData) {\n    return <StatsWrapper><HeaderText><StatHeaderBubble /></HeaderText>{Array.from({ length: 4 }).map((_, i) => <Column gap=\"md\" key={`loading-info-row-${i}`}><DetailBubble /><StatSectionBubble /></Column>)}</StatsWrapper>;\n  }\n  return <StatsWrapper loaded><HeaderText><Trans i18nKey=\"common.stats\" /></HeaderText><StatItemColumn><ThemedText.BodySecondary><Trans i18nKey=\"pool.balances\" /></ThemedText.BodySecondary><PoolBalanceSymbols><PoolBalanceTokenNames token={token0} chainId={chainId} /><PoolBalanceTokenNames token={token1} chainId={chainId} /></PoolBalanceSymbols>{isLargeScreen && <Row data-testid=\"pool-balance-chart\"><BalanceChartSide percent={token0.percent} $color={theme.token0} isLeft={true} /><BalanceChartSide percent={token1.percent} $color={theme.token1} isLeft={false} /></Row>}</StatItemColumn>{poolData?.tvlUSD && <StatItem\n    title={<Trans i18nKey=\"common.totalValueLocked\" />}\n    value={poolData.tvlUSD}\n    delta={poolData.tvlUSDChange}\n  />}{poolData?.volumeUSD24H !== void 0 && <StatItem\n    title={<Trans i18nKey=\"stats.24volume\" />}\n    value={poolData.volumeUSD24H}\n    delta={poolData.volumeUSD24HChange}\n  />}{poolData?.volumeUSD24H !== void 0 && poolData?.feeTier !== void 0 && <StatItem\n    title={<Trans i18nKey=\"stats.24fees\" />}\n    value={poolData.volumeUSD24H * (poolData.feeTier / 1e6)}\n  />}</StatsWrapper>;\n}\nconst StatsTextContainer = styled(Row)`\n  gap: 4px;\n  width: 100%;\n  align-items: flex-end;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    flex-direction: column;\n    gap: 0px;\n    align-items: flex-start;\n  }\n`;\nconst StatItemText = styled(Text)`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 36px;\n  font-weight: 485;\n  line-height: 44px;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`;\nfunction StatItem({ title, value, delta }) {\n  const { formatNumber, formatDelta } = useFormatter();\n  return <StatItemColumn><ThemedText.BodySecondary>{title}</ThemedText.BodySecondary><StatsTextContainer><StatItemText>{formatNumber({\n    input: value,\n    type: NumberType.FiatTokenStats\n  })}</StatItemText>{!!delta && <Flex row width=\"max-content\" py=\"$spacing4\" $lg={{ py: 0 }}><DeltaArrow delta={delta} /><ThemedText.BodySecondary>{formatDelta(delta)}</ThemedText.BodySecondary></Flex>}</StatsTextContainer></StatItemColumn>;\n}\n","export const DEFAULT_ERC20_DECIMALS = 18;\n","\"use strict\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport { INTERNAL_JSON_RPC_ERROR_CODE } from \"constants/misc\";\nimport { Interface } from \"ethers/lib/utils\";\nimport ERC20_ABI from \"uniswap/src/abis/erc20.json\";\nimport { isAddress } from \"utilities/src/addresses\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { DEFAULT_ERC20_DECIMALS } from \"utilities/src/tokens/constants\";\nimport { arrayToSlices } from \"utils/arrays\";\nimport { buildCurrencyKey, currencyKey } from \"utils/currencyKey\";\nexport const DEFAULT_GAS_LIMIT = 1e6;\nconst Erc20 = new Interface(ERC20_ABI);\nconst Erc20Bytes32 = new Interface(ERC20_ABI);\nasync function fetchChunk(multicall, chunk) {\n  try {\n    return (await multicall.callStatic.multicall(chunk)).returnData;\n  } catch (error) {\n    if (error.code === INTERNAL_JSON_RPC_ERROR_CODE || error.message?.indexOf(\"execution ran out of gas\") !== -1) {\n      if (chunk.length > 1) {\n        const half = Math.floor(chunk.length / 2);\n        return Promise.all([\n          fetchChunk(multicall, chunk.slice(0, half)),\n          fetchChunk(multicall, chunk.slice(half, chunk.length))\n        ]).then(([c0, c1]) => [...c0, ...c1]);\n      }\n    }\n    logger.debug(\"getTokensAsync\", \"fetchChunk\", \"Error fetching chunk\", { error, extra: { chunk } });\n    throw error;\n  }\n}\nfunction tryParseToken(address, chainId, data) {\n  try {\n    const [nameData, symbolData, decimalsData, nameDataBytes32, symbolDataBytes32] = data;\n    const name = nameData.success ? Erc20.decodeFunctionResult(\"name\", nameData.returnData)[0] : nameDataBytes32.success ? Erc20Bytes32.decodeFunctionResult(\"name\", nameDataBytes32.returnData)[0] : void 0;\n    const symbol = symbolData.success ? Erc20.decodeFunctionResult(\"symbol\", symbolData.returnData)[0] : symbolDataBytes32.success ? Erc20Bytes32.decodeFunctionResult(\"symbol\", symbolDataBytes32.returnData)[0] : void 0;\n    const decimals = decimalsData.success ? parseInt(decimalsData.returnData) : DEFAULT_ERC20_DECIMALS;\n    return new Token(chainId, address, decimals, symbol, name);\n  } catch (error) {\n    logger.debug(\"getTokensAsync\", \"tryParseToken\", \"Failed to parse token\", { error, address, chainId });\n    return void 0;\n  }\n}\nfunction parseTokens(addresses, chainId, returnData) {\n  const tokenDataSlices = arrayToSlices(returnData, 5);\n  return tokenDataSlices.reduce((acc, slice, index) => {\n    const parsedToken = tryParseToken(addresses[index], chainId, slice);\n    if (parsedToken) {\n      acc[parsedToken.address] = parsedToken;\n    }\n    return acc;\n  }, {});\n}\nconst createCalls = (target, callData) => callData.map((callData2) => ({ target, callData: callData2, gasLimit: DEFAULT_GAS_LIMIT }));\nfunction createCallsForToken(address) {\n  return createCalls(address, [\n    Erc20.encodeFunctionData(\"name\"),\n    Erc20.encodeFunctionData(\"symbol\"),\n    Erc20.encodeFunctionData(\"decimals\"),\n    Erc20Bytes32.encodeFunctionData(\"name\"),\n    Erc20Bytes32.encodeFunctionData(\"symbol\")\n  ]);\n}\nconst TokenPromiseCache = {};\nexport async function getTokensAsync(addresses, chainId, multicall) {\n  if (addresses.length === 0) {\n    return {};\n  }\n  const formattedAddresses = [];\n  const calls = [];\n  const previouslyCalledTokens = [];\n  addresses.forEach((tokenAddress) => {\n    const key = buildCurrencyKey(chainId, tokenAddress);\n    const previousCall = TokenPromiseCache[key];\n    if (previousCall !== void 0) {\n      previouslyCalledTokens.push(previousCall);\n    } else {\n      const formattedAddress = isAddress(tokenAddress);\n      if (!formattedAddress) {\n        return;\n      }\n      formattedAddresses.push(formattedAddress);\n      calls.push(...createCallsForToken(formattedAddress));\n    }\n  });\n  const calledTokens = fetchChunk(multicall, calls).then((returnData) => parseTokens(addresses, chainId, returnData));\n  formattedAddresses.forEach(\n    (address) => TokenPromiseCache[buildCurrencyKey(chainId, address)] = calledTokens.then((tokenMap2) => tokenMap2[address])\n  );\n  const tokenMap = await calledTokens;\n  const resolvedPreviousTokens = await Promise.all(previouslyCalledTokens);\n  resolvedPreviousTokens.forEach((token) => token && (tokenMap[currencyKey(token)] = token));\n  return tokenMap;\n}\n","\"use strict\";\nexport function arrayToSlices(items, size) {\n  if (items.length % size !== 0) {\n    throw new Error(\"Input array length must be a multiple of desired output size\");\n  }\n  return Array.from({ length: Math.floor(items.length / size) }, (_v, i) => items.slice(i * size, i * size + size));\n}\n","\"use strict\";\nimport { MULTICALL_ADDRESSES, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES as V3NFT_ADDRESSES } from \"@uniswap/sdk-core\";\nimport NFTPositionManagerJSON from \"@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\";\nimport MulticallJSON from \"@uniswap/v3-periphery/artifacts/contracts/lens/UniswapInterfaceMulticall.sol/UniswapInterfaceMulticall.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { RPC_PROVIDERS } from \"constants/providers\";\nimport { toContractInput } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useMemo } from \"react\";\nimport {\n  useUniswapPricesQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { useIsSupportedChainIdCallback } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { getContract } from \"utilities/src/contracts/getContract\";\nimport { currencyKey, currencyKeyFromGraphQL } from \"utils/currencyKey\";\nfunction useContractMultichain(addressMap, ABI, chainIds) {\n  const account = useAccount();\n  const { provider: walletProvider } = useWeb3React();\n  const isSupportedChain = useIsSupportedChainIdCallback();\n  return useMemo(() => {\n    const relevantChains = chainIds ?? Object.keys(addressMap).map((chainId) => parseInt(chainId)).filter((chainId) => isSupportedChain(chainId));\n    return relevantChains.reduce((acc, chainId) => {\n      const provider = walletProvider && account.chainId === chainId ? walletProvider : isSupportedChain(chainId) ? RPC_PROVIDERS[chainId] : void 0;\n      if (provider) {\n        acc[chainId] = getContract(addressMap[chainId] ?? \"\", ABI, provider);\n      }\n      return acc;\n    }, {});\n  }, [ABI, addressMap, chainIds, isSupportedChain, account.chainId, walletProvider]);\n}\nexport function useV3ManagerContracts(chainIds) {\n  return useContractMultichain(V3NFT_ADDRESSES, NFTPositionManagerJSON.abi, chainIds);\n}\nexport function useInterfaceMulticallContracts(chainIds) {\n  return useContractMultichain(MULTICALL_ADDRESSES, MulticallJSON.abi, chainIds);\n}\nexport function usePoolPriceMap(positions) {\n  const { defaultChainId } = useEnabledChains();\n  const contracts = useMemo(() => {\n    if (!positions || !positions.length) {\n      return [];\n    }\n    const contractMap = positions.reduce((acc, { pool: { token0, token1 } }) => {\n      acc[currencyKey(token0)] = toContractInput(token0, defaultChainId);\n      acc[currencyKey(token1)] = toContractInput(token1, defaultChainId);\n      return acc;\n    }, {});\n    return Object.values(contractMap);\n  }, [defaultChainId, positions]);\n  const { data, loading } = useUniswapPricesQuery({ variables: { contracts }, skip: !contracts.length });\n  const priceMap = useMemo(\n    () => data?.tokens?.reduce((acc, current) => {\n      if (current) {\n        acc[currencyKeyFromGraphQL(current)] = current.project?.markets?.[0]?.price?.value;\n      }\n      return acc;\n    }, {}) ?? {},\n    [data?.tokens]\n  );\n  return { priceMap, pricesLoading: loading && !data };\n}\n","\"use strict\";\nimport { getTokensAsync } from \"components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync\";\nimport { useInterfaceMulticallContracts } from \"components/AccountDrawer/MiniPortfolio/Pools/hooks\";\nimport { atom, useAtom } from \"jotai\";\nimport { atomWithStorage } from \"jotai/utils\";\nimport ms from \"ms\";\nimport { useCallback } from \"react\";\nimport { deserializeToken, serializeToken } from \"uniswap/src/utils/currency\";\nimport { buildCurrencyKey, currencyKey } from \"utils/currencyKey\";\nconst POSITION_CACHE_EXPIRY = ms(`1m`);\nconst cachedPositionsAtom = atom({});\nexport function useCachedPositions(account) {\n  const [cachedPositions, setCachedPositions] = useAtom(cachedPositionsAtom);\n  const setPositionsAndStaleTimeout = useCallback(\n    (positions) => {\n      setCachedPositions((cache) => ({ ...cache, [account]: { result: positions, stale: false } }));\n      setTimeout(\n        () => setCachedPositions((cache) => {\n          if (positions === cache[account]?.result) {\n            return { ...cache, [account]: { result: positions, stale: true } };\n          } else {\n            return cache;\n          }\n        }),\n        POSITION_CACHE_EXPIRY\n      );\n    },\n    [account, setCachedPositions]\n  );\n  return [cachedPositions[account], setPositionsAndStaleTimeout];\n}\nconst poolAddressKey = (details, chainId) => `${chainId}-${details.token0}-${details.token1}-${details.fee}`;\nconst poolAddressCacheAtom = atomWithStorage(\"poolCache\", {});\nexport function usePoolAddressCache() {\n  const [cache, updateCache] = useAtom(poolAddressCacheAtom);\n  const get = useCallback(\n    (details, chainId) => cache[poolAddressKey(details, chainId)],\n    [cache]\n  );\n  const set = useCallback(\n    (details, chainId, address) => updateCache((c) => ({ ...c, [poolAddressKey(details, chainId)]: address })),\n    [updateCache]\n  );\n  return { get, set };\n}\nconst tokenCacheAtom = atomWithStorage(\"cachedAsyncTokens\", {});\nfunction useTokenCache() {\n  const [cache, setCache] = useAtom(tokenCacheAtom);\n  const get = useCallback(\n    (chainId, address) => {\n      const entry = cache[buildCurrencyKey(chainId, address)];\n      return entry ? deserializeToken(entry) : void 0;\n    },\n    [cache]\n  );\n  const set = useCallback(\n    (token) => {\n      if (token) {\n        setCache((cache2) => ({ ...cache2, [currencyKey(token)]: serializeToken(token) }));\n      }\n    },\n    [setCache]\n  );\n  return { get, set };\n}\nexport function useGetCachedTokens(chains) {\n  const multicallContracts = useInterfaceMulticallContracts(chains);\n  const tokenCache = useTokenCache();\n  const fetchRemoteTokens = useCallback(\n    async (addresses, chainId) => {\n      const fetched = await getTokensAsync(addresses, chainId, multicallContracts[chainId]);\n      Object.values(fetched).forEach(tokenCache.set);\n      return fetched;\n    },\n    [multicallContracts, tokenCache]\n  );\n  const getTokens = useCallback(\n    async (addresses, chainId) => {\n      const local = {};\n      const missing = /* @__PURE__ */ new Set();\n      addresses.forEach((address) => {\n        const cached = tokenCache.get(chainId, address);\n        cached ? local[address] = cached : missing.add(address);\n      });\n      const fetched = await fetchRemoteTokens([...missing], chainId);\n      return { ...local, ...fetched };\n    },\n    [fetchRemoteTokens, tokenCache]\n  );\n  return getTokens;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { CurrencyAmount, Token, V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport IUniswapV3PoolStateJSON from \"@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json\";\nimport { Pool, Position, computePoolAddress } from \"@uniswap/v3-sdk\";\nimport {\n  useCachedPositions,\n  useGetCachedTokens,\n  usePoolAddressCache\n} from \"components/AccountDrawer/MiniPortfolio/Pools/cache\";\nimport { DEFAULT_GAS_LIMIT } from \"components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync\";\nimport {\n  useInterfaceMulticallContracts,\n  usePoolPriceMap,\n  useV3ManagerContracts\n} from \"components/AccountDrawer/MiniPortfolio/Pools/hooks\";\nimport { Interface } from \"ethers/lib/utils\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { DEFAULT_ERC20_DECIMALS } from \"utilities/src/tokens/constants\";\nimport { currencyKey } from \"utils/currencyKey\";\nfunction createPositionInfo(owner, chainId, details, slot0, tokenA, tokenB) {\n  const pool = new Pool(tokenA, tokenB, details.fee, slot0.sqrtPriceX96.toString(), 0, slot0.tick);\n  const position = new Position({\n    pool,\n    liquidity: details.liquidity.toString(),\n    tickLower: details.tickLower,\n    tickUpper: details.tickUpper\n  });\n  const inRange = slot0.tick >= details.tickLower && slot0.tick < details.tickUpper;\n  const closed = details.liquidity.eq(0);\n  return { owner, chainId, pool, position, details, inRange, closed };\n}\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1);\nexport default function useMultiChainPositions(account) {\n  const { chains } = useEnabledChains();\n  const pms = useV3ManagerContracts(chains);\n  const multicalls = useInterfaceMulticallContracts(chains);\n  const getTokens = useGetCachedTokens(chains);\n  const poolAddressCache = usePoolAddressCache();\n  const [cachedPositions, setPositions] = useCachedPositions(account);\n  const positions = cachedPositions?.result;\n  const positionsFetching = useRef(false);\n  const positionsLoading = !cachedPositions?.result && positionsFetching.current;\n  const [feeMap, setFeeMap] = useState({});\n  const { priceMap, pricesLoading } = usePoolPriceMap(positions);\n  const fetchPositionFees = useCallback(\n    async (pm, positionIds, chainId) => {\n      const callData = positionIds.map(\n        (id) => pm.interface.encodeFunctionData(\"collect\", [\n          { tokenId: id, recipient: account, amount0Max: MAX_UINT128, amount1Max: MAX_UINT128 }\n        ])\n      );\n      const fees = (await pm.callStatic.multicall(callData)).reduce(\n        (acc, feeBytes, index) => {\n          const key = chainId.toString() + positionIds[index];\n          acc[key] = pm.interface.decodeFunctionResult(\"collect\", feeBytes);\n          return acc;\n        },\n        {}\n      );\n      setFeeMap((prev) => ({ ...prev, ...fees }));\n    },\n    [account]\n  );\n  const fetchPositionIds = useCallback(\n    async (pm, balance) => {\n      const callData = Array.from(\n        { length: balance.toNumber() },\n        (_, i) => pm.interface.encodeFunctionData(\"tokenOfOwnerByIndex\", [account, i])\n      );\n      return (await pm.callStatic.multicall(callData)).map((idByte) => BigNumber.from(idByte));\n    },\n    [account]\n  );\n  const fetchPositionDetails = useCallback(async (pm, positionIds) => {\n    const callData = positionIds.map((id) => pm.interface.encodeFunctionData(\"positions\", [id]));\n    return (await pm.callStatic.multicall(callData)).map(\n      (positionBytes, index) => ({\n        ...pm.interface.decodeFunctionResult(\"positions\", positionBytes),\n        tokenId: positionIds[index]\n      })\n    );\n  }, []);\n  const fetchPositionInfo = useCallback(\n    async (positionDetails, chainId, multicall) => {\n      const poolInterface = new Interface(IUniswapV3PoolStateJSON.abi);\n      const tokens = await getTokens(\n        positionDetails.flatMap((details) => [details.token0, details.token1]),\n        chainId\n      );\n      const calls = [];\n      const poolPairs = [];\n      positionDetails.forEach((details) => {\n        const tokenA = tokens[details.token0] ?? new Token(chainId, details.token0, DEFAULT_ERC20_DECIMALS);\n        const tokenB = tokens[details.token1] ?? new Token(chainId, details.token1, DEFAULT_ERC20_DECIMALS);\n        let poolAddress = poolAddressCache.get(details, chainId);\n        if (!poolAddress) {\n          const factoryAddress = V3_CORE_FACTORY_ADDRESSES[chainId];\n          poolAddress = computePoolAddress({\n            factoryAddress,\n            tokenA,\n            tokenB,\n            fee: details.fee,\n            chainId: getChainInfo(chainId).sdkId\n          });\n          poolAddressCache.set(details, chainId, poolAddress);\n        }\n        poolPairs.push([tokenA, tokenB]);\n        calls.push({\n          target: poolAddress,\n          callData: poolInterface.encodeFunctionData(\"slot0\"),\n          gasLimit: DEFAULT_GAS_LIMIT\n        });\n      }, []);\n      return (await multicall.callStatic.multicall(calls)).returnData.reduce((acc, result, i) => {\n        if (result.success) {\n          const slot0 = poolInterface.decodeFunctionResult(\"slot0\", result.returnData);\n          acc.push(createPositionInfo(account, chainId, positionDetails[i], slot0, ...poolPairs[i]));\n        } else {\n          logger.debug(\"useMultiChainPositions\", \"fetchPositionInfo\", \"slot0 fetch errored\", result);\n        }\n        return acc;\n      }, []);\n    },\n    [account, poolAddressCache, getTokens]\n  );\n  const fetchPositionsForChain = useCallback(\n    async (chainId) => {\n      if (!account || account.length === 0) {\n        return [];\n      }\n      try {\n        const pm = pms[chainId];\n        const multicall = multicalls[chainId];\n        const balance = await pm?.balanceOf(account);\n        if (!pm || !multicall || balance.lt(1)) {\n          return [];\n        }\n        const positionIds = await fetchPositionIds(pm, balance);\n        fetchPositionFees(pm, positionIds, chainId);\n        const postionDetails = await fetchPositionDetails(pm, positionIds);\n        return fetchPositionInfo(postionDetails, chainId, multicall);\n      } catch (error) {\n        const wrappedError = new Error(\"Failed to fetch positions for chain\", { cause: error });\n        logger.debug(\"useMultiChainPositions\", \"fetchPositionsForChain\", wrappedError.message, {\n          error: wrappedError,\n          chainId\n        });\n        return [];\n      }\n    },\n    [account, fetchPositionDetails, fetchPositionFees, fetchPositionIds, fetchPositionInfo, pms, multicalls]\n  );\n  const fetchAllPositions = useCallback(async () => {\n    positionsFetching.current = true;\n    const positions2 = (await Promise.all(chains.map(fetchPositionsForChain))).flat();\n    positionsFetching.current = false;\n    setPositions(positions2);\n  }, [chains, fetchPositionsForChain, setPositions]);\n  useEffect(() => {\n    if (positionsFetching.current || cachedPositions?.stale === false) {\n      return void 0;\n    } else if (document.hasFocus()) {\n      fetchAllPositions();\n    } else {\n      const onFocus = () => {\n        fetchAllPositions();\n        window.removeEventListener(\"focus\", onFocus);\n      };\n      window.addEventListener(\"focus\", onFocus);\n      return () => {\n        window.removeEventListener(\"focus\", onFocus);\n      };\n    }\n    return void 0;\n  }, [fetchAllPositions, positionsFetching, cachedPositions?.stale]);\n  const positionsWithFeesAndPrices = useMemo(\n    () => positions?.map((position) => {\n      const key = position.chainId.toString() + position.details.tokenId;\n      const fees = feeMap[key] ? [\n        // We parse away from SDK/ethers types so fees can be multiplied by primitive number prices\n        parseFloat(CurrencyAmount.fromRawAmount(position.pool.token0, feeMap[key]?.[0].toString()).toExact()),\n        parseFloat(CurrencyAmount.fromRawAmount(position.pool.token1, feeMap[key]?.[1].toString()).toExact())\n      ] : void 0;\n      const prices = [priceMap[currencyKey(position.pool.token0)], priceMap[currencyKey(position.pool.token1)]];\n      return { ...position, fees, prices };\n    }),\n    [feeMap, positions, priceMap]\n  );\n  return { positions: positionsWithFeesAndPrices, loading: pricesLoading || positionsLoading };\n}\n","\"use strict\";\nimport useMultiChainPositions from \"components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions\";\nimport { Scrim } from \"components/AccountDrawer/Scrim\";\nimport { CurrencySelect } from \"components/CurrencyInputPanel/SwapCurrencyInputPanel\";\nimport { MobileBottomBar } from \"components/NavBar/MobileBottomBar\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { gqlToCurrency } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { ScrollDirection, useScroll } from \"hooks/useScroll\";\nimport styled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useCallback, useReducer, useState } from \"react\";\nimport { Plus, X } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Button, Flex, Spacer, useIsTouchDevice, useMedia } from \"ui/src\";\nimport { CoinConvert } from \"ui/src/components/icons/CoinConvert\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { TokenWarningCard } from \"uniswap/src/features/tokens/TokenWarningCard\";\nimport TokenWarningModal from \"uniswap/src/features/tokens/TokenWarningModal\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nconst PoolDetailsStatsButtonsRow = styled(Row)`\n  gap: 12px;\n  z-index: 1;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    gap: 8px;\n    position: fixed;\n    bottom: 0px;\n    left: 0;\n    margin: 8px;\n    width: calc(100% - 16px);\n    background: ${({ theme }) => theme.surface1};\n    padding: 12px 32px;\n    border: 1px solid ${({ theme }) => theme.surface3};\n    border-radius: 20px;\n    backdrop-filter: blur(10px);\n    & > :first-child {\n      margin-right: auto;\n    }\n    z-index: ${Z_INDEX.sticky};\n  }\n`;\nconst SwapModalWrapper = styled(Column)`\n  z-index: 0;\n  gap: 24px;\n  visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  opacity: ${({ open }) => open ? \"1\" : \"0\"};\n  max-height: ${({ open }) => open ? \"100vh\" : \"0\"};\n  transition: ${({ theme }) => `max-height ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  padding-bottom: ${({ open }) => open ? \"24px\" : \"0\"};\n\n  // Need to override the default visibility to properly hide\n  ${CurrencySelect} {\n    visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  }\n\n  @media (max-width: ${breakpoints.xl}px) {\n    position: fixed;\n    width: calc(100% - 16px);\n    padding: 0px 12px 12px;\n    border-radius: 24px;\n    max-width: 480px;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${Z_INDEX.fixed};\n    background: ${({ theme }) => theme.surface1};\n    transition: ${({ theme }) => `opacity ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  }\n`;\nconst PoolButton = ({ isOpen, icon, onPress, children, \"data-testid\": dataTestId }) => {\n  return <Button\n    onPress={onPress}\n    icon={icon}\n    variant={isOpen ? \"default\" : \"branded\"}\n    emphasis=\"secondary\"\n    data-testid={dataTestId}\n  >{children}</Button>;\n};\nfunction findMatchingPosition(positions, token0, token1, feeTier) {\n  return positions?.find(\n    (position) => (position?.details.token0.toLowerCase() === token0?.address || position?.details.token0.toLowerCase() === token1?.address) && (position?.details.token1.toLowerCase() === token0?.address || position?.details.token1.toLowerCase() === token1?.address) && position?.details.fee == feeTier && !position.closed\n  );\n}\nexport function PoolDetailsStatsButtons({\n  chainId,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  loading\n}) {\n  const account = useAccount();\n  const { t } = useTranslation();\n  const { positions: userOwnedPositions } = useMultiChainPositions(account.address ?? \"\");\n  const position = userOwnedPositions && findMatchingPosition(userOwnedPositions, token0, token1, feeTier);\n  const tokenId = position?.details.tokenId;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const currency0 = token0 && gqlToCurrency(token0);\n  const currency1 = token1 && gqlToCurrency(token1);\n  const currencyInfo0 = useCurrencyInfo(currency0 && currencyId(currency0));\n  const currencyInfo1 = useCurrencyInfo(currency1 && currencyId(currency1));\n  const handleAddLiquidity = async () => {\n    if (currency0 && currency1) {\n      const currency0Address = currency0.isNative ? NATIVE_CHAIN_ID : currency0.address;\n      const currency1Address = currency1.isNative ? NATIVE_CHAIN_ID : currency1.address;\n      const chainUrlParam = getChainUrlParam(chainId ?? currency0.chainId);\n      if (tokenId) {\n        navigate(`/positions/${protocolVersion?.toLowerCase()}/${chainUrlParam}/${tokenId}`, {\n          state: { from: location.pathname }\n        });\n      } else {\n        const url = `/positions/create/${protocolVersion?.toLowerCase()}?currencyA=${currency0Address}&currencyB=${currency1Address}&chain=${chainUrlParam}`;\n        navigate(url, {\n          state: { from: location.pathname }\n        });\n      }\n    }\n  };\n  const [swapModalOpen, toggleSwapModalOpen] = useReducer((state) => !state, false);\n  const media = useMedia();\n  const screenSizeLargerThanTablet = !media.xl;\n  const isMobile = media.md;\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const closeWarningModal = useCallback(() => setShowWarningModal(false), []);\n  const [warningModalCurrencyInfo, setWarningModalCurrencyInfo] = useState();\n  const onWarningCardCtaPressed = useCallback((currencyInfo) => {\n    setWarningModalCurrencyInfo(currencyInfo);\n    setShowWarningModal(true);\n  }, []);\n  if (loading || !currency0 || !currency1) {\n    return <Flex row justifyContent=\"space-between\" data-testid=\"pdp-buttons-loading-skeleton\" mb=\"$spacing12\"><LoadingBubble containerWidth=\"50%\" width=\"95%\" /><Spacer size=\"$spacing6\" /><LoadingBubble containerWidth=\"50%\" width=\"95%\" /></Flex>;\n  }\n  return <Flex flexDirection=\"column\" gap=\"$gap24\"><PoolButtonsWrapper isMobile={isMobile}><Flex row justifyContent=\"center\" gap={screenSizeLargerThanTablet ? \"$spacing12\" : \"$spacing8\"} width=\"100%\"><PoolButton\n    icon={swapModalOpen ? <X size=\"$icon.20\" /> : <CoinConvert size=\"$icon.20\" />}\n    onPress={toggleSwapModalOpen}\n    isOpen={swapModalOpen}\n    data-testid={`pool-details-${swapModalOpen ? \"close\" : \"swap\"}-button`}\n  >{swapModalOpen ? t(\"common.close\") : t(\"common.swap\")}</PoolButton><PoolButton\n    icon={<Plus size=\"$icon.20\" />}\n    onPress={handleAddLiquidity}\n    data-testid=\"pool-details-add-liquidity-button\"\n  >{t(\"common.addLiquidity\")}</PoolButton></Flex></PoolButtonsWrapper><SwapModalWrapper open={swapModalOpen} data-testid=\"pool-details-swap-modal\"><Swap\n    syncTabToUrl={false}\n    chainId={chainId}\n    initialInputCurrency={currency0}\n    initialOutputCurrency={currency1}\n  /><TokenWarningCard currencyInfo={currencyInfo0} onPress={() => onWarningCardCtaPressed(currencyInfo0)} /><TokenWarningCard currencyInfo={currencyInfo1} onPress={() => onWarningCardCtaPressed(currencyInfo1)} />{warningModalCurrencyInfo && // Intentionally duplicative with the TokenWarningModal in the swap component; this one only displays when user clicks \"i\" Info button on the TokenWarningCard\n  <TokenWarningModal\n    currencyInfo0={warningModalCurrencyInfo}\n    isInfoOnlyWarning\n    isVisible={showWarningModal}\n    closeModalOnly={closeWarningModal}\n    onAcknowledge={closeWarningModal}\n  />}</SwapModalWrapper><Scrim\n    $open={swapModalOpen && !screenSizeLargerThanTablet}\n    $maxWidth={breakpoints.xl}\n    $zIndex={Z_INDEX.sticky}\n    onClick={toggleSwapModalOpen}\n  /></Flex>;\n}\nfunction PoolButtonsWrapper({ children, isMobile }) {\n  const isTouchDevice = useIsTouchDevice();\n  const { direction: scrollDirection } = useScroll();\n  const Wrapper = isMobile ? MobileBottomBar : PoolDetailsStatsButtonsRow;\n  const wrapperProps = isMobile ? { hide: isTouchDevice && scrollDirection === ScrollDirection.DOWN } : {};\n  return <Wrapper {...wrapperProps}>{children}</Wrapper>;\n}\n","\"use strict\";\nimport { LiquidityPositionCard } from \"components/Liquidity/LiquidityPositionCard\";\nimport { getPositionUrl } from \"components/Liquidity/utils\";\nimport { Link } from \"react-router-dom\";\nimport { Flex } from \"ui/src\";\nexport function PoolDetailsPositionsTable({ positions }) {\n  return <Flex gap=\"$gap24\" width=\"100%\">{positions?.map((position) => <Link key={position.poolId} style={{ textDecoration: \"none\" }} to={getPositionUrl(position)}><LiquidityPositionCard liquidityPosition={position} /></Link>)}</Flex>;\n}\n","\"use strict\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport {\n  PoolTransactionType,\n  ProtocolVersion,\n  useV2PairTransactionsQuery,\n  useV3PoolTransactionsQuery,\n  useV4PoolTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nexport var PoolTableTransactionType = /* @__PURE__ */ ((PoolTableTransactionType2) => {\n  PoolTableTransactionType2[\"BUY\"] = \"Buy\";\n  PoolTableTransactionType2[\"SELL\"] = \"Sell\";\n  PoolTableTransactionType2[\"REMOVE\"] = \"Remove\";\n  PoolTableTransactionType2[\"ADD\"] = \"Add\";\n  return PoolTableTransactionType2;\n})(PoolTableTransactionType || {});\nconst PoolTransactionDefaultQuerySize = 25;\nexport function usePoolTransactions(address, chainId, filter = [\n  \"Buy\" /* BUY */,\n  \"Sell\" /* SELL */,\n  \"Remove\" /* REMOVE */,\n  \"Add\" /* ADD */\n], token0, protocolVersion = ProtocolVersion.V3, first = PoolTransactionDefaultQuerySize) {\n  const { defaultChainId } = useEnabledChains();\n  const variables = { first, chain: toGraphQLChain(chainId ?? defaultChainId) };\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4,\n    fetchMore: fetchMoreV4\n  } = useV4PoolTransactionsQuery({\n    variables: {\n      ...variables,\n      poolId: address\n    },\n    skip: protocolVersion !== ProtocolVersion.V4\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useV3PoolTransactionsQuery({\n    variables: {\n      ...variables,\n      address\n    },\n    skip: protocolVersion !== ProtocolVersion.V3\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useV2PairTransactionsQuery({\n    variables: {\n      ...variables,\n      address\n    },\n    skip: !chainId || protocolVersion !== ProtocolVersion.V2\n  });\n  const loadingMore = useRef(false);\n  const { transactions, loading, fetchMore, error } = protocolVersion === ProtocolVersion.V4 ? { transactions: dataV4?.v4Pool?.transactions, loading: loadingV4, fetchMore: fetchMoreV4, error: errorV4 } : protocolVersion === ProtocolVersion.V3 ? { transactions: dataV3?.v3Pool?.transactions, loading: loadingV3, fetchMore: fetchMoreV3, error: errorV3 } : { transactions: dataV2?.v2Pair?.transactions, loading: loadingV2, fetchMore: fetchMoreV2, error: errorV2 };\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMore.current) {\n        return;\n      }\n      loadingMore.current = true;\n      fetchMore({\n        variables: {\n          cursor: transactions?.[transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMore.current = false;\n            return prev;\n          }\n          onComplete?.();\n          const mergedData = protocolVersion === ProtocolVersion.V4 ? {\n            v4Pool: {\n              ...fetchMoreResult.v4Pool,\n              transactions: [\n                ...prev.v4Pool?.transactions ?? [],\n                ...fetchMoreResult.v4Pool.transactions\n              ]\n            }\n          } : protocolVersion === ProtocolVersion.V3 ? {\n            v3Pool: {\n              ...fetchMoreResult.v3Pool,\n              transactions: [\n                ...prev.v3Pool?.transactions ?? [],\n                ...fetchMoreResult.v3Pool.transactions\n              ]\n            }\n          } : {\n            v2Pair: {\n              ...fetchMoreResult.v2Pair,\n              transactions: [\n                ...prev.v2Pair?.transactions ?? [],\n                ...fetchMoreResult.v2Pair.transactions\n              ]\n            }\n          };\n          loadingMore.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [fetchMore, transactions, protocolVersion]\n  );\n  const filteredTransactions = useMemo(() => {\n    return (transactions ?? [])?.map((tx) => {\n      if (!tx) {\n        return void 0;\n      }\n      const tokenIn = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n      const token0Address = token0?.address === NATIVE_CHAIN_ID ? WRAPPED_NATIVE_CURRENCY[chainId ?? UniverseChainId.Mainnet]?.address : token0?.address;\n      const isSell = tokenIn?.address?.toLowerCase() === token0Address?.toLowerCase();\n      const type = tx.type === PoolTransactionType.Swap ? isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */ : tx.type === PoolTransactionType.Remove ? \"Remove\" /* REMOVE */ : \"Add\" /* ADD */;\n      if (!filter.includes(type)) {\n        return void 0;\n      }\n      return {\n        timestamp: tx.timestamp,\n        transaction: tx.hash,\n        pool: {\n          token0: {\n            id: tx.token0.address ?? null,\n            symbol: tx.token0.symbol ?? \"\"\n          },\n          token1: {\n            id: tx.token1.address ?? null,\n            symbol: tx.token1.symbol ?? \"\"\n          }\n        },\n        maker: tx.account,\n        amount0: parseFloat(tx.token0Quantity),\n        amount1: parseFloat(tx.token1Quantity),\n        amountUSD: tx.usdValue.value,\n        type\n      };\n    }).filter((value) => value !== void 0);\n  }, [transactions, token0?.address, chainId, filter]);\n  return useMemo(() => {\n    return {\n      transactions: filteredTransactions,\n      loading,\n      loadMore,\n      error\n    };\n  }, [filteredTransactions, loading, loadMore, error]);\n}\n","\"use strict\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport { FilterHeaderRow, TableText, TimestampCell } from \"components/Table/styled\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport {\n  PoolTableTransactionType,\n  usePoolTransactions\n} from \"graphql/data/pools/usePoolTransactions\";\nimport { supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { Flex, Text, useMedia } from \"ui/src\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useAppFiatCurrency } from \"uniswap/src/features/fiatCurrency/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n  stroke: ${({ theme }) => theme.neutral2};\n`;\nconst TableWrapper = styled.div`\n  min-height: 256px;\n`;\nvar PoolTransactionColumn = /* @__PURE__ */ ((PoolTransactionColumn2) => {\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Timestamp\"] = 0] = \"Timestamp\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Type\"] = 1] = \"Type\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"MakerAddress\"] = 2] = \"MakerAddress\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"FiatValue\"] = 3] = \"FiatValue\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"InputAmount\"] = 4] = \"InputAmount\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"OutputAmount\"] = 5] = \"OutputAmount\";\n  return PoolTransactionColumn2;\n})(PoolTransactionColumn || {});\nconst PoolTransactionColumnWidth = {\n  [0 /* Timestamp */]: 80,\n  [1 /* Type */]: 90,\n  [2 /* MakerAddress */]: 125,\n  [3 /* FiatValue */]: 125,\n  [4 /* InputAmount */]: 125,\n  [5 /* OutputAmount */]: 125\n};\nfunction comparePoolTokens(tokenA, tokenB) {\n  if (tokenB?.address === NATIVE_CHAIN_ID) {\n    const chainId = supportedChainIdFromGQLChain(tokenB.chain);\n    return chainId && tokenA.id?.toLowerCase() === WRAPPED_NATIVE_CURRENCY[chainId]?.address.toLowerCase();\n  }\n  return tokenA.id?.toLowerCase() === tokenB?.address?.toLowerCase();\n}\nexport function PoolDetailsTransactionsTable({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const chainId = useChainIdFromUrlParam() ?? UniverseChainId.Mainnet;\n  const activeLocalCurrency = useAppFiatCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.REMOVE,\n    PoolTableTransactionType.ADD\n  ]);\n  const { transactions, loading, loadMore, error } = usePoolTransactions(\n    poolAddress,\n    chainId,\n    filter,\n    token0,\n    protocolVersion\n  );\n  const showLoadingSkeleton = loading || !!error;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        size: PoolTransactionColumnWidth[0 /* Timestamp */],\n        header: () => <Cell justifyContent=\"flex-start\"><Flex row gap=\"4px\"><Text variant=\"body3\" color=\"$neutral1\"><Trans i18nKey=\"common.time\" /></Text></Flex></Cell>,\n        cell: (row) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\"><TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chainId, row.getValue?.().transaction, ExplorerDataType.TRANSACTION)}\n        /></Cell>\n      }),\n      columnHelper.accessor(\n        (row) => {\n          let color, text;\n          if (row.type === PoolTableTransactionType.BUY) {\n            color = \"$statusSuccess\";\n            text = <span><Trans i18nKey=\"common.buy.label\" />\r\n                &nbsp;{token0?.symbol}</span>;\n          } else if (row.type === PoolTableTransactionType.SELL) {\n            color = \"$statusCritical\";\n            text = <span><Trans i18nKey=\"common.sell.label\" />\r\n                &nbsp;{token0?.symbol}</span>;\n          } else {\n            color = row.type === PoolTableTransactionType.ADD ? \"$statusSuccess\" : \"$statusCritical\";\n            text = row.type === PoolTableTransactionType.ADD ? <Trans i18nKey=\"common.add.label\" /> : <Trans i18nKey=\"common.remove.label\" />;\n          }\n          return <TableText color={color}>{text}</TableText>;\n        },\n        {\n          id: \"swap-type\",\n          size: PoolTransactionColumnWidth[1 /* Type */],\n          header: () => <Cell justifyContent=\"flex-start\"><FilterHeaderRow clickable={filterModalIsOpen} onPress={() => toggleFilterModal()} ref={filterAnchorRef}><Filter\n            allFilters={Object.values(PoolTableTransactionType)}\n            activeFilter={filter}\n            setFilters={setFilters}\n            isOpen={filterModalIsOpen}\n            toggleFilterModal={toggleFilterModal}\n            anchorRef={filterAnchorRef}\n          /><Text variant=\"body3\" color=\"$neutral1\"><Trans i18nKey=\"common.type.label\" /></Text></FilterHeaderRow></Cell>,\n          cell: (PoolTransactionTableType) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\">{PoolTransactionTableType.getValue?.()}</Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.amountUSD, {\n        id: \"fiat-value\",\n        maxSize: PoolTransactionColumnWidth[3 /* FiatValue */],\n        header: () => <Cell justifyContent=\"flex-end\" grow><Text variant=\"body3\" color=\"$neutral1\">{activeLocalCurrency}</Text></Cell>,\n        cell: (fiat) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow><TableText>{formatFiatPrice({ price: fiat.getValue?.() })}</TableText></Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount0 : row.amount1, {\n        id: \"input-amount\",\n        maxSize: PoolTransactionColumnWidth[4 /* InputAmount */],\n        header: () => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow><Text variant=\"body3\" color=\"$neutral1\">{token0?.symbol}</Text></Cell>,\n        cell: (inputTokenAmount) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow><TableText>{formatNumber({ input: Math.abs(inputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}</TableText></Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount1 : row.amount0, {\n        id: \"output-amount\",\n        maxSize: PoolTransactionColumnWidth[5 /* OutputAmount */],\n        header: () => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow><Text variant=\"body3\" color=\"$neutral1\">{token1?.symbol}</Text></Cell>,\n        cell: (outputTokenAmount) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow><TableText>{formatNumber({ input: Math.abs(outputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}</TableText></Cell>\n      }),\n      columnHelper.accessor((row) => row.maker, {\n        id: \"maker-address\",\n        maxSize: PoolTransactionColumnWidth[2 /* MakerAddress */],\n        header: () => <Cell justifyContent=\"flex-end\" grow><Text variant=\"body3\" color=\"$neutral1\"><Trans i18nKey=\"common.wallet.label\" /></Text></Cell>,\n        cell: (makerAddress) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow><StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}><TableText>{shortenAddress(makerAddress.getValue?.(), 0)}</TableText></StyledExternalLink></Cell>\n      })\n    ];\n  }, [\n    activeLocalCurrency,\n    chainId,\n    filter,\n    filterModalIsOpen,\n    formatFiatPrice,\n    formatNumber,\n    showLoadingSkeleton,\n    token0,\n    token1?.symbol\n  ]);\n  const media = useMedia();\n  return <TableWrapper data-testid=\"pool-details-transactions-table\"><Table\n    columns={columns}\n    data={transactions}\n    loading={loading}\n    error={error}\n    loadMore={loadMore}\n    maxHeight={600}\n    defaultPinnedColumns={[\"timestamp\", \"swap-type\"]}\n    forcePinning={media.xxl}\n  /></TableWrapper>;\n}\n","\"use strict\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { PoolDetailsPositionsTable } from \"components/Pools/PoolDetails/PoolDetailsPositionsTable\";\nimport { PoolDetailsTransactionsTable } from \"components/Pools/PoolDetails/PoolDetailsTransactionsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nimport { ClickableStyle } from \"theme/components/styles\";\nimport { useGetPositionsQuery } from \"uniswap/src/data/rest/getPositions\";\nvar PoolDetailsTableTabs = /* @__PURE__ */ ((PoolDetailsTableTabs2) => {\n  PoolDetailsTableTabs2[\"TRANSACTIONS\"] = \"transactions\";\n  PoolDetailsTableTabs2[\"POSITIONS\"] = \"positions\";\n  return PoolDetailsTableTabs2;\n})(PoolDetailsTableTabs || {});\nconst TableHeader = styled(ThemedText.HeadlineMedium)`\n  color: ${({ theme, active }) => !active && theme.neutral2};\n  ${({ disabled }) => !disabled && ClickableStyle}\n  user-select: none;\n`;\nexport function PoolDetailsTableTab({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const [activeTable, setActiveTable] = useState(\"transactions\" /* TRANSACTIONS */);\n  const account = useAccount();\n  const { data } = useGetPositionsQuery({ address: account.address, poolId: poolAddress });\n  const positions = useMemo(\n    () => data?.positions.map((position) => parseRestPosition(position)).filter((position) => position !== void 0),\n    [data?.positions]\n  );\n  return <Column gap=\"lg\"><Row gap=\"16px\"><TableHeader\n    active={activeTable === \"transactions\" /* TRANSACTIONS */}\n    onClick={() => setActiveTable(\"transactions\" /* TRANSACTIONS */)}\n    disabled={!positions?.length}\n  ><Trans i18nKey=\"common.transactions\" /></TableHeader>{Boolean(positions?.length) && <TableHeader\n    active={activeTable === \"positions\" /* POSITIONS */}\n    onClick={() => setActiveTable(\"positions\" /* POSITIONS */)}\n  ><Trans i18nKey=\"pool.positions\" />{` (${positions?.length})`}</TableHeader>}</Row>{activeTable === \"transactions\" /* TRANSACTIONS */ ? <PoolDetailsTransactionsTable\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    protocolVersion={protocolVersion}\n  /> : <PoolDetailsPositionsTable positions={positions} />}</Column>;\n}\n","\"use strict\";\nimport { V2_BIPS } from \"graphql/data/pools/useTopPools\";\nimport ms from \"ms\";\nimport { useMemo } from \"react\";\nimport {\n  useV2PairQuery,\n  useV3PoolQuery,\n  useV4PoolQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nfunction calc24HVolChange(historicalVolume) {\n  if (!historicalVolume) {\n    return void 0;\n  }\n  const currentTime = (/* @__PURE__ */ new Date()).getTime();\n  const dayAgo = (currentTime - ms(\"1d\")) / 1e3;\n  const twoDaysAgo = (currentTime - ms(\"2d\")) / 1e3;\n  const volume24h = historicalVolume.filter((entry) => entry?.timestamp !== void 0 && entry.timestamp >= dayAgo).reduce((acc, cur) => acc + cur.value, 0);\n  const volume48h = historicalVolume.filter(\n    (entry) => entry?.timestamp !== void 0 && entry.timestamp >= twoDaysAgo && entry.timestamp < dayAgo\n  ).reduce((acc, cur) => acc + cur.value, 0);\n  return (volume24h - volume48h) / volume48h * 100;\n}\nexport function usePoolData(poolIdOrAddress, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const chain = toGraphQLChain(chainId ?? defaultChainId);\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4\n  } = useV4PoolQuery({\n    variables: { chain, poolId: poolIdOrAddress },\n    errorPolicy: \"all\"\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3\n  } = useV3PoolQuery({\n    variables: { chain, address: poolIdOrAddress },\n    errorPolicy: \"all\"\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2\n  } = useV2PairQuery({\n    variables: { chain, address: poolIdOrAddress },\n    skip: !chainId,\n    errorPolicy: \"all\"\n  });\n  return useMemo(() => {\n    const anyError = Boolean(errorV4 || errorV3 || errorV2);\n    const anyLoading = Boolean(loadingV4 || loadingV3 || loadingV2);\n    const pool = dataV4?.v4Pool ?? dataV3?.v3Pool ?? dataV2?.v2Pair ?? void 0;\n    const feeTier = dataV4?.v4Pool?.feeTier ?? dataV3?.v3Pool?.feeTier ?? V2_BIPS;\n    const poolId = dataV4?.v4Pool?.poolId ?? dataV3?.v3Pool?.address ?? dataV2?.v2Pair?.address ?? poolIdOrAddress;\n    return {\n      data: pool ? {\n        idOrAddress: poolId,\n        txCount: pool.txCount,\n        protocolVersion: pool.protocolVersion,\n        token0: pool.token0,\n        tvlToken0: pool.token0Supply,\n        token0Price: pool.token0?.project?.markets?.[0]?.price?.value ?? pool.token0?.market?.price?.value,\n        token1: pool.token1,\n        tvlToken1: pool.token1Supply,\n        token1Price: pool.token1?.project?.markets?.[0]?.price?.value ?? pool.token1?.market?.price?.value,\n        feeTier,\n        volumeUSD24H: pool.volume24h?.value,\n        volumeUSD24HChange: calc24HVolChange(pool.historicalVolume?.concat()),\n        tvlUSD: pool.totalLiquidity?.value,\n        tvlUSDChange: pool.totalLiquidityPercentChange24h?.value,\n        hookAddress: \"hook\" in pool ? pool?.hook?.address : void 0,\n        rewardsCampaign: \"rewardsCampaign\" in pool ? pool.rewardsCampaign : void 0\n      } : void 0,\n      error: anyError,\n      loading: anyLoading\n    };\n  }, [\n    dataV2?.v2Pair,\n    dataV3?.v3Pool,\n    dataV4?.v4Pool,\n    errorV2,\n    errorV3,\n    errorV4,\n    loadingV2,\n    loadingV3,\n    loadingV4,\n    poolIdOrAddress\n  ]);\n}\n","\"use strict\";\nexport const getPoolDetailPageTitle = (t, poolData) => {\n  const token0Symbol = poolData?.token0.symbol;\n  const token1Symbol = poolData?.token1.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!token0Symbol || !token1Symbol) {\n    return baseTitle;\n  }\n  return `${token0Symbol}/${token1Symbol}: ${baseTitle}`;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { LpIncentivesPoolDetailsRewardsDistribution } from \"components/LpIncentives/LpIncentivesPoolDetailsRewardsDistribution\";\nimport ChartSection from \"components/Pools/PoolDetails/ChartSection\";\nimport { PoolDetailsApr } from \"components/Pools/PoolDetails/PoolDetailsApr\";\nimport { PoolDetailsBreadcrumb, PoolDetailsHeader } from \"components/Pools/PoolDetails/PoolDetailsHeader\";\nimport { PoolDetailsLink } from \"components/Pools/PoolDetails/PoolDetailsLink\";\nimport { PoolDetailsStats } from \"components/Pools/PoolDetails/PoolDetailsStats\";\nimport { PoolDetailsStatsButtons } from \"components/Pools/PoolDetails/PoolDetailsStatsButtons\";\nimport { PoolDetailsTableTab } from \"components/Pools/PoolDetails/PoolDetailsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { usePoolData } from \"graphql/data/pools/usePoolData\";\nimport { calculateApr } from \"graphql/data/pools/useTopPools\";\nimport { gqlToCurrency, unwrapToken } from \"graphql/data/util\";\nimport { useColor } from \"hooks/useColor\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport NotFound from \"pages/NotFound\";\nimport { getPoolDetailPageTitle } from \"pages/PoolDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useMemo, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { ThemeProvider } from \"theme\";\nimport { Flex } from \"ui/src\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nconst PageWrapper = styled(Row)`\n  padding: 0 20px 52px;\n  justify-content: center;\n  width: 100%;\n  gap: 80px;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    padding: 48px 40px;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.xl}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 0px;\n  }\n`;\nconst LeftColumn = styled(Column)`\n  gap: 40px;\n  max-width: 780px;\n  overflow: hidden;\n  justify-content: flex-start;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    max-width: unset;\n  }\n`;\nconst HR = styled.hr`\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  width: 100%;\n`;\nconst TokenDetailsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n\n  @media (max-width: ${breakpoints.xl}px) and (min-width: ${breakpoints.md}px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: unset;\n  }\n\n  @media (max-width: ${breakpoints.md}px) {\n    padding: unset;\n  }\n`;\nconst TokenDetailsHeader = styled(Text)`\n  width: 100%;\n  font-size: 24px;\n  font-weight: 485;\n  line-height: 32px;\n`;\nconst LinksContainer = styled(Column)`\n  gap: 16px;\n  width: 100%;\n`;\nfunction getUnwrappedPoolToken(poolData, chainId) {\n  return poolData?.token0 && poolData?.token1 && chainId ? [unwrapToken(chainId, poolData?.token0), unwrapToken(chainId, poolData?.token1)] : [void 0, void 0];\n}\nexport default function PoolDetailsPage() {\n  const { t } = useTranslation();\n  const { poolAddress } = useParams();\n  const urlChain = useChainIdFromUrlParam();\n  const chainInfo = urlChain ? getChainInfo(urlChain) : void 0;\n  const { data: poolData, loading } = usePoolData(poolAddress?.toLowerCase() ?? \"\", chainInfo?.id);\n  const [isReversed, toggleReversed] = useReducer((x) => !x, false);\n  const unwrappedTokens = getUnwrappedPoolToken(poolData, chainInfo?.id);\n  const [token0, token1] = isReversed ? [unwrappedTokens?.[1], unwrappedTokens?.[0]] : unwrappedTokens;\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const poolApr = useMemo(\n    () => calculateApr(poolData?.volumeUSD24H, poolData?.tvlUSD, poolData?.feeTier),\n    [poolData?.volumeUSD24H, poolData?.tvlUSD, poolData?.feeTier]\n  );\n  const { darkMode, surface2, accent1 } = useTheme();\n  const color0 = useColor(token0 && gqlToCurrency(token0), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const color1 = useColor(token1 && gqlToCurrency(token1), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const isInvalidPool = !poolAddress || !chainInfo;\n  const poolNotFound = !loading && !poolData || isInvalidPool;\n  const metatagProperties = useMemo(() => {\n    const token0Symbol = poolData?.token0.symbol;\n    const token1Symbol = poolData?.token1.symbol;\n    const poolName = `${token0Symbol}/${token1Symbol}`;\n    const chainName = chainInfo?.label ?? \"Ethereum\";\n    return {\n      title: poolName,\n      url: window.location.href,\n      description: `Swap ${poolName} on ${chainName}. Trade tokens and provide liquidity. Real-time prices, charts, transaction data, and more.`\n    };\n  }, [chainInfo?.label, poolData?.token0.symbol, poolData?.token1.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  const showRewardsDistribution = useMemo(() => {\n    return Boolean(\n      isLPIncentivesEnabled && poolData && poolData.rewardsCampaign?.boostedApr && poolData.rewardsCampaign.boostedApr > 0\n    );\n  }, [isLPIncentivesEnabled, poolData]);\n  if (poolNotFound) {\n    return <NotFound />;\n  }\n  return <ThemeProvider token0={color0 !== accent1 ? color0 : void 0} token1={color1 !== accent1 ? color1 : void 0}><Helmet><title>{getPoolDetailPageTitle(t, poolData)}</title>{metatags.map((tag, index) => <meta key={index} {...tag} />)}</Helmet><Trace\n    logImpression={!loading}\n    page={InterfacePageName.POOL_DETAILS_PAGE}\n    properties={{\n      poolAddress,\n      chainId: chainInfo?.id,\n      feeTier: poolData?.feeTier,\n      token0Address: poolData?.token0.address,\n      token1Address: poolData?.token1.address,\n      token0Symbol: poolData?.token0.symbol,\n      token1Symbol: poolData?.token1.symbol,\n      token0Name: poolData?.token0.name,\n      token1Name: poolData?.token1.name\n    }}\n  ><PageWrapper><LeftColumn><Column gap=\"20px\"><Column><PoolDetailsBreadcrumb\n    chainId={chainInfo?.id}\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    loading={loading}\n  /><PoolDetailsHeader\n    chainId={chainInfo?.id}\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    feeTier={poolData?.feeTier}\n    hookAddress={poolData?.hookAddress}\n    protocolVersion={poolData?.protocolVersion}\n    rewardsApr={poolData?.rewardsCampaign?.boostedApr}\n    toggleReversed={toggleReversed}\n    loading={loading}\n  /></Column><ChartSection\n    poolData={poolData}\n    loading={loading}\n    isReversed={isReversed}\n    chain={chainInfo?.backendChain.chain}\n  /></Column><HR /><PoolDetailsTableTab\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    protocolVersion={poolData?.protocolVersion}\n  /></LeftColumn><Flex gap=\"$spacing24\" width={360} $xl={{ width: \"100%\", mt: 44, minWidth: \"unset\" }}><Flex $xl={{ marginTop: -24 }}><PoolDetailsStatsButtons\n    chainId={chainInfo?.id}\n    token0={token0}\n    token1={token1}\n    feeTier={poolData?.feeTier}\n    protocolVersion={poolData?.protocolVersion}\n    loading={loading}\n  /></Flex>{poolData && <PoolDetailsApr\n    poolApr={poolApr}\n    rewardsApr={isLPIncentivesEnabled ? poolData?.rewardsCampaign?.boostedApr : void 0}\n  />}{showRewardsDistribution && <LpIncentivesPoolDetailsRewardsDistribution rewardsCampaign={poolData?.rewardsCampaign} />}<PoolDetailsStats poolData={poolData} isReversed={isReversed} chainId={chainInfo?.id} loading={loading} /><TokenDetailsWrapper><TokenDetailsHeader><Trans i18nKey=\"common.links\" /></TokenDetailsHeader><LinksContainer>{poolData?.protocolVersion !== ProtocolVersion.V4 && <PoolDetailsLink\n    address={poolAddress}\n    chainId={chainInfo?.id}\n    tokens={[token0, token1]}\n    loading={loading}\n  />}<PoolDetailsLink\n    address={token0?.address}\n    chainId={chainInfo?.id}\n    tokens={[token0]}\n    loading={loading}\n  /><PoolDetailsLink\n    address={token1?.address}\n    chainId={chainInfo?.id}\n    tokens={[token1]}\n    loading={loading}\n  /></LinksContainer></TokenDetailsWrapper></Flex></PageWrapper></Trace></ThemeProvider>;\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Plus","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","displayName","ScrimBackground","styled","div","$zIndex","Z_INDEX","modalBackdrop","theme","scrim","$maxWidth","breakpoint","md","$open","transition","duration","medium","Scrim","props","fullWidth","useDeviceDimensions","useEffect","breakpoints","document","body","style","overflow","_cn","Image","img","Container","Header","PageWrapper","lg","NotFound","title","subtitle","actionButton","isDarkMode","useIsDarkMode","isMobile","useIsMobile","navigate","useNavigate","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","logImpression","page","InterfacePageName","NOT_FOUND","Trans","i18nKey","src","darkImage","lightImage","alt","className","Button","onPress","variant","_cn4","_cn3","BarChartSide","percent","isLeft","Flex","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","borderRightWidth","borderRightColor","borderTopRightRadius","borderBottomRightRadius","borderLeftWidth","borderLeftColor","LpIncentivesPoolDetailsRewardsDistribution","rewardsCampaign","uniPrice","formatCurrencyAmount","useFormatter","price","useUSDCPrice","LP_INCENTIVES_REWARD_TOKEN","t","useTranslation","currentLanguage","useCurrentLanguage","rewardsPercent","useMemo","distributed","distributedRewards","JSBI","total","totalRewardAllocation","distributedNum","parseFloat","toString","totalNum","Math","min","timePercent","start","startTimestamp","end","endTimestamp","now","Date","distributedRewardsRaw","totalRewardAllocationRaw","distributedRewardsAmount","CurrencyAmount","fromRawAmount","totalRewardAllocationAmount","distributedRewardsFiat","quote","totalRewardAllocationFiat","formattedDistributedToken","amount","type","NumberType","TokenQuantityStats","formattedTotalToken","formattedDistributedFiat","FiatTokenStats","placeholder","formattedTotalFiat","daysRemaining","getDaysRemaining","diff","days","ms","ceil","dateRange","formatDateRange","locale","options","month","day","Intl","DateTimeFormat","format","Text","symbol","_cn2","PDP_CHART_HEIGHT_PX","PDP_CHART_SELECTOR_OPTIONS","ChartType","VOLUME","PRICE","LIQUIDITY","ChartTypeSelectorContainer","PDPChartTypeSelector","chartType","onChartTypeChange","disabledOption","ChartTypeDropdown","currentChartType","onSelectOption","usePDPChartState","poolData","tokenA","tokenB","isReversed","chain","protocolVersion","timePeriod","setTimePeriod","useState","TimePeriod","DAY","setChartType","isV2","ProtocolVersion","V2","isV3","V3","isV4","V4","variables","addressOrId","idOrAddress","toHistoryDuration","priceQuery","usePoolPriceChartData","token0","address","usePDPPriceChartData","volumeQuery","data","loading","usePoolVolumeHistoryQuery","skip","historicalVolume","v2Pair","v3Pool","v4Pool","entries","filter","amt","map","withUTCTimestamp","dataQuality","checkDataQuality","usePDPVolumeChartData","activeQuery","DataQuality","VALID","ChartSection","currencyA","currencyB","defaultChainId","useEnabledChains","media","useMedia","gqlToCurrency","token1","wrapped","Chain","Ethereum","refitChartContent","useAtomValue","refitChartContentAtom","ChartBody","ChartSkeleton","selectedChartProps","feeTier","Number","chainId","fromGraphQLChain","poolId","hooks","hookAddress","version","parseProtocolVersion","RestProtocolVersion","tickSpacing","LiquidityChart","INVALID","errorText","stale","STALE","PriceChart","VolumeChart","filteredTimeOptions","filtered","DEFAULT_PILL_TIME_SELECTOR_OPTIONS","option","value","TimePeriodDisplay","HOUR","selected","DISPLAYS","disabledChartOption","data-testid","ChartActionsContainer","SegmentedControl","selectedOption","time","getTimePeriodFromDisplay","PriceDisplayContainer","ChartPriceText","EllipsisStyle","formatPrice","primaryToken","referenceToken","params","PriceChartType","LINE","lastPrice","Chart","Model","PriceChartModel","crosshairData","displayValue","currencyBAmountRaw","floor","close","decimals","priceDisplay","ChartHeader","additionalFields","PriceChartDelta","startingPrice","endingPrice","valueFormatterType","FiatTokenPrice","FadeInHeading","H1Medium","textFadeIn","FadeInSubheader","SubHeader","LiquidityTooltipDisplay","tokenADescriptor","tokenBDescriptor","currentTick","formatNumber","displayValue0","tick","input","amount0Locked","displayValue1","amount1Locked","BodySmall","token","name","tickData","activeTick","useLiquidityBarData","useTheme","barData","tokenAColor","tokenBColor","highlightColor","surface3","activeTickProgress","activeRangePercentage","LoadingChart","LiquidityBarChartModel","TooltipBody","FeeAmount","LOWEST","activeRangeData","crosshair","displayPoint","display","price0","price1","paddingTop","PoolDetailsApr","poolApr","rewardsApr","formatPercent","showAprBreakdown","totalApr","rewardsAprPercent","Percent","round","BIPS_BASE","add","calculateTotalApr","toFixed","mt","LpIncentivesAprDisplay","lpIncentiveRewardApr","hideBackground","showTokenSymbol","DetailBubble","LoadingBubble","$height","$width","ExternalLink","d","points","_cn9","_cn8","_cn7","_cn6","_cn5","StyledExternalLink","HeaderContainer","IconBubble","PoolDetailsBreadcrumb","poolAddress","chainUrlParam","getChainUrlParam","exploreOrigin","poolsOrigin","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","CurrentPageBreadcrumb","poolName","StyledPoolDetailsTitle","PoolName","PoolDetailsTitle","toggleReversed","graphQLChain","toGraphQLChain","feePercent","StyledLink","getTokenDetailsURL","PoolDetailsBadge","$position","toLowerCase","href","getExplorerLink","ExplorerDataType","ADDRESS","ClickableTamaguiStyle","shortenAddress","TouchableArea","hoverable","testID","ReversedArrowsIcon","neutral2","ContractsDropdownRowContainer","Row","ContractsDropdownRow","tokens","currency","isPool","currencies","isNative","NATIVE_CHAIN_ID","explorerUrl","NATIVE","TOKEN","gap","DoubleCurrencyLogo","CurrencyLogo","BodyPrimary","BodySecondary","ExternalLinkIcon","PoolDetailsHeaderActions","isTouchDevice","useIsTouchDevice","contractsModalIsOpen","toggleContractsModal","justify","DropdownSelector","isOpen","toggleOpen","menuLabel","UniverseChainId","Mainnet","EtherscanLogo","neutral1","ExplorerIcon","tooltipText","hideChevron","buttonStyle","ActionButtonStyle","dropdownStyle","minWidth","alignRight","ShareButton","utmSource","Link","ClickableStyle","PoolDetailsHeader","shouldColumnBreak","showRewards","useFeatureFlag","FeatureFlags","LpIncentives","Column","concatClassName","TokenName","xl","xs","TokenTextWrapper","isClickable","SymbolText","CopyAddress","StyledCopyIcon","Copy","ExplorerWrapper","ButtonsRow","PoolDetailsLink","isCopied","setCopied","useCopyClipboard","copy","useCallback","checksummedAddress","isAddress","standard","TokenStandard","Native","handleTokenTextClick","truncateAddress","setTruncateAddress","onTextRender","textRef","clientWidth","scrollWidth","prev","containerWidth","align","onClick","MouseoverTooltip","disabled","forceShow","placement","TooltipSize","Max","text","HeaderText","StatsWrapper","surface2","loaded","StatItemColumn","PoolBalanceSymbols","PoolBalanceTokenNamesContainer","leftBarChartStyles","css","rightBarChartStyles","BalanceChartSide","$color","StatSectionBubble","StatHeaderBubble","PoolBalanceTokenNames","unwrappedToken","isLargeScreen","unwrapToken","nativeOnChain","tvl","PoolDetailsStats","currency0","useCurrency","currency1","tvlToken0","token0Price","tvlToken1","token1Price","token0FullData","token1FullData","tvlUSD","StatItem","delta","tvlUSDChange","volumeUSD24H","volumeUSD24HChange","Array","from","_","StatsTextContainer","StatItemText","formatDelta","DeltaArrow","DEFAULT_ERC20_DECIMALS","DEFAULT_GAS_LIMIT","Erc20","Interface","ERC20_ABI","Erc20Bytes32","fetchChunk","multicall","chunk","callStatic","returnData","error","code","INTERNAL_JSON_RPC_ERROR_CODE","message","half","Promise","all","slice","then","c0","c1","logger","debug","extra","parseTokens","addresses","items","Error","_v","arrayToSlices","reduce","acc","index","parsedToken","nameData","symbolData","decimalsData","nameDataBytes32","symbolDataBytes32","success","decodeFunctionResult","parseInt","Token","tryParseToken","createCallsForToken","encodeFunctionData","callData2","callData","gasLimit","TokenPromiseCache","getTokensAsync","formattedAddresses","calls","previouslyCalledTokens","forEach","tokenAddress","buildCurrencyKey","previousCall","push","formattedAddress","calledTokens","tokenMap2","tokenMap","currencyKey","useContractMultichain","addressMap","ABI","chainIds","account","useAccount","provider","walletProvider","useWeb3React","isSupportedChain","useIsSupportedChainIdCallback","RPC_PROVIDERS","getContract","useInterfaceMulticallContracts","MULTICALL_ADDRESSES","MulticallJSON","POSITION_CACHE_EXPIRY","cachedPositionsAtom","atom","poolAddressKey","details","fee","poolAddressCacheAtom","atomWithStorage","tokenCacheAtom","useGetCachedTokens","chains","multicallContracts","tokenCache","cache","setCache","useAtom","get","entry","deserializeToken","set","cache2","serializeToken","useTokenCache","fetchRemoteTokens","fetched","values","getTokens","local","missing","Set","cached","MAX_UINT128","BigNumber","pow","sub","useMultiChainPositions","cachedPositions","pms","V3NFT_ADDRESSES","NFTPositionManagerJSON","multicalls","poolAddressCache","updateCache","c","usePoolAddressCache","setPositions","setCachedPositions","setPositionsAndStaleTimeout","positions","result","setTimeout","useCachedPositions","positionsFetching","useRef","positionsLoading","current","feeMap","setFeeMap","priceMap","pricesLoading","contracts","contractMap","pool","toContractInput","useUniswapPricesQuery","currencyKeyFromGraphQL","project","markets","usePoolPriceMap","fetchPositionFees","pm","positionIds","id","interface","tokenId","recipient","amount0Max","amount1Max","fees","feeBytes","fetchPositionIds","balance","toNumber","idByte","fetchPositionDetails","positionBytes","fetchPositionInfo","positionDetails","poolInterface","IUniswapV3PoolStateJSON","flatMap","poolPairs","factoryAddress","V3_CORE_FACTORY_ADDRESSES","computePoolAddress","getChainInfo","sdkId","slot0","owner","Pool","sqrtPriceX96","position","Position","liquidity","tickLower","tickUpper","inRange","closed","eq","createPositionInfo","fetchPositionsForChain","balanceOf","lt","postionDetails","wrappedError","cause","fetchAllPositions","positions2","flat","hasFocus","onFocus","window","removeEventListener","addEventListener","toExact","prices","PoolDetailsStatsButtonsRow","surface1","sticky","SwapModalWrapper","open","timing","ease","CurrencySelect","fixed","PoolButton","icon","children","dataTestId","emphasis","PoolDetailsStatsButtons","userOwnedPositions","find","findMatchingPosition","location","useLocation","currencyInfo0","useCurrencyInfo","currencyId","currencyInfo1","handleAddLiquidity","currency0Address","currency1Address","state","pathname","url","swapModalOpen","toggleSwapModalOpen","useReducer","screenSizeLargerThanTablet","showWarningModal","setShowWarningModal","closeWarningModal","warningModalCurrencyInfo","setWarningModalCurrencyInfo","onWarningCardCtaPressed","currencyInfo","PoolButtonsWrapper","X","CoinConvert","Swap","syncTabToUrl","initialInputCurrency","initialOutputCurrency","TokenWarningCard","TokenWarningModal","isInfoOnlyWarning","isVisible","closeModalOnly","onAcknowledge","span","direction","scrollDirection","useScroll","Wrapper","MobileBottomBar","wrapperProps","hide","ScrollDirection","DOWN","PoolDetailsPositionsTable","textDecoration","getPositionUrl","LiquidityPositionCard","liquidityPosition","PoolTableTransactionType","PoolTableTransactionType2","PoolTransactionDefaultQuerySize","TableWrapper","PoolTransactionColumnWidth","comparePoolTokens","WRAPPED_NATIVE_CURRENCY","supportedChainIdFromGQLChain","PoolDetailsTransactionsTable","useChainIdFromUrlParam","activeLocalCurrency","useAppFiatCurrency","formatFiatPrice","filterModalIsOpen","toggleFilterModal","s","filterAnchorRef","setFilters","BUY","SELL","REMOVE","ADD","transactions","loadMore","first","dataV4","dataV3","dataV2","loadingV4","errorV4","fetchMore","fetchMoreV4","useV4PoolTransactionsQuery","loadingV3","errorV3","fetchMoreV3","useV3PoolTransactionsQuery","loadingV2","errorV2","fetchMoreV2","useV2PairTransactionsQuery","loadingMore","onComplete","cursor","timestamp","updateQuery","fetchMoreResult","mergedData","filteredTransactions","tx","tokenIn","token0Address","token0Quantity","isSell","PoolTransactionType","Remove","includes","transaction","hash","maker","amount0","amount1","token1Quantity","amountUSD","usdValue","usePoolTransactions","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","row","header","Cell","justifyContent","cell","TimestampCell","getValue","link","TRANSACTION","TableText","FilterHeaderRow","clickable","Filter","allFilters","activeFilter","anchorRef","PoolTransactionTableType","maxSize","grow","fiat","inputTokenAmount","abs","TokenTx","outputTokenAmount","makerAddress","Table","maxHeight","defaultPinnedColumns","forcePinning","xxl","TableHeader","active","PoolDetailsTableTab","activeTable","setActiveTable","useGetPositionsQuery","parseRestPosition","Boolean","calc24HVolChange","currentTime","getTime","dayAgo","twoDaysAgo","volume24h","cur","volume48h","getPoolDetailPageTitle","token0Symbol","token1Symbol","baseTitle","LeftColumn","HR","hr","TokenDetailsWrapper","TokenDetailsHeader","LinksContainer","PoolDetailsPage","chainInfo","unwrappedTokens","useParams","urlChain","poolIdOrAddress","useV4PoolQuery","errorPolicy","useV3PoolQuery","useV2PairQuery","anyError","anyLoading","V2_BIPS","txCount","token0Supply","market","token1Supply","concat","totalLiquidity","totalLiquidityPercentChange24h","hook","usePoolData","x","getUnwrappedPoolToken","isLPIncentivesEnabled","calculateApr","darkMode","accent1","color0","useColor","color1","poolNotFound","metatagProperties","chainName","label","description","metatags","useDynamicMetatags","showRewardsDistribution","boostedApr","ThemeProvider","Helmet","tag","meta","POOL_DETAILS_PAGE","properties","token1Address","token0Name","token1Name","backendChain"],"sourceRoot":""}