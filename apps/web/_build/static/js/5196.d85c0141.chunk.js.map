{"version":3,"file":"static/js/5196.d85c0141.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/../../packages/uniswap/src/features/testnets/TestnetModeModal.tsx?b3b7","webpack://@uniswap/interface/./src/components/Popups/PopupContent.tsx?b818","webpack://@uniswap/interface/./src/components/Liquidity/DepositInputForm.tsx?a56b","webpack://@uniswap/interface/./src/components/IncreaseLiquidity/IncreaseLiquidityReview.tsx?3dfb","webpack://@uniswap/interface/./src/components/claim/AddressClaimModal.tsx?6e98","webpack://@uniswap/interface/./src/components/RemoveLiquidity/RemoveLiquidityReview.tsx?eaaf","webpack://@uniswap/interface/./src/components/AddressQRModal.tsx?24ab","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityModalDetailRows.tsx?2f03","webpack://@uniswap/interface/./src/components/FeatureFlagModal/FeatureFlagModal.tsx?8ec7","webpack://@uniswap/interface/./src/components/TopLevelModals/UkDisclaimerModal.tsx?5191","webpack://@uniswap/interface/./src/components/RecoveryPhrase/Modal.tsx?f4c0","webpack://@uniswap/interface/./src/components/Popups/PopupItem.tsx?e1fe","webpack://@uniswap/interface/../../packages/uniswap/src/components/network/NetworkLogos.tsx?5873","webpack://@uniswap/interface/./src/components/Banner/Outage/MonadOutageBanner.tsx?8424","webpack://@uniswap/interface/./src/components/Banner/Outage/OutageBanner.tsx?83e0","webpack://@uniswap/interface/./src/components/PrivacyChoices/index.tsx?c946","webpack://@uniswap/interface/./src/components/AccountDrawer/UniwalletModal.tsx?70cc","webpack://@uniswap/interface/../../packages/ui/src/components/QRCode/QRCodeDisplay.tsx?0661","webpack://@uniswap/interface/./src/components/Popups/ClaimPopup.tsx?41ae","webpack://@uniswap/interface/../../packages/uniswap/src/components/modals/InfoLinkModal.tsx?a477","webpack://@uniswap/interface/./src/components/ConnectedAccountBlocked.tsx?1208","webpack://@uniswap/interface/./src/components/Liquidity/TokenInfo.tsx?69de","webpack://@uniswap/interface/./src/components/Popups/ToastRegularSimple.tsx?182e","webpack://@uniswap/interface/../../packages/uniswap/src/components/gating/Rows.tsx?7c81","webpack://@uniswap/interface/./src/components/ReceiveCryptoModal/ChooseProvider.tsx?21a2","webpack://@uniswap/interface/./src/pages/Pool/Positions/ClaimFeeModal.tsx?f683","webpack://@uniswap/interface/./src/pages/RemoveLiquidity/RemoveLiquidityForm.tsx?0d41","webpack://@uniswap/interface/./src/pages/IncreaseLiquidity/IncreaseLiquidityForm.tsx?fdfd","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityModalHeader.tsx?b936","webpack://@uniswap/interface/./src/components/ChainConnectivityWarning.tsx?1a01","components/Card/cards.tsx","webpack://@uniswap/interface/./src/components/Liquidity/DepositInputForm.tsx?ca57","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityModalHeader.tsx?fea1","webpack://@uniswap/interface/./src/components/Liquidity/TokenInfo.tsx?7209","components/Liquidity/hooks/useDependentAmountFallback.ts","components/PercentInput.tsx","components/earn/styled.tsx","hooks/useMachineTime.ts","webpack://@uniswap/interface/./src/components/ChainConnectivityWarning.tsx?4686","webpack://@uniswap/interface/./src/components/Popups/ClaimPopup.tsx?bb8e","webpack://@uniswap/interface/./src/components/Popups/PopupContent.tsx?2dd7","webpack://@uniswap/interface/./src/components/Popups/ToastRegularSimple.tsx?b7f1","components/Popups/PopupItem.tsx","components/Popups/PopupRenderer.tsx","../../../packages/ui/src/components/QRCode/QRCode.tsx","webpack://@uniswap/interface/../../packages/ui/src/components/QRCode/QRCodeDisplay.tsx?7b97","webpack://@uniswap/interface/./src/components/AccountDrawer/UniwalletModal.tsx?6b16","../../../packages/ui/src/components/icons/GlobeFilled.tsx","webpack://@uniswap/interface/../../packages/uniswap/src/components/network/NetworkLogos.tsx?3ad6","../../../packages/uniswap/src/features/address/color.ts","../../../packages/uniswap/src/features/address/avatar.ts","webpack://@uniswap/interface/./src/components/AddressQRModal.tsx?1ece","components/Banner/Outage/OutageBanner.tsx","webpack://@uniswap/interface/./src/components/Banner/Outage/MonadOutageBanner.tsx?1bf9","components/Banner/shared/Banners.tsx","webpack://@uniswap/interface/./src/components/ConnectedAccountBlocked.tsx?ea66","featureFlags/dynamicConfig/quickRouteChains.ts","webpack://@uniswap/interface/../../packages/uniswap/src/components/gating/Rows.tsx?1247","webpack://@uniswap/interface/./src/components/FeatureFlagModal/FeatureFlagModal.tsx?dfe9","components/PrivacyChoices/constants.ts","../../../packages/ui/src/components/icons/Lock.tsx","webpack://@uniswap/interface/./src/components/PrivacyChoices/index.tsx?c1fe","components/PrivacyPolicy.tsx","components/ReceiveCryptoModal/ProviderOption.tsx","../../../packages/ui/src/components/icons/CopySheets.tsx","../../../packages/ui/src/components/icons/QrCode.tsx","webpack://@uniswap/interface/./src/components/ReceiveCryptoModal/ChooseProvider.tsx?ebef","../../../packages/uniswap/src/features/fiatOnRamp/useCexTransferProviders.ts","components/ReceiveCryptoModal/index.tsx","../../../packages/ui/src/components/icons/EyeSlash.tsx","../../../packages/uniswap/src/features/passkey/utils.web.ts","webpack://@uniswap/interface/./src/components/RecoveryPhrase/Modal.tsx?b665","webpack://@uniswap/interface/./src/components/TopLevelModals/UkDisclaimerModal.tsx?cf73","assets/images/blue-loader.svg","components/AddressInputPanel.tsx","theme/components/icons/uniTokenAnimated.tsx","webpack://@uniswap/interface/./src/components/claim/AddressClaimModal.tsx?b9a8","components/IncreaseLiquidity/IncreaseLiquidityContext.tsx","components/IncreaseLiquidity/hooks.tsx","components/IncreaseLiquidity/IncreaseLiquidityTxContext.tsx","webpack://@uniswap/interface/./src/components/IncreaseLiquidity/IncreaseLiquidityReview.tsx?a230","components/Liquidity/LiquidityModalDetailRows.tsx","pages/IncreaseLiquidity/IncreaseLiquidityForm.tsx","pages/IncreaseLiquidity/IncreaseLiquidityModal.tsx","webpack://@uniswap/interface/./src/pages/Pool/Positions/ClaimFeeModal.tsx?78f2","../../../packages/uniswap/src/data/apiClients/tradingApi/useClaimLpFeesCalldataQuery.ts","components/RemoveLiquidity/RemoveLiquidityModalContext.tsx","components/RemoveLiquidity/hooks.ts","../../../packages/uniswap/src/data/apiClients/tradingApi/useDecreaseLpPositionCalldataQuery.ts","components/RemoveLiquidity/RemoveLiquidityTxContext.tsx","webpack://@uniswap/interface/./src/components/RemoveLiquidity/RemoveLiquidityReview.tsx?1407","webpack://@uniswap/interface/./src/pages/RemoveLiquidity/RemoveLiquidityForm.tsx?9c0d","pages/RemoveLiquidity/RemoveLiquidityModal.tsx","webpack://@uniswap/interface/../../packages/uniswap/src/components/modals/InfoLinkModal.tsx?94a9","../../../packages/uniswap/src/features/testnets/TestnetModeModal.tsx","components/TopLevelModals/index.tsx","hooks/useAccountRiskCheck.ts","pages/App/Chrome.tsx","pages/ExtensionPasskeyAuthPopUp/useExternallyConnectableExtensionId.ts","theme/components/icons/CautionTriangle.tsx","../../../packages/uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery.ts","../../../packages/uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery.ts","../../../packages/uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport styled from \"lib/styled-components\";\nimport { Box } from \"rebass/styled-components\";\nconst Card = styled(Box)`\n  width: ${({ width }) => width ?? \"100%\"};\n  padding: ${({ padding }) => padding ?? \"1rem\"};\n  border-radius: ${({ $borderRadius }) => $borderRadius ?? \"16px\"};\n  border: ${({ border }) => border};\n`;\nexport default Card;\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background-color: ${({ theme }) => theme.surface2};\n`;\nexport const DarkGrayCard = styled(Card)`\n  background-color: ${({ theme }) => theme.surface3};\n`;\nexport const OutlineCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background-color: ${({ theme }) => theme.surface2};\n`;\nexport const YellowCard = styled(Card)`\n  background-color: rgba(243, 132, 30, 0.05);\n  color: ${({ theme }) => theme.deprecated_yellow3};\n  font-weight: 535;\n`;\nexport const BlueCard = styled(Card)`\n  background-color: ${({ theme }) => theme.accent2};\n  color: ${({ theme }) => theme.accent1};\n  border-radius: 12px;\n`;\n","\"use strict\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useNativeTokenPercentageBufferExperiment } from \"pages/Pool/Positions/create/hooks/useNativeTokenPercentageBufferExperiment\";\nimport { useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { Flex } from \"ui/src\";\nimport { CurrencyInputPanel } from \"uniswap/src/components/CurrencyInputPanel/CurrencyInputPanel\";\nimport { CurrencyField } from \"uniswap/src/types/currency\";\nfunction UnderCardComponent({ children }) {\n  return <Flex\n    backgroundColor=\"$surface2\"\n    borderBottomLeftRadius=\"$rounded20\"\n    borderBottomRightRadius=\"$rounded20\"\n    py=\"$spacing8\"\n    px=\"$spacing16\"\n  >{children}</Flex>;\n}\nexport function DepositInputForm({\n  token0,\n  token1,\n  currencyAmounts,\n  currencyBalances,\n  currencyAmountsUSDValue,\n  formattedAmounts,\n  onUserInput,\n  onSetMax,\n  deposit0Disabled,\n  deposit1Disabled,\n  token0UnderCardComponent,\n  token1UnderCardComponent,\n  amount0Loading,\n  amount1Loading,\n  autofocus = true\n}) {\n  const bufferPercentage = useNativeTokenPercentageBufferExperiment();\n  const [focusedInputField, setFocusedInputField] = useState(autofocus ? PositionField.TOKEN0 : void 0);\n  const token0CurrencyInfo = useCurrencyInfo(token0);\n  const token1CurrencyInfo = useCurrencyInfo(token1);\n  const handleUserInput = (field) => {\n    return (newValue) => {\n      onUserInput(field, newValue);\n    };\n  };\n  const handleOnSetMax = (field) => {\n    return (amount) => {\n      setFocusedInputField(field);\n      onSetMax(field, amount);\n    };\n  };\n  return <Flex gap=\"$gap4\">{!deposit0Disabled && <Flex gap={2}><CurrencyInputPanel\n    focus={focusedInputField === PositionField.TOKEN0}\n    borderTopLeftRadius=\"$rounded20\"\n    borderTopRightRadius=\"$rounded20\"\n    borderBottomLeftRadius={token0UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    borderBottomRightRadius={token0UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    backgroundColor=\"$surface2\"\n    currencyInfo={token0CurrencyInfo}\n    currencyField={CurrencyField.INPUT}\n    currencyAmount={currencyAmounts?.[PositionField.TOKEN0]}\n    currencyBalance={currencyBalances?.[PositionField.TOKEN0]}\n    nativeTokenPercentageBuffer={bufferPercentage}\n    onSetExactAmount={handleUserInput(PositionField.TOKEN0)}\n    onToggleIsFiatMode={() => void 0}\n    usdValue={currencyAmountsUSDValue?.[PositionField.TOKEN0]}\n    onSetPresetValue={handleOnSetMax(PositionField.TOKEN0)}\n    value={formattedAmounts?.[PositionField.TOKEN0]}\n    onPressIn={() => setFocusedInputField(PositionField.TOKEN0)}\n    isLoading={amount0Loading}\n  />{token0UnderCardComponent && <UnderCardComponent>{token0UnderCardComponent}</UnderCardComponent>}</Flex>}{!deposit1Disabled && <Flex gap={2}><CurrencyInputPanel\n    focus={focusedInputField === PositionField.TOKEN1}\n    py=\"$spacing16\"\n    borderTopLeftRadius=\"$rounded20\"\n    borderTopRightRadius=\"$rounded20\"\n    borderBottomLeftRadius={token1UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    borderBottomRightRadius={token1UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    backgroundColor=\"$surface2\"\n    currencyInfo={token1CurrencyInfo}\n    currencyField={CurrencyField.INPUT}\n    currencyAmount={currencyAmounts?.[PositionField.TOKEN1]}\n    currencyBalance={currencyBalances?.[PositionField.TOKEN1]}\n    nativeTokenPercentageBuffer={bufferPercentage}\n    onSetExactAmount={handleUserInput(PositionField.TOKEN1)}\n    onToggleIsFiatMode={() => void 0}\n    usdValue={currencyAmountsUSDValue?.[PositionField.TOKEN1]}\n    onSetPresetValue={handleOnSetMax(PositionField.TOKEN1)}\n    value={formattedAmounts?.[PositionField.TOKEN1]}\n    onPressIn={() => setFocusedInputField(PositionField.TOKEN1)}\n    isLoading={amount1Loading}\n  />{token1UnderCardComponent && <UnderCardComponent>{token1UnderCardComponent}</UnderCardComponent>}</Flex>}</Flex>;\n}\n","\"use strict\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, ModalCloseIcon, Text, TouchableArea } from \"ui/src\";\nimport { BackArrow } from \"ui/src/components/icons/BackArrow\";\nimport { SwapFormSettings } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/SwapFormSettings\";\nimport { Deadline } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/settingsConfigurations/Deadline/Deadline\";\nimport { Slippage } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/settingsConfigurations/Slippage/Slippage\";\nexport function LiquidityModalHeader({\n  title,\n  closeModal,\n  goBack\n}) {\n  const { t } = useTranslation();\n  const CloseIconComponent = useMemo(\n    () => <ModalCloseIcon testId=\"LiquidityModalHeader-close\" onClose={closeModal} />,\n    [closeModal]\n  );\n  return <Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$spacing4\" width=\"100%\">{goBack ? <TouchableArea onPress={goBack}><BackArrow color=\"$neutral1\" size=\"$icon.24\" /></TouchableArea> : CloseIconComponent}<Text variant=\"body2\" flexGrow={1} textAlign=\"center\" pr={24}>{title}</Text>{!goBack ? <SwapFormSettings\n    adjustTopAlignment={false}\n    settings={[Slippage, Deadline]}\n    defaultTitle={t(\"pool.positions.transaction.settings\")}\n  /> : <Flex position=\"absolute\" top=\"0\" right=\"0\" p=\"$spacing4\">{CloseIconComponent}</Flex>}</Flex>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { getCurrencyForProtocol } from \"pages/Pool/Positions/create/utils\";\nimport { Flex, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { getSymbolDisplayText } from \"uniswap/src/utils/currency\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function TokenInfo({\n  currencyAmount,\n  currencyUSDAmount,\n  isMigrating = false\n}) {\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const currency = isMigrating ? getCurrencyForProtocol(currencyAmount?.currency, ProtocolVersion.V4) : currencyAmount?.currency;\n  return <Flex row alignItems=\"center\"><Flex grow><Text variant=\"heading2\">{formatCurrencyAmount({\n    value: currencyAmount,\n    type: NumberType.TokenNonTx\n  })}{\" \"}{getSymbolDisplayText(currency?.symbol)}</Text><Text variant=\"body3\" color=\"$neutral2\">{formatCurrencyAmount({\n    value: currencyUSDAmount,\n    type: NumberType.FiatStandard\n  })}</Text></Flex><CurrencyLogo currency={currency} size={iconSizes.icon36} /></Flex>;\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { useCreateLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery\";\nimport { useIncreaseLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nexport function useIncreasePositionDependentAmountFallback(queryParams, isQueryEnabled) {\n  const [hasErrorResponse, setHasErrorResponse] = useState(false);\n  const { data, error } = useIncreaseLpPositionCalldataQuery({\n    params: {\n      ...queryParams,\n      simulateTransaction: false\n    },\n    refetchInterval: hasErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled && queryParams?.simulateTransaction\n  });\n  useEffect(() => {\n    setHasErrorResponse(!!error);\n  }, [error, queryParams]);\n  return data?.dependentAmount;\n}\nexport function useCreatePositionDependentAmountFallback(queryParams, isQueryEnabled) {\n  const [hasErrorResponse, setHasErrorResponse] = useState(false);\n  const { data, error } = useCreateLpPositionCalldataQuery({\n    params: {\n      ...queryParams,\n      simulateTransaction: false\n    },\n    refetchInterval: hasErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled && queryParams?.simulateTransaction\n  });\n  useEffect(() => {\n    setHasErrorResponse(!!error);\n  }, [error, queryParams]);\n  return data?.dependentAmount;\n}\nexport function useUpdatedAmountsFromDependentAmount({\n  token0,\n  token1,\n  dependentAmount,\n  exactField,\n  currencyAmounts,\n  currencyAmountsUSDValue,\n  formattedAmounts,\n  deposit0Disabled,\n  deposit1Disabled\n}) {\n  const dependentAmount0 = dependentAmount && exactField === PositionField.TOKEN1 && token0 ? CurrencyAmount.fromRawAmount(token0, dependentAmount) : void 0;\n  const dependentAmount0USDValue = useUSDCValue(dependentAmount0) ?? void 0;\n  const dependentAmount1 = dependentAmount && exactField === PositionField.TOKEN0 && token1 ? CurrencyAmount.fromRawAmount(token1, dependentAmount) : void 0;\n  const dependentAmount1USDValue = useUSDCValue(dependentAmount1) ?? void 0;\n  return useMemo(() => {\n    if (dependentAmount0) {\n      return {\n        updatedFormattedAmounts: {\n          ...formattedAmounts,\n          TOKEN0: dependentAmount0?.toExact() ?? formattedAmounts?.TOKEN0\n        },\n        updatedUSDAmounts: {\n          ...currencyAmountsUSDValue,\n          TOKEN0: dependentAmount0USDValue\n        },\n        updatedCurrencyAmounts: {\n          ...currencyAmounts,\n          TOKEN0: dependentAmount0 ?? currencyAmounts?.TOKEN0\n        },\n        updatedDeposit0Disabled: !dependentAmount0.greaterThan(0),\n        updatedDeposit1Disabled: deposit1Disabled\n      };\n    } else if (dependentAmount1) {\n      return {\n        updatedFormattedAmounts: {\n          ...formattedAmounts,\n          TOKEN1: dependentAmount1?.toExact() ?? formattedAmounts?.TOKEN1\n        },\n        updatedUSDAmounts: {\n          ...currencyAmountsUSDValue,\n          TOKEN1: dependentAmount1USDValue\n        },\n        updatedCurrencyAmounts: {\n          ...currencyAmounts,\n          TOKEN1: dependentAmount1 ?? currencyAmounts?.TOKEN1\n        },\n        updatedDeposit0Disabled: deposit0Disabled,\n        updatedDeposit1Disabled: !dependentAmount1.greaterThan(0)\n      };\n    }\n    return {\n      updatedFormattedAmounts: formattedAmounts,\n      updatedUSDAmounts: currencyAmountsUSDValue,\n      updatedCurrencyAmounts: currencyAmounts,\n      updatedDeposit0Disabled: deposit0Disabled,\n      updatedDeposit1Disabled: deposit1Disabled\n    };\n  }, [\n    dependentAmount0,\n    dependentAmount0USDValue,\n    dependentAmount1,\n    dependentAmount1USDValue,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    formattedAmounts,\n    deposit0Disabled,\n    deposit1Disabled\n  ]);\n}\n","\"use strict\";\nimport { StyledInput, localeUsesComma } from \"components/NumericalInput\";\nimport { NumericalInputFontStyle } from \"pages/Swap/common/shared\";\nimport React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useCurrentLocale } from \"uniswap/src/features/language/hooks\";\nconst PercentInput = forwardRef(\n  ({ value, onUserInput, placeholder, testId, maxDecimals = 2, ...rest }, ref) => {\n    const inputRegexStr = `^\\\\d*(\\\\.\\\\d{0,${maxDecimals}})?$`;\n    const noDecimalRegexStr = \"^\\\\d*$\";\n    const inputRegex = RegExp(inputRegexStr);\n    const noDecimalRegex = RegExp(noDecimalRegexStr);\n    const locale = useCurrentLocale();\n    const enforcer = (nextUserInput) => {\n      const sanitizedInput = nextUserInput.replace(/,/g, \".\");\n      if (sanitizedInput === \"\" || (maxDecimals <= 0 ? noDecimalRegex : inputRegex).test(sanitizedInput)) {\n        onUserInput(sanitizedInput);\n      }\n    };\n    const formatValueWithLocale = (value2) => {\n      const [searchValue, replaceValue] = localeUsesComma(locale) ? [/\\./g, \",\"] : [/,/g, \".\"];\n      return value2.toString().replace(searchValue, replaceValue);\n    };\n    const valueFormattedWithLocale = formatValueWithLocale(value);\n    return <StyledInput\n      minLength={1}\n      maxLength={maxDecimals + 2}\n      {...rest}\n      ref={ref}\n      value={valueFormattedWithLocale}\n      data-testid={testId}\n      onChange={(event) => {\n        enforcer(event.target.value);\n      }}\n      inputMode=\"numeric\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      type=\"text\"\n      pattern={maxDecimals <= 0 ? noDecimalRegexStr : inputRegexStr}\n      placeholder={placeholder || \"0\"}\n      spellCheck=\"false\"\n    />;\n  }\n);\nPercentInput.displayName = \"Input\";\nconst MemoizedInput = React.memo(PercentInput);\nexport const StyledPercentInput = styled(MemoizedInput)`\n  max-height: 84px;\n  max-width: 100%;\n  width: ${({ $width }) => `${$width ?? 43}px`}; // this value is from the size of a 0 which is the default value\n  ${NumericalInputFontStyle}\n\n  ::placeholder {\n    opacity: 1;\n  }\n`;\n","\"use strict\";\nimport uImage from \"assets/images/big_unicorn.png\";\nimport noise from \"assets/images/noise.png\";\nimport xlUnicorn from \"assets/images/xl_uni.png\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport styled from \"lib/styled-components\";\nexport const CardBGImage = styled.span`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`;\nexport const CardBGImageSmaller = styled.span`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`;\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`;\nexport const CardSection = styled(AutoColumn)`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && \"0.4\"};\n`;\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`;\n","\"use strict\";\nimport useInterval from \"lib/hooks/useInterval\";\nimport { useCallback, useState } from \"react\";\nconst useMachineTimeMs = (updateInterval) => {\n  const [now, setNow] = useState(Date.now());\n  useInterval(\n    useCallback(() => {\n      setNow(Date.now());\n    }, []),\n    updateInterval\n  );\n  return now;\n};\nexport default useMachineTimeMs;\n","\"use strict\";\nimport useCurrentBlockTimestamp from \"hooks/useCurrentBlockTimestamp\";\nimport { PageType, useIsPage } from \"hooks/useIsPage\";\nimport useMachineTimeMs from \"hooks/useMachineTime\";\nimport styled from \"lib/styled-components\";\nimport ms from \"ms\";\nimport { useMemo, useState } from \"react\";\nimport { X } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { CautionTriangle } from \"theme/components/icons/CautionTriangle\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, styled as tamaguiStyled } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useUniswapContext } from \"uniswap/src/contexts/UniswapContext\";\nimport { DEFAULT_MS_BEFORE_WARNING, getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { AVERAGE_L1_BLOCK_TIME_MS } from \"uniswap/src/features/transactions/hooks/usePollingIntervalByChain\";\nconst BodyRow = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 485;\n  font-size: 14px;\n  line-height: 20px;\n`;\nconst Link = styled(ExternalLink)`\n  color: ${({ theme }) => theme.black};\n  text-decoration: underline;\n`;\nconst TitleRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: flex-start;\n`;\nconst TitleText = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 535;\n  font-size: 16px;\n  line-height: 24px;\n  margin: 0px 12px;\n`;\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.surface1};\n  border-radius: 12px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  z-index: 2;\n  display: block;\n  max-width: 348px;\n  padding: 16px 20px;\n  position: fixed;\n  bottom: 16px;\n  right: 16px;\n`;\nconst CloseButton = tamaguiStyled(X, {\n  ...ClickableTamaguiStyle,\n  size: iconSizes.icon20\n});\nexport function ChainConnectivityWarning() {\n  const { defaultChainId } = useEnabledChains();\n  const [hide, setHide] = useState(false);\n  const isMonadDownFlag = useFeatureFlag(FeatureFlags.MonadTestnetDown);\n  const { swapInputChainId: chainId } = useUniswapContext();\n  const info = getChainInfo(chainId ?? defaultChainId);\n  const label = info.label;\n  const isLandingPage = useIsPage(PageType.LANDING);\n  const waitMsBeforeWarning = useMemo(\n    () => (chainId ? getChainInfo(chainId)?.blockWaitMsBeforeWarning : void 0) ?? DEFAULT_MS_BEFORE_WARNING,\n    [chainId]\n  );\n  const machineTime = useMachineTimeMs(AVERAGE_L1_BLOCK_TIME_MS);\n  const blockTime = useCurrentBlockTimestamp({ refetchInterval: ms(\"5min\") });\n  const warning = Boolean(!!blockTime && machineTime - Number(blockTime) * 1e3 > waitMsBeforeWarning);\n  const isMonadDown = chainId === UniverseChainId.MonadTestnet && isMonadDownFlag;\n  if (hide || !isMonadDown && (!warning || isLandingPage)) {\n    return null;\n  }\n  return <Wrapper><Flex row justifyContent=\"space-between\" alignItems=\"center\" mb=\"$spacing8\"><TitleRow><CautionTriangle /><TitleText><Trans i18nKey=\"network.warning\" /></TitleText></TitleRow><CloseButton onClick={() => setHide(true)} /></Flex><BodyRow>{chainId === UniverseChainId.Mainnet ? <Trans i18nKey=\"network.lostConnection\" /> : <Trans i18nKey=\"network.mightBeDown\" values={{ network: label }} />}{\" \"}{info.statusPage !== void 0 && <span><Trans i18nKey=\"common.checkNetwork\" components={{ link: <Link href={info.statusPage || \"\"} /> }} /></span>}</BodyRow></Wrapper>;\n}\n","\"use strict\";\nimport tokenLogo from \"assets/images/token-logo.png\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { CardBGImage, CardNoise } from \"components/earn/styled\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled, { keyframes } from \"lib/styled-components\";\nimport { useEffect } from \"react\";\nimport { Heart, X } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useModalIsOpen, useShowClaimPopup, useToggleModal, useToggleShowClaimPopup } from \"state/application/hooks\";\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from \"state/claim/hooks\";\nimport { ThemedText } from \"theme/components\";\nimport { Button, Flex } from \"ui/src\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`;\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`;\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`;\nexport default function ClaimPopup() {\n  const account = useAccount();\n  const showClaimPopup = useShowClaimPopup();\n  const toggleShowClaimPopup = useToggleShowClaimPopup();\n  const showClaimModal = useModalIsOpen(ModalName.AddressClaim);\n  const toggleClaimModal = useToggleModal(ModalName.AddressClaim);\n  const userHasAvailableclaim = useUserHasAvailableClaim(account.address);\n  const unclaimedAmount = useUserUnclaimedAmount(account.address);\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      toggleShowClaimPopup();\n    }\n  }, [userHasAvailableclaim]);\n  return <Flex\n    position=\"absolute\"\n    top=\"$spacing12\"\n    width=\"100vw\"\n    alignItems=\"flex-end\"\n    pr=\"$spacing12\"\n    $sm={{\n      alignItems: \"center\",\n      pr: \"$none\"\n    }}\n  ><Flex $platform-web={{ position: \"fixed\" }} maxWidth={348} width=\"100%\" zIndex=\"$fixed\" animation=\"fast\">{showClaimPopup && !showClaimModal && <StyledClaimPopup gap=\"md\"><CardBGImage /><CardNoise /><StyledClose stroke=\"white\" onClick={toggleShowClaimPopup} /><AutoColumn style={{ padding: \"2rem 0\", zIndex: 10 }} justify=\"center\"><UniToken width=\"48px\" src={tokenLogo} />{\" \"}<ThemedText.DeprecatedWhite style={{ marginTop: \"1rem\" }} fontSize={36} fontWeight={535}>{unclaimedAmount?.toFixed(0, { groupSeparator: \",\" })} UNI\r\n              </ThemedText.DeprecatedWhite><ThemedText.DeprecatedWhite\n    style={{ paddingTop: \"1.25rem\", textAlign: \"center\" }}\n    fontWeight={535}\n    color=\"white\"\n  ><span role=\"img\" aria-label=\"party\">\r\n                  🎉\r\n                </span>{\" \"}<Trans i18nKey=\"claim.uni.arrived\" />{\" \"}<span role=\"img\" aria-label=\"party\">\r\n                  🎉\r\n                </span></ThemedText.DeprecatedWhite><ThemedText.DeprecatedSubHeader style={{ paddingTop: \"0.5rem\", textAlign: \"center\" }} color=\"white\"><Trans\n    i18nKey=\"claim.thanks\"\n    components={{\n      heart: <Heart size={12} />\n    }}\n  /></ThemedText.DeprecatedSubHeader></AutoColumn><AutoColumn style={{ zIndex: 10 }} justify=\"center\"><Button variant=\"branded\" fill={false} onPress={toggleClaimModal}><Trans i18nKey=\"common.claimUnis\" /></Button></AutoColumn></StyledClaimPopup>}</Flex></Flex>;\n}\n","\"use strict\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useOpenOffchainActivityModal } from \"components/AccountDrawer/MiniPortfolio/Activity/OffchainActivityModal\";\nimport {\n  getSignatureToActivityQueryOptions,\n  getTransactionToActivityQueryOptions\n} from \"components/AccountDrawer/MiniPortfolio/Activity/parseLocal\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport PortfolioRow from \"components/AccountDrawer/MiniPortfolio/PortfolioRow\";\nimport AlertTriangleFilled from \"components/Icons/AlertTriangleFilled\";\nimport { LoaderV3 } from \"components/Icons/LoadingSpinner\";\nimport Column, { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow } from \"components/deprecated/Row\";\nimport styled from \"lib/styled-components\";\nimport { X } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useOrder } from \"state/signatures/hooks\";\nimport { useTransaction } from \"state/transactions/hooks\";\nimport { ThemedText } from \"theme/components\";\nimport { EllipsisStyle } from \"theme/components/styles\";\nimport { Flex, useSporeColors } from \"ui/src\";\nimport { BridgeIcon } from \"uniswap/src/components/CurrencyLogo/SplitLogo\";\nimport { TransactionStatus } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useIsSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { useFormatter } from \"utils/formatNumbers\";\nexport const POPUP_MAX_WIDTH = 348;\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: ${({ $padding }) => `${$padding}px`};\n  top: ${({ $padding }) => `${$padding}px`};\n  color: ${({ theme }) => theme.neutral2};\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`;\nconst ColumnContainer = styled(AutoColumn)`\n  margin: 0 12px;\n`;\nconst PopupAlertTriangle = styled(AlertTriangleFilled)`\n  flex-shrink: 0;\n  width: 32px;\n  height: 32px;\n`;\nconst PopupContainer = ({ children, padded }) => {\n  return <Flex\n    row\n    width={POPUP_MAX_WIDTH}\n    backgroundColor=\"$surface1\"\n    position=\"relative\"\n    borderWidth={1}\n    borderRadius=\"$rounded16\"\n    borderColor=\"$surface3\"\n    p={padded ? \"20px 35px 20px 20px\" : \"2px 0px\"}\n    animation=\"300ms\"\n  >{children}</Flex>;\n};\nexport function FailedNetworkSwitchPopup({ chainId, onClose }) {\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  const chainInfo = isSupportedChain ? getChainInfo(chainId) : void 0;\n  if (!chainInfo) {\n    return null;\n  }\n  return <PopupContainer padded><StyledClose $padding={20} onClick={onClose} /><RowNoFlex gap=\"12px\"><PopupAlertTriangle /><ColumnContainer gap=\"sm\"><ThemedText.SubHeader color=\"neutral2\"><Trans i18nKey=\"common.failedSwitchNetwork\" /></ThemedText.SubHeader><ThemedText.BodySmall color=\"neutral2\"><Trans i18nKey=\"settings.switchNetwork.warning\" values={{ label: chainInfo.label }} /></ThemedText.BodySmall></ColumnContainer></RowNoFlex></PopupContainer>;\n}\nconst Descriptor = styled(ThemedText.BodySmall)`\n  ${EllipsisStyle}\n`;\nfunction ActivityPopupContent({ activity, onClick, onClose }) {\n  const success = activity.status === TransactionStatus.Confirmed && !activity.cancelled;\n  const pending = activity.status === TransactionStatus.Pending;\n  const showPortfolioLogo = success || pending || !!activity.offchainOrderDetails;\n  const colors = useSporeColors();\n  const isBridgeActivity = activity.outputChainId && activity.chainId && activity.chainId !== activity.outputChainId;\n  return <PopupContainer><PortfolioRow\n    left={showPortfolioLogo ? <Column><PortfolioLogo\n      chainId={activity.chainId}\n      currencies={activity.currencies}\n      accountAddress={activity.otherAccount}\n      customIcon={isBridgeActivity ? BridgeIcon : void 0}\n    /></Column> : <PopupAlertTriangle />}\n    title={<ThemedText.SubHeader>{activity.title}</ThemedText.SubHeader>}\n    descriptor={<Descriptor color=\"neutral2\">{activity.descriptor}</Descriptor>}\n    onClick={onClick}\n  />{pending ? <Flex position=\"absolute\" top={24} right={16}><LoaderV3 color={colors.accent1.variable} size=\"20px\" /></Flex> : <StyledClose $padding={16} onClick={onClose} />}</PopupContainer>;\n}\nexport function TransactionPopupContent({\n  chainId,\n  hash,\n  onClose\n}) {\n  const transaction = useTransaction(hash);\n  const { formatNumber } = useFormatter();\n  const { data: activity } = useQuery(getTransactionToActivityQueryOptions(transaction, chainId, formatNumber));\n  if (!transaction || !activity) {\n    return null;\n  }\n  const onClick = () => window.open(getExplorerLink(activity.chainId, activity.hash, ExplorerDataType.TRANSACTION), \"_blank\");\n  return <ActivityPopupContent activity={activity} onClick={onClick} onClose={onClose} />;\n}\nexport function UniswapXOrderPopupContent({ orderHash, onClose }) {\n  const order = useOrder(orderHash);\n  const openOffchainActivityModal = useOpenOffchainActivityModal();\n  const { formatNumber } = useFormatter();\n  const { data: activity } = useQuery(getSignatureToActivityQueryOptions(order, formatNumber));\n  if (!activity || !order) {\n    return null;\n  }\n  const onClick = () => openOffchainActivityModal(order, { inputLogo: activity?.logos?.[0], outputLogo: activity?.logos?.[1] });\n  return <ActivityPopupContent activity={activity} onClose={onClose} onClick={onClick} />;\n}\n","\"use strict\";\nimport { POPUP_MAX_WIDTH } from \"components/Popups/PopupContent\";\nimport { Flex, Text, TouchableArea, useShadowPropsMedium } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nexport function ToastRegularSimple({\n  icon,\n  text,\n  onDismiss\n}) {\n  const shadowProps = useShadowPropsMedium();\n  return <Flex\n    row\n    alignItems=\"center\"\n    animation=\"300ms\"\n    backgroundColor=\"$surface1\"\n    borderColor=\"$surface3\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"$spacing1\"\n    justifyContent=\"space-between\"\n    left={0}\n    mx={0}\n    {...shadowProps}\n    p=\"$spacing16\"\n    position=\"relative\"\n    width={POPUP_MAX_WIDTH}\n    opacity={1}\n    $sm={{ width: \"max-content\", mx: \"auto\" }}\n  ><Flex row alignItems=\"center\" gap={12}>{icon}{text ? <Text variant=\"body2\">{text}</Text> : null}</Flex>{onDismiss ? <TouchableArea onPress={onDismiss}><X color=\"$neutral2\" size={16} ml=\"$spacing8\" /></TouchableArea> : null}</Flex>;\n}\n","\"use strict\";\nimport {\n  FailedNetworkSwitchPopup,\n  TransactionPopupContent,\n  UniswapXOrderPopupContent\n} from \"components/Popups/PopupContent\";\nimport { ToastRegularSimple } from \"components/Popups/ToastRegularSimple\";\nimport { PopupType } from \"components/Popups/types\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { Shuffle } from \"ui/src/components/icons/Shuffle\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { SwapTab } from \"uniswap/src/types/screens/interface\";\nexport function PopupItem({ content, onClose }) {\n  const { t } = useTranslation();\n  const { chainId } = useAccount();\n  const supportedChainId = useSupportedChainId(chainId);\n  switch (content.type) {\n    case PopupType.Transaction: {\n      return supportedChainId ? <TransactionPopupContent hash={content.hash} chainId={supportedChainId} onClose={onClose} /> : null;\n    }\n    case PopupType.Order: {\n      return <UniswapXOrderPopupContent orderHash={content.orderHash} onClose={onClose} />;\n    }\n    case PopupType.FailedSwitchNetwork: {\n      return <FailedNetworkSwitchPopup chainId={content.failedSwitchNetwork} onClose={onClose} />;\n    }\n    case PopupType.SwitchNetwork: {\n      return <ToastRegularSimple\n        onDismiss={onClose}\n        icon={<NetworkLogo chainId={content.chainId} />}\n        text={getSwitchNetworkTitle(t, content.action, content.chainId)}\n      />;\n    }\n    case PopupType.Bridge: {\n      return <ToastRegularSimple\n        onDismiss={onClose}\n        icon={<BridgeToast inputChainId={content.inputChainId} outputChainId={content.outputChainId} />}\n      />;\n    }\n  }\n}\nfunction getSwitchNetworkTitle(t, action, chainId) {\n  const { label } = getChainInfo(chainId);\n  switch (action) {\n    case SwapTab.Swap:\n      return t(\"notification.swap.network\", { network: label });\n    case SwapTab.Send:\n      return t(\"notification.send.network\", { network: label });\n    default:\n      return \"\";\n  }\n}\nfunction BridgeToast({\n  inputChainId,\n  outputChainId\n}) {\n  const originChain = getChainInfo(inputChainId);\n  const targetChain = getChainInfo(outputChainId);\n  return <Flex row gap=\"$gap8\"><Flex row gap=\"$gap4\"><NetworkLogo chainId={inputChainId} /><Text variant=\"body2\" lineHeight={20}>{originChain.label}</Text></Flex><Shuffle color=\"$neutral2\" size=\"$icon.20\" /><Flex row gap=\"$gap4\"><NetworkLogo chainId={outputChainId} /><Text variant=\"body2\" lineHeight={20}>{targetChain.label}</Text></Flex></Flex>;\n}\n","\"use strict\";\nimport { PopupItem } from \"components/Popups/PopupItem\";\nimport { popupRegistry } from \"components/Popups/registry\";\nimport { DEFAULT_TXN_DISMISS_MS } from \"constants/misc\";\nimport { useEffect } from \"react\";\nimport { Toaster, toast } from \"sonner\";\nexport function PopupRenderer() {\n  useEffect(() => {\n    const unsubscribe = popupRegistry.addListener((content, key, removeAfterMs) => {\n      const toastId = toast(\n        <PopupItem key={key} content={content} onClose={() => popupRegistry.removePopup(key)} popKey={key} />,\n        {\n          duration: removeAfterMs ?? DEFAULT_TXN_DISMISS_MS,\n          onDismiss: () => {\n            popupRegistry.removePopup(key);\n          },\n          onAutoClose: () => {\n            popupRegistry.removePopup(key);\n          }\n        }\n      );\n      return toastId;\n    });\n    return unsubscribe;\n  }, []);\n  return <Toaster\n    position=\"top-right\"\n    pauseWhenPageIsHidden\n    expand\n    gap={16}\n    toastOptions={{\n      style: {\n        background: \"transparent\",\n        border: \"none\",\n        boxShadow: \"none\"\n      }\n    }}\n  />;\n}\n","import { create } from \"qrcode\";\nimport { useMemo } from \"react\";\nimport Svg, { Defs, G, LinearGradient, Path, Rect, Stop } from \"react-native-svg\";\nimport { isWeb } from \"tamagui\";\nimport { useSporeColors } from \"ui/src/hooks/useSporeColors\";\nconst SVG_SIZE = 40;\nconst EYE_SIZE_UNITS = 7;\nconst EYE_OFFSET_MULTIPLIER = isWeb ? 2 : 1;\nconst QREyes = ({\n  x = -1,\n  y = -1,\n  fillColor,\n  size\n}) => <Svg x={x} y={y}><G transform={`scale(${size / SVG_SIZE})`} x={x} y={y}><Path\n  clipRule=\"evenodd\"\n  d=\"M0 12C0 5.37258 5.37258 0 12 0H28C34.6274 0 40 5.37258 40 12V28C40 34.6274 34.6274 40 28 40H12C5.37258 40 0 34.6274 0 28V12ZM28 6.27451H12C8.8379 6.27451 6.27451 8.8379 6.27451 12V28C6.27451 31.1621 8.8379 33.7255 12 33.7255H28C31.1621 33.7255 33.7255 31.1621 33.7255 28V12C33.7255 8.8379 31.1621 6.27451 28 6.27451Z\"\n  fill={fillColor}\n  fillRule=\"evenodd\"\n/><Path\n  d=\"M11 17C11 13.6863 13.6863 11 17 11H23C26.3137 11 29 13.6863 29 17V23C29 26.3137 26.3137 29 23 29H17C13.6863 29 11 26.3137 11 23V17Z\"\n  fill={fillColor}\n/></G></Svg>;\nconst QREyeBG = ({\n  x = -1,\n  y = -1,\n  size,\n  backgroundColor\n}) => <Svg x={x} y={y}><G transform={`scale(${size / SVG_SIZE})`} x={x} y={y}><Path d=\"M0 0H40V40H0V0Z\" fill={backgroundColor} /></G></Svg>;\nconst QREyeWrapper = ({\n  x = 0,\n  y = 0,\n  backgroundColor,\n  overlayColor,\n  fillColor,\n  size\n}) => <><QREyeBG backgroundColor={backgroundColor} size={size} x={x} y={y} /><QREyes fillColor={fillColor} size={size} x={x} y={y} /><QREyes fillColor={overlayColor} size={size} x={x} y={y} /></>;\nfunction transformMatrixIntoCirclePath(matrix, size) {\n  const cellSize = size / matrix.length;\n  const radius = cellSize / 2;\n  let path = \"\";\n  matrix.forEach((row, i) => {\n    row.forEach((column, j) => {\n      if (column) {\n        const cx = j * cellSize + radius;\n        const cy = i * cellSize + radius;\n        path += `\n          M ${cx - radius},${cy}\n          A ${radius},${radius} 0 1,0 ${cx + radius},${cy}\n          A ${radius},${radius} 0 1,0 ${cx - radius},${cy}\n        `;\n      }\n    });\n  });\n  return {\n    cellSize,\n    path\n  };\n}\nfunction genMatrix(value, errorCorrectionLevel) {\n  const arr = Array.prototype.slice.call(create(value, { errorCorrectionLevel }).modules.data, 0);\n  const sqrt = Math.sqrt(arr.length);\n  return arr.reduce(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    (rows, key, index) => (index % sqrt === 0 ? rows.push([key]) : rows[rows.length - 1].push(key)) && rows,\n    []\n  );\n}\nexport function QRCode({\n  value,\n  size,\n  color,\n  backgroundColor: inputBackgroundColor,\n  overlayColor = \"#FFFFFF\",\n  quietZone = 8,\n  ecl = \"H\"\n}) {\n  const colors = useSporeColors();\n  const { matrix, path } = useMemo(() => {\n    const _matrix = genMatrix(value, ecl);\n    return {\n      matrix: _matrix,\n      path: transformMatrixIntoCirclePath(_matrix, size).path\n    };\n  }, [value, size, ecl]);\n  const eyeSize = size * (EYE_SIZE_UNITS / matrix.length);\n  const backgroundColor = inputBackgroundColor ?? colors.surface1.val;\n  const cornerPosition = (size - eyeSize) / EYE_OFFSET_MULTIPLIER;\n  return <Svg\n    height={size}\n    viewBox={[-quietZone, -quietZone, size + quietZone * 2, size + quietZone * 2].join(\" \")}\n    width={size}\n  ><Defs><LinearGradient gradientTransform=\"rotate(45)\" id=\"grad\" x1=\"0%\" x2=\"100%\" y1=\"0%\" y2=\"100%\"><Stop offset=\"0\" stopColor={color} stopOpacity=\"1\" /><Stop offset=\"1\" stopColor=\"rgb(0,255,255)\" stopOpacity=\"1\" /><Stop offset=\"1\" stopColor={void 0} stopOpacity=\"1\" /></LinearGradient></Defs><G><Rect\n    fill={backgroundColor}\n    height={size + quietZone * 2}\n    rx={24}\n    width={size + quietZone * 2}\n    x={-quietZone}\n    y={-quietZone}\n  /></G><G><Path d={path} fill={color} /><Path d={path} fill={overlayColor + \"2D\"} /><QREyeWrapper\n    backgroundColor={backgroundColor}\n    fillColor={color}\n    overlayColor={overlayColor + \"2D\"}\n    size={eyeSize}\n  /><QREyeWrapper\n    backgroundColor={backgroundColor}\n    fillColor={color}\n    overlayColor={overlayColor + \"2D\"}\n    size={eyeSize}\n    y={cornerPosition}\n  /><QREyeWrapper\n    backgroundColor={backgroundColor}\n    fillColor={color}\n    overlayColor={overlayColor + \"2D\"}\n    size={eyeSize}\n    x={cornerPosition}\n  /></G></Svg>;\n}\n","import { memo } from \"react\";\nimport { QRCode } from \"ui/src/components/QRCode/QRCode\";\nimport { Flex } from \"ui/src/components/layout\";\nimport { useSporeColors } from \"ui/src/hooks/useSporeColors\";\nfunction AddressQRCode({ address, ecl, size, backgroundColor, color }) {\n  const colors = useSporeColors();\n  return <QRCode\n    backgroundColor={backgroundColor}\n    color={color}\n    ecl={ecl}\n    overlayColor={colors.neutral1.val}\n    size={size}\n    value={address}\n  />;\n}\nconst _QRCodeDisplay = ({\n  encodedValue,\n  ecl = \"H\",\n  size,\n  color,\n  containerBackgroundColor,\n  children\n}) => {\n  return <Flex alignItems=\"center\" backgroundColor={containerBackgroundColor} justifyContent=\"center\" position=\"relative\"><AddressQRCode\n    address={encodedValue}\n    backgroundColor={containerBackgroundColor}\n    color={color}\n    ecl={ecl}\n    size={size}\n  /><Flex\n    alignItems=\"center\"\n    backgroundColor=\"$transparent\"\n    borderRadius=\"$roundedFull\"\n    overflow=\"visible\"\n    pl=\"$spacing2\"\n    position=\"absolute\"\n    pt=\"$spacing2\"\n  >{children}</Flex></Flex>;\n};\nexport const QRCodeDisplay = memo(_QRCodeDisplay);\n","\"use strict\";\nimport { InterfaceElementName, InterfaceEventName } from \"@uniswap/analytics-events\";\nimport MobileAppLogo from \"assets/svg/uniswap_app_logo.svg\";\nimport { useConnect } from \"hooks/useConnect\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Flex, Image, QRCodeDisplay, Separator, Text, useSporeColors } from \"ui/src\";\nimport { CloseIconWithHover } from \"ui/src/components/icons/CloseIconWithHover\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { isWebAndroid, isWebIOS } from \"utilities/src/platform\";\nimport { openDownloadApp } from \"utils/openDownloadApp\";\nexport default function UniwalletModal() {\n  const { t } = useTranslation();\n  const [uri, setUri] = useState();\n  const connection = useConnect();\n  const onLaunchedMobilePlatform = isWebIOS || isWebAndroid;\n  const open = !onLaunchedMobilePlatform && !!uri && connection.isPending;\n  useEffect(() => {\n    function listener({ type, data }) {\n      if (type === \"display_uniswap_uri\" && typeof data === \"string\") {\n        setUri(data);\n      }\n    }\n    window.addEventListener(\"display_uniswap_uri\", listener);\n    return () => {\n      window.removeEventListener(\"display_uniswap_uri\", listener);\n    };\n  }, []);\n  const close = useCallback(() => {\n    connection?.reset();\n    setUri(void 0);\n  }, [connection]);\n  useEffect(() => {\n    if (open) {\n      sendAnalyticsEvent(InterfaceEventName.UNIWALLET_CONNECT_MODAL_OPENED);\n    } else {\n      setUri(void 0);\n    }\n  }, [open]);\n  const colors = useSporeColors();\n  return <Modal name={ModalName.UniWalletConnect} isModalOpen={open} onClose={close} padding={0}><Flex shrink grow p=\"$spacing20\"><Flex row justifyContent=\"space-between\"><Text variant=\"subheading1\">{t(\"account.drawer.modal.scan\")}</Text><CloseIconWithHover onClose={close} /></Flex><Flex row my=\"$spacing24\" centered>{uri && <QRCodeDisplay\n    ecl=\"M\"\n    color={colors.accent1.val}\n    containerBackgroundColor={colors.surface1.val}\n    encodedValue={uri}\n    size={370}\n  ><Flex borderRadius=\"$rounded32\" borderWidth=\"$spacing8\" borderColor=\"$surface2\"><Image src={MobileAppLogo} width={81} height={81} /></Flex></QRCodeDisplay>}</Flex><Separator /><Flex centered row pt=\"$spacing20\" justifyContent=\"space-between\" gap=\"$spacing20\"><Flex shrink><Text variant=\"subheading2\">{t(\"account.drawer.modal.dont\")}</Text><Text variant=\"body3\" color=\"$neutral2\">{t(\"account.drawer.modal.body\")}</Text></Flex><Flex row><Button\n    size=\"small\"\n    emphasis=\"primary\"\n    variant=\"branded\"\n    onPress={() => openDownloadApp({ element: InterfaceElementName.UNISWAP_WALLET_MODAL_DOWNLOAD_BUTTON })}\n  >{t(\"common.download\")}</Button></Flex></Flex></Flex></Modal>;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [GlobeFilled, AnimatedGlobeFilled] = createIcon({\n  name: \"GlobeFilled\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}><Path\n    d=\"M4.12251 8.5625C4.23501 10.8725 5.01501 13.2275 6.37251 15.32C3.19251 14.615 0.770022 11.8925 0.522522 8.5625H4.12251ZM6.37251 0.679993C3.19251 1.38499 0.770022 4.1075 0.522522 7.4375H4.12251C4.23501 5.1275 5.01501 2.77249 6.37251 0.679993ZM8.15003 0.5H7.85001L7.62502 0.822495C6.20002 2.84749 5.36751 5.1725 5.24751 7.4375H10.7525C10.6325 5.1725 9.80002 2.84749 8.37502 0.822495L8.15003 0.5ZM5.24751 8.5625C5.36751 10.8275 6.20002 13.1525 7.62502 15.1775L7.85001 15.5H8.15003L8.37502 15.1775C9.80002 13.1525 10.6325 10.8275 10.7525 8.5625H5.24751ZM11.8775 8.5625C11.765 10.8725 10.985 13.2275 9.62753 15.32C12.8075 14.615 15.23 11.8925 15.4775 8.5625H11.8775ZM15.4775 7.4375C15.23 4.1075 12.8075 1.38499 9.62753 0.679993C10.985 2.77249 11.765 5.1275 11.8775 7.4375H15.4775Z\"\n    fill=\"currentColor\"\n  /></Svg>\n});\n","import { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Flex, Image, Text, TouchableArea, UniversalImage, UniversalImageResizeMode } from \"ui/src\";\nimport { ALL_NETWORKS_LOGO } from \"ui/src/assets\";\nimport { GlobeFilled } from \"ui/src/components/icons/GlobeFilled\";\nimport { X } from \"ui/src/components/icons/X\";\nimport { borderRadii, iconSizes, zIndexes } from \"ui/src/theme\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { LearnMoreLink } from \"uniswap/src/components/text/LearnMoreLink\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { isInterface } from \"utilities/src/platform\";\nexport function NetworkLogos({ chains }) {\n  const { t } = useTranslation();\n  const [isShowingModal, setIsShowingModal] = useState(false);\n  const closeModal = useCallback(() => setIsShowingModal(false), []);\n  const openModal = useCallback(() => setIsShowingModal(true), []);\n  const chainPills = useMemo(\n    () => <Flex row flexWrap=\"wrap\" justifyContent=\"center\" gap=\"$gap12\">{chains.map((chain) => {\n      const { label, logo } = getChainInfo(chain);\n      return <Flex\n        key={chain}\n        row\n        centered\n        p=\"$spacing4\"\n        backgroundColor=\"$surface2\"\n        width=\"max-content\"\n        borderRadius=\"$rounded8\"\n        gap=\"$gap8\"\n      >{logo && <Image\n        objectFit=\"contain\"\n        source={logo}\n        style={{\n          width: iconSizes.icon16,\n          height: iconSizes.icon16,\n          borderRadius: borderRadii.rounded4\n        }}\n      />}<Text color=\"$neutral1\" variant=\"body4\">{label}</Text></Flex>;\n    })}</Flex>,\n    [chains]\n  );\n  return <>{\n    /* TRIGGER BUTTON */\n  }<Flex row centered><Button\n    size=\"xxsmall\"\n    emphasis=\"secondary\"\n    aria-label={t(\"extension.connection.networks\")}\n    fill={false}\n    icon={<UniversalImage\n      allowLocalUri\n      uri={ALL_NETWORKS_LOGO}\n      size={{\n        width: iconSizes.icon20,\n        height: iconSizes.icon20,\n        resizeMode: UniversalImageResizeMode.Contain\n      }}\n    />}\n    onPress={openModal}\n  >{t(\"extension.connection.networks\")}</Button></Flex>{\n    /* SHEET/MODAL */\n  }<Modal name={ModalName.QRCodeNetworkInfo} isModalOpen={isShowingModal} onClose={closeModal}><Flex gap=\"$spacing12\" px=\"$padding16\" pb=\"$spacing4\" alignItems=\"center\" mt=\"$gap12\">{\n    /* X BUTTON */\n  }{isInterface && <TouchableArea alignSelf=\"flex-end\" zIndex={zIndexes.default} onPress={closeModal}><X color=\"$neutral2\" size=\"$icon.24\" /></TouchableArea>}{\n    /* HEADER */\n  }<Flex centered p=\"$padding12\" backgroundColor=\"$surface3\" borderRadius=\"$rounded12\"><GlobeFilled color=\"$neutral1\" size=\"$icon.20\" /></Flex><Text color=\"$neutral1\" mt=\"$spacing2\" textAlign=\"center\" variant=\"subheading1\">{t(\"qrScanner.wallet.networks\")}</Text>{\n    /* CONTENT */\n  }{chainPills}{\n    /* FOOTER */\n  }<LearnMoreLink\n    textColor=\"$neutral1\"\n    textVariant=\"buttonLabel3\"\n    url={uniswapUrls.helpArticleUrls.supportedNetworks}\n  /><Flex row width=\"100%\"><Button mt=\"$spacing12\" emphasis=\"secondary\" onPress={closeModal}>{t(\"common.button.close\")}</Button></Flex></Flex></Modal></>;\n}\n","import { useMemo } from \"react\";\nimport { getUniconColors, passesContrast, useExtractedColors, useIsDarkMode, useSporeColors } from \"ui/src\";\nimport { useAvatar } from \"uniswap/src/features/address/avatar\";\nexport function useAddressColorProps(address) {\n  const colors = useSporeColors();\n  const isDarkMode = useIsDarkMode();\n  const { color: uniconColor } = getUniconColors(address, isDarkMode);\n  const { avatar, loading: avatarLoading } = useAvatar(address);\n  const { colors: avatarColors } = useExtractedColors(avatar);\n  const hasAvatar = !!avatar && !avatarLoading;\n  const smartColor = useMemo(() => {\n    const contrastThreshold = 3;\n    const backgroundColor = colors.surface2.val;\n    if (hasAvatar && avatarColors && avatarColors.primary) {\n      if (passesContrast(avatarColors.primary, backgroundColor, contrastThreshold)) {\n        return avatarColors.primary;\n      }\n      if (passesContrast(avatarColors.base, backgroundColor, contrastThreshold)) {\n        return avatarColors.base;\n      }\n      if (passesContrast(avatarColors.detail, backgroundColor, contrastThreshold)) {\n        return avatarColors.detail;\n      }\n      return colors.neutral1.val;\n    }\n    return uniconColor;\n  }, [avatarColors, hasAvatar, uniconColor, colors.surface2.val, colors.neutral1.val]);\n  return smartColor;\n}\n","import { useENSAvatar } from \"uniswap/src/features/ens/api\";\nimport { useUnitagByAddress } from \"uniswap/src/features/unitags/hooks\";\nimport { getValidAddress } from \"uniswap/src/utils/addresses\";\nexport function useAvatar(address) {\n  const validated = getValidAddress(address);\n  const { data: ensAvatar, isLoading: ensLoading } = useENSAvatar(validated);\n  const { unitag, loading: unitagLoading } = useUnitagByAddress(validated || void 0);\n  const unitagAvatar = unitag?.metadata?.avatar;\n  if (unitagAvatar) {\n    return { avatar: unitagAvatar, loading: false };\n  }\n  if (ensAvatar) {\n    return { avatar: ensAvatar, loading: false };\n  }\n  return { avatar: void 0, loading: ensLoading || unitagLoading };\n}\n","\"use strict\";\nimport { AddressDisplay } from \"components/AccountDetails/AddressDisplay\";\nimport Identicon from \"components/Identicon\";\nimport { GetHelpHeader } from \"components/Modal/GetHelpHeader\";\nimport { useCallback } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useModalIsOpen, useOpenModal, useToggleModal } from \"state/application/hooks\";\nimport { ThemedText } from \"theme/components\";\nimport { CopyHelper } from \"theme/components/CopyHelper\";\nimport { Flex, QRCodeDisplay, Text, useSporeColors } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { NetworkLogos } from \"uniswap/src/components/network/NetworkLogos\";\nimport { useAddressColorProps } from \"uniswap/src/features/address/color\";\nimport { useOrderedChainIds } from \"uniswap/src/features/chains/hooks/useOrderedChainIds\";\nimport { SUPPORTED_CHAIN_IDS } from \"uniswap/src/features/chains/types\";\nimport { useENSName } from \"uniswap/src/features/ens/api\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useUnitagByAddress } from \"uniswap/src/features/unitags/hooks\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nconst UNICON_SIZE = 50;\nconst QR_CODE_SIZE = 240;\nexport function AddressQRModal({ accountAddress }) {\n  const colors = useSporeColors();\n  const toggleModal = useToggleModal(ModalName.ReceiveCryptoQr);\n  const isOpen = useModalIsOpen(ModalName.ReceiveCryptoQr);\n  const openReceiveCryptoModal = useOpenModal({ name: ModalName.ReceiveCryptoModal });\n  const { data: ENSName } = useENSName(accountAddress);\n  const { unitag } = useUnitagByAddress(accountAddress);\n  const hasSecondaryIdentifier = ENSName || unitag?.username;\n  const addressColor = useAddressColorProps(accountAddress);\n  const orderedChainIds = useOrderedChainIds(SUPPORTED_CHAIN_IDS);\n  const goBack = useCallback(() => {\n    toggleModal();\n    openReceiveCryptoModal();\n  }, [toggleModal, openReceiveCryptoModal]);\n  return <Modal isModalOpen={isOpen} onClose={toggleModal} maxWidth={420} name={ModalName.AddressQR}><Flex pb=\"$spacing16\" gap=\"$spacing24\"><GetHelpHeader goBack={goBack} closeModal={toggleModal} /><Flex gap=\"$spacing12\"><Flex alignItems=\"center\"><ThemedText.SubHeader><AddressDisplay enableCopyAddress address={accountAddress} /></ThemedText.SubHeader>{hasSecondaryIdentifier && <CopyHelper iconSize={14} iconPosition=\"right\" toCopy={accountAddress}><Text variant=\"body4\" color=\"neutral2\">{shortenAddress(accountAddress)}</Text></CopyHelper>}</Flex><QRCodeDisplay\n    ecl=\"M\"\n    color={addressColor}\n    containerBackgroundColor={colors.surface1.val}\n    size={QR_CODE_SIZE}\n    encodedValue={accountAddress}\n  ><Flex\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    p=\"$spacing4\"\n    backgroundColor=\"$surface1\"\n    borderRadius=\"$roundedFull\"\n  ><Identicon size={UNICON_SIZE} account={accountAddress} /></Flex></QRCodeDisplay><Text color=\"$neutral2\" lineHeight={20} textAlign=\"center\" variant=\"body3\"><Trans i18nKey=\"qrScanner.wallet.title\" values={{ numOfNetworks: Object.keys(orderedChainIds).length }} /></Text><NetworkLogos chains={orderedChainIds} /></Flex></Flex></Modal>;\n}\n","\"use strict\";\nimport { useTheme } from \"lib/styled-components\";\nimport { useState } from \"react\";\nimport { Globe, X } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { capitalize } from \"tsafe\";\nimport { Flex, Text, styled as tamaguiStyled } from \"ui/src\";\nimport { iconSizes, zIndexes } from \"ui/src/theme\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nexport function getOutageBannerSessionStorageKey(chainId) {\n  return `hideOutageBanner-${chainId}`;\n}\nexport const OutageCloseButton = tamaguiStyled(X, {\n  ...ClickableTamaguiStyle,\n  size: iconSizes.icon24,\n  p: \"$spacing4\",\n  right: 6,\n  top: 8,\n  borderRadius: \"50%\",\n  backgroundColor: \"$surface5\",\n  color: \"$neutral2\",\n  position: \"absolute\"\n});\nexport function OutageBanner({ chainId, version }) {\n  const [hidden, setHidden] = useState(false);\n  const theme = useTheme();\n  const versionName = version ? version.toString().toLowerCase() + \" data\" : \"Data\";\n  const { defaultChainId } = useEnabledChains();\n  const chainName = capitalize(getChainUrlParam(chainId ?? defaultChainId));\n  const versionDescription = version ? \" \" + version.toString().toLowerCase() : \"\";\n  if (hidden) {\n    return null;\n  }\n  return <Flex\n    width={360}\n    maxWidth=\"95%\"\n    $platform-web={{ position: \"fixed\" }}\n    bottom={40}\n    right={20}\n    backgroundColor={theme.surface2}\n    zIndex={zIndexes.sticky}\n    borderRadius=\"$rounded20\"\n    borderStyle=\"solid\"\n    borderWidth={1.3}\n    borderColor={theme.surface3}\n    $lg={{\n      bottom: 62\n    }}\n    $sm={{\n      bottom: 80\n    }}\n    $xs={{\n      right: 10,\n      left: 10\n    }}\n  ><Flex row p=\"$spacing8\" borderRadius=\"$rounded20\" height=\"100%\"><Flex\n    centered\n    m=\"$spacing12\"\n    mr=\"$spacing6\"\n    height={45}\n    width={45}\n    backgroundColor={theme.warning2}\n    borderRadius=\"$rounded12\"\n  ><Globe size={28} color={theme.warning2} /></Flex><Flex gap=\"$spacing2\" p={10} $xs={{ maxWidth: 270 }} flexShrink={1}><Text variant=\"body2\" color={theme.neutral1}><Trans i18nKey=\"outageBanner.title\" values={{ versionName }} /></Text><Text variant=\"body3\" color={theme.neutral2}><Trans i18nKey=\"outageBanner.message\" values={{ chainName, versionDescription }} /></Text><Text variant=\"body3\" color={theme.neutral2}><Trans i18nKey=\"outageBanner.message.sub\" /></Text>{\n    /* <ExternalLink href=\"https://support.uniswap.org/hc/en-us/articles/23952001935373-Subgraph-downtime\">\n      <Text variant=\"body3\" color={theme.accent1}>\n        <Trans i18nKey=\"common.button.learn\" />\n      </Text>\n    </ExternalLink> */\n  }</Flex><OutageCloseButton\n    data-testid=\"uniswap-outage-banner\"\n    onClick={() => {\n      setHidden(true);\n      sessionStorage.setItem(getOutageBannerSessionStorageKey(chainId), \"true\");\n    }}\n  /></Flex></Flex>;\n}\n","\"use strict\";\nimport { OutageCloseButton } from \"components/Banner/Outage/OutageBanner\";\nimport { useTheme } from \"lib/styled-components\";\nimport { useState } from \"react\";\nimport { Globe } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { zIndexes } from \"ui/src/theme\";\nexport function MonadOutageBanner() {\n  const { t } = useTranslation();\n  const [hidden, setHidden] = useState(false);\n  const theme = useTheme();\n  if (hidden) {\n    return null;\n  }\n  return <Flex\n    width={360}\n    maxWidth=\"95%\"\n    $platform-web={{ position: \"fixed\" }}\n    bottom={40}\n    right={20}\n    backgroundColor={theme.surface2}\n    zIndex={zIndexes.sticky}\n    borderRadius=\"$rounded20\"\n    borderStyle=\"solid\"\n    borderWidth={1.3}\n    borderColor={theme.surface3}\n    $lg={{\n      bottom: 62\n    }}\n    $sm={{\n      bottom: 80\n    }}\n    $xs={{\n      right: 10,\n      left: 10\n    }}\n  ><Flex row p=\"$spacing8\" borderRadius=\"$rounded20\" height=\"100%\"><Flex\n    centered\n    m=\"$spacing12\"\n    mr=\"spacing6\"\n    height={45}\n    width={45}\n    backgroundColor={theme.warning2}\n    borderRadius=\"$rounded12\"\n  ><Globe size={28} color={theme.warning2} /></Flex><Flex gap=\"$spacing2\" p={10} $xs={{ maxWidth: 270 }} flexShrink={1}><Text variant=\"body2\" color={theme.neutral1}>{t(\"home.banner.testnetMode.outage.monad.title\")}</Text><Text variant=\"body3\" color={theme.neutral2}>{t(\"home.banner.testnetMode.outage.monad.description\")}</Text></Flex><OutageCloseButton\n    data-testid=\"monad-outage-banner\"\n    onClick={() => {\n      setHidden(true);\n    }}\n  /></Flex></Flex>;\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { MonadOutageBanner } from \"components/Banner/Outage/MonadOutageBanner\";\nimport { OutageBanner, getOutageBannerSessionStorageKey } from \"components/Banner/Outage/OutageBanner\";\nimport { manualChainOutageAtom } from \"featureFlags/flags/outageBanner\";\nimport { useAtomValue } from \"jotai/utils\";\nimport { useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { getChainIdFromChainUrlParam, isChainUrlParam } from \"utils/chainParams\";\nimport { getCurrentPageFromLocation } from \"utils/urlRoutes\";\nexport function Banners() {\n  const { pathname } = useLocation();\n  const currentPage = getCurrentPageFromLocation(pathname);\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const manualOutage = useAtomValue(manualChainOutageAtom);\n  const isMonadDownFlag = useFeatureFlag(FeatureFlags.MonadTestnetDown);\n  const { isTestnetModeEnabled } = useEnabledChains();\n  const pageChainId = useMemo(() => {\n    const chainUrlParam = pathname.split(\"/\").find(isChainUrlParam);\n    return chainUrlParam ? getChainIdFromChainUrlParam(chainUrlParam) : UniverseChainId.Mainnet;\n  }, [pathname]);\n  const currentPageHasManualOutage = manualOutage?.chainId === pageChainId;\n  const showOutageBanner = useMemo(() => {\n    return currentPage && pageChainId && currentPageHasManualOutage && !sessionStorage.getItem(getOutageBannerSessionStorageKey(pageChainId)) && [\n      InterfacePageName.EXPLORE_PAGE,\n      InterfacePageName.TOKEN_DETAILS_PAGE,\n      InterfacePageName.POOL_DETAILS_PAGE,\n      InterfacePageName.TOKENS_PAGE\n    ].includes(currentPage);\n  }, [currentPage, currentPageHasManualOutage, pageChainId]);\n  if (isMonadDownFlag && isTestnetModeEnabled) {\n    return <MonadOutageBanner />;\n  }\n  if (pageChainId && showOutageBanner) {\n    return <OutageBanner chainId={pageChainId} version={currentPageHasManualOutage ? manualOutage?.version : void 0} />;\n  }\n  return null;\n}\n","\"use strict\";\nimport Column from \"components/deprecated/Column\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { Slash } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nimport { CopyHelper } from \"theme/components/CopyHelper\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { Flex, Text } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nconst ContentWrapper = styled(Column)`\n  align-items: center;\n  margin: 32px;\n  text-align: center;\n  font-size: 12px;\n`;\nexport default function ConnectedAccountBlocked(props) {\n  const theme = useTheme();\n  return <Modal name={ModalName.AccountBlocked} isModalOpen={props.isOpen} onClose={Function.prototype()} padding={0}><ContentWrapper><Slash size=\"22px\" color={theme.neutral2} /><ThemedText.DeprecatedLargeHeader lineHeight={2} marginBottom={1} marginTop={1}><Trans i18nKey=\"common.blockedAddress\" /></ThemedText.DeprecatedLargeHeader><Text color=\"$neutral2\" fontSize={14} mb={12}>{props.account}</Text><ThemedText.DeprecatedMain fontSize={12} marginBottom={12}><Trans\n    i18nKey=\"common.blocked.reason\"\n    components={{ link: <ExternalLink href=\"https://help.uniswap.org/en/articles/6149816\" /> }}\n  /></ThemedText.DeprecatedMain><ThemedText.DeprecatedMain fontSize={12}><Trans\n    i18nKey=\"common.blocked.ifError\"\n    components={{\n      emailAddress: <Flex mt={12} alignItems=\"center\"><CopyHelper\n        toCopy=\"compliance@uniswap.org\"\n        fontSize={14}\n        iconSize={16}\n        color={theme.accent1}\n        iconPosition=\"right\"\n      >\r\n                    compliance@uniswap.org\r\n                  </CopyHelper></Flex>\n    }}\n  /></ThemedText.DeprecatedMain></ContentWrapper></Modal>;\n}\n","\"use strict\";\nimport { SUPPORTED_CHAIN_IDS } from \"uniswap/src/features/chains/types\";\nimport { DynamicConfigs, QuickRouteChainsConfigKey } from \"uniswap/src/features/gating/configs\";\nimport { useDynamicConfigValue } from \"uniswap/src/features/gating/hooks\";\nimport { isUniverseChainIdArrayType } from \"uniswap/src/features/gating/typeGuards\";\nimport { logger } from \"utilities/src/logger/logger\";\nexport function useQuickRouteChains() {\n  const chains = useDynamicConfigValue(\n    DynamicConfigs.QuickRouteChains,\n    QuickRouteChainsConfigKey.Chains,\n    [],\n    isUniverseChainIdArrayType\n  );\n  if (chains.every((c) => SUPPORTED_CHAIN_IDS.includes(c))) {\n    return chains;\n  } else {\n    logger.error(new Error(\"dynamic config chains contain invalid ChainId\"), {\n      tags: {\n        file: \"quickRouteChains\",\n        function: \"useQuickRouteChains\"\n      },\n      extra: {\n        chains\n      }\n    });\n    return [];\n  }\n}\n","import { useCallback } from \"react\";\nimport { Flex, Input, Switch, Text } from \"ui/src\";\nimport { LayerProperties } from \"uniswap/src/features/gating/experiments\";\nimport { getOverrideAdapter, useExperiment, useLayer } from \"uniswap/src/features/gating/sdk/statsig\";\nexport function LayerRow({\n  value: layerName,\n  layerDefault = false\n}) {\n  const { get: getLayerValue } = useLayer(layerName);\n  const value = Object.values(LayerProperties[layerName]).reduce(\n    (acc, key) => ({ ...acc, [key]: getLayerValue(key) ?? layerDefault }),\n    {}\n  );\n  const overrideValue = useCallback(\n    (newPairs) => {\n      getOverrideAdapter().overrideLayer(layerName, { ...value, ...newPairs });\n    },\n    [layerName, value]\n  );\n  return <Row target={layerName} values={value} overrideValue={overrideValue} />;\n}\nexport function ExperimentRow({ value: experimentName }) {\n  const { value } = useExperiment(experimentName);\n  const overrideValue = useCallback(\n    (newPairs) => {\n      getOverrideAdapter().overrideExperiment(experimentName, newPairs);\n    },\n    [experimentName]\n  );\n  return <Row target={experimentName} values={value} overrideValue={overrideValue} />;\n}\nfunction Row({\n  target,\n  values,\n  overrideValue\n}) {\n  const handleBooleanChange = useCallback(\n    (key) => (newValue) => {\n      overrideValue({ [key]: newValue });\n    },\n    [overrideValue]\n  );\n  const handleNumberChange = useCallback(\n    (key) => (newValue) => {\n      overrideValue({ [key]: Number(newValue) });\n    },\n    [overrideValue]\n  );\n  const handleStringChange = useCallback(\n    (key) => (newValue) => {\n      overrideValue({ [key]: newValue });\n    },\n    [overrideValue]\n  );\n  const paramRows = Object.entries(values).map(([key, val]) => {\n    let valueElement;\n    if (typeof val === \"boolean\") {\n      valueElement = <Switch key={key} checked={val} variant=\"branded\" onCheckedChange={handleBooleanChange(key)} />;\n    } else if (typeof val === \"number\") {\n      valueElement = <Input value={val.toString()} onChangeText={handleNumberChange(key)} />;\n    } else if (typeof val === \"string\") {\n      valueElement = <Input value={val} onChangeText={handleStringChange(key)} />;\n    }\n    return valueElement && <Flex key={key} row alignItems=\"center\" gap=\"$spacing16\" justifyContent=\"space-between\"><Text variant=\"body1\">{key}</Text>{valueElement}</Flex>;\n  });\n  return <Flex><Text variant=\"body1\">{target}</Text><Flex><Flex gap=\"$spacing8\" pl=\"$spacing8\">{paramRows}</Flex></Flex></Flex>;\n}\n","\"use strict\";\nimport { useQuickRouteChains } from \"featureFlags/dynamicConfig/quickRouteChains\";\nimport styledDep from \"lib/styled-components\";\nimport { useExternallyConnectableExtensionId } from \"pages/ExtensionPasskeyAuthPopUp/useExternallyConnectableExtensionId\";\nimport { useCallback } from \"react\";\nimport { useCloseModal, useModalIsOpen } from \"state/application/hooks\";\nimport { Button, Flex, ModalCloseIcon, Text, styled } from \"ui/src\";\nimport { LayerRow } from \"uniswap/src/components/gating/Rows\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { SUPPORTED_CHAIN_IDS } from \"uniswap/src/features/chains/types\";\nimport {\n  DynamicConfigs,\n  ExternallyConnectableExtensionConfigKey,\n  NetworkRequestsConfigKey,\n  QuickRouteChainsConfigKey\n} from \"uniswap/src/features/gating/configs\";\nimport { Layers } from \"uniswap/src/features/gating/experiments\";\nimport { FeatureFlags, getFeatureFlagName } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlagWithExposureLoggingDisabled } from \"uniswap/src/features/gating/hooks\";\nimport { getOverrideAdapter } from \"uniswap/src/features/gating/sdk/statsig\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { TRUSTED_CHROME_EXTENSION_IDS } from \"utilities/src/environment/extensionId\";\nconst CenteredRow = styled(Flex, {\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  py: \"$gap8\",\n  maxWidth: \"100%\",\n  gap: \"$gap4\"\n});\nconst FlagInfo = styled(Flex, {\n  pl: \"$padding8\",\n  flexShrink: 1\n});\nfunction FeatureFlagGroup({ name, children }) {\n  return <><CenteredRow key={name}><Text variant=\"body1\">{name}</Text></CenteredRow>{children}</>;\n}\nconst FlagVariantSelection = styledDep.select`\n  border-radius: 12px;\n  padding: 8px;\n  background: ${({ theme }) => theme.surface3};\n  font-weight: 535;\n  font-size: 16px;\n  border: none;\n  color: ${({ theme }) => theme.neutral1};\n  cursor: pointer;\n  :hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`;\nfunction Variant({ option }) {\n  return <option value={option}>{option}</option>;\n}\nfunction FeatureFlagOption({ flag, label }) {\n  const enabled = useFeatureFlagWithExposureLoggingDisabled(flag);\n  const name = getFeatureFlagName(flag);\n  const onFlagVariantChange = useCallback(\n    (e) => {\n      getOverrideAdapter().overrideGate(name, e.target.value === \"Enabled\" ? true : false);\n    },\n    [name]\n  );\n  return <CenteredRow key={flag}><FlagInfo><Text variant=\"body2\">{name}</Text><Text variant=\"body4\" color=\"$neutral2\">{label}</Text></FlagInfo><FlagVariantSelection id={name} onChange={onFlagVariantChange} value={enabled ? \"Enabled\" : \"Disabled\"}>{[\"Enabled\", \"Disabled\"].map((variant) => <Variant key={variant} option={variant} />)}</FlagVariantSelection></CenteredRow>;\n}\nfunction DynamicConfigDropdown({\n  config,\n  configKey,\n  label,\n  options,\n  selected,\n  parser,\n  allowMultiple = true\n}) {\n  const handleSelectChange = useCallback(\n    (e) => {\n      const selectedValues = Array.from(e.target.selectedOptions, (opt) => parser(opt.value));\n      getOverrideAdapter().overrideDynamicConfig(config, {\n        [configKey]: allowMultiple ? selectedValues : selectedValues[0]\n      });\n    },\n    [allowMultiple, config, configKey, parser]\n  );\n  return <CenteredRow key={config}><FlagInfo><Text variant=\"body2\">{config}</Text><Text variant=\"body4\" color=\"$neutral2\">{label}</Text></FlagInfo><select multiple={allowMultiple} onChange={handleSelectChange}>{Array.isArray(options) ? options.map((opt) => <option key={opt} value={opt} selected={selected.includes(opt)}>{opt}</option>) : Object.entries(options).map(([key, value]) => <option key={key} value={value} selected={selected.includes(value)}>{key}</option>)}</select></CenteredRow>;\n}\nexport default function FeatureFlagModal() {\n  const open = useModalIsOpen(ModalName.FeatureFlags);\n  const closeModal = useCloseModal();\n  const removeAllOverrides = () => {\n    getOverrideAdapter().removeAllOverrides();\n  };\n  return <Modal name={ModalName.FeatureFlags} isModalOpen={open} onClose={closeModal} padding={0}><Flex py=\"$gap20\" px=\"$gap16\" gap=\"$gap8\"><CenteredRow borderBottomColor=\"$surface3\" borderBottomWidth={1}><Flex row grow alignItems=\"center\" justifyContent=\"space-between\"><Text variant=\"subheading2\">Feature Flag Settings</Text><Button onPress={removeAllOverrides} variant=\"branded\" size=\"small\" fill={false}>\r\n              Clear Overrides\r\n            </Button></Flex><ModalCloseIcon onClose={closeModal} /></CenteredRow><Flex maxHeight=\"600px\" pb=\"$gap8\" overflow=\"scroll\" $md={{ maxHeight: \"unset\" }}><FeatureFlagOption flag={FeatureFlags.LpIncentives} label=\"Enable LP Incentives\" /><FeatureFlagOption flag={FeatureFlags.UniswapX} label=\"[Universal Swap Flow Only] Enable UniswapX\" /><FeatureFlagOption\n    flag={FeatureFlags.IndicativeSwapQuotes}\n    label=\"[Universal Swap Flow Only] Enable Quick Routes\"\n  /><FeatureFlagOption flag={FeatureFlags.InstantTokenBalanceUpdate} label=\"Instant token balance update\" /><FeatureFlagOption\n    flag={FeatureFlags.UniswapXPriorityOrdersBase}\n    label=\"UniswapX Priority Orders (on Base)\"\n  /><FeatureFlagOption\n    flag={FeatureFlags.UniswapXPriorityOrdersUnichain}\n    label=\"UniswapX Priority Orders (on Unichain)\"\n  /><FeatureFlagOption\n    flag={FeatureFlags.Eip6936Enabled}\n    label=\"Enable EIP-6963: Multi Injected Provider Discovery\"\n  /><FeatureFlagOption flag={FeatureFlags.LimitsFees} label=\"Enable Limits fees\" /><FeatureFlagOption flag={FeatureFlags.MigrateV3ToV4} label=\"Enable migrate flow from v3 -> v4\" /><FeatureFlagOption flag={FeatureFlags.PositionPageV2} label=\"Enable Position Page V2\" /><FeatureFlagOption flag={FeatureFlags.MultipleRoutingOptions} label=\"Enable Multiple Routing Options\" /><FeatureFlagOption flag={FeatureFlags.NavigationHotkeys} label=\"Navigation hotkeys\" /><FeatureFlagOption flag={FeatureFlags.ArbitrumDutchV3} label=\"Enable Dutch V3 on Arbitrum\" /><FeatureFlagOption\n    flag={FeatureFlags.TokenSelectorTrendingTokens}\n    label=\"Enable 24h volume trending tokens in Token Selector\"\n  /><FeatureFlagGroup name=\"Swap Refactor\"><FeatureFlagOption\n    flag={FeatureFlags.ServiceBasedSwapTransactionInfo}\n    label=\"Enable service-based swap transaction info\"\n  /></FeatureFlagGroup><FeatureFlagGroup name=\"Embedded Wallet\"><FeatureFlagOption flag={FeatureFlags.EmbeddedWallet} label=\"Add internal embedded wallet functionality\" /><DynamicConfigDropdown\n    selected={[useExternallyConnectableExtensionId()]}\n    options={TRUSTED_CHROME_EXTENSION_IDS}\n    parser={(id) => id}\n    config={DynamicConfigs.ExternallyConnectableExtension}\n    configKey={ExternallyConnectableExtensionConfigKey.ExtensionId}\n    label=\"Which Extension the web app will communicate with\"\n    allowMultiple={false}\n  /></FeatureFlagGroup><FeatureFlagGroup name=\"Search\"><FeatureFlagOption flag={FeatureFlags.SearchRevamp} label=\"Enable search revamp\" /></FeatureFlagGroup><FeatureFlagGroup name=\"New Chains\"><FeatureFlagOption flag={FeatureFlags.MonadTestnet} label=\"Enable Monad Testnet\" /><FeatureFlagOption flag={FeatureFlags.Soneium} label=\"Enable Soneium\" /><FeatureFlagOption flag={FeatureFlags.MonadTestnetDown} label=\"Enable Monad Testnet Down Banner\" /></FeatureFlagGroup><FeatureFlagOption flag={FeatureFlags.L2NFTs} label=\"L2 NFTs\" /><FeatureFlagGroup name=\"Quick routes\"><FeatureFlagOption flag={FeatureFlags.QuickRouteMainnet} label=\"Enable quick routes for Mainnet\" /><DynamicConfigDropdown\n    selected={[useQuickRouteChains()]}\n    options={SUPPORTED_CHAIN_IDS}\n    parser={Number.parseInt}\n    config={DynamicConfigs.QuickRouteChains}\n    configKey={QuickRouteChainsConfigKey.Chains}\n    label=\"Enable quick routes for these chains\"\n    allowMultiple={false}\n  /></FeatureFlagGroup><FeatureFlagGroup name=\"Network Requests\"><DynamicConfigDropdown\n    selected={[30]}\n    options={[1, 10, 20, 30]}\n    parser={Number.parseInt}\n    config={DynamicConfigs.NetworkRequests}\n    configKey={NetworkRequestsConfigKey.BalanceMaxRefetchAttempts}\n    label=\"Max refetch attempts\"\n  /></FeatureFlagGroup><FeatureFlagGroup name=\"UniswapX Flags\"><FeatureFlagOption flag={FeatureFlags.UniswapXSyntheticQuote} label=\"Force synthetic quotes for UniswapX\" /><FeatureFlagOption flag={FeatureFlags.UniswapXv2} label=\"UniswapX v2\" /></FeatureFlagGroup><FeatureFlagGroup name=\"Debug\"><FeatureFlagOption flag={FeatureFlags.TraceJsonRpc} label=\"Enables JSON-RPC tracing\" /><FeatureFlagOption flag={FeatureFlags.AATestWeb} label=\"A/A Test for Web\" /></FeatureFlagGroup><FeatureFlagGroup name=\"Experiments\"><Flex ml=\"$padding8\">{\n    /* add `ExperimentRow`s here */\n  }</Flex></FeatureFlagGroup><FeatureFlagGroup name=\"Layers\"><Flex ml=\"$padding8\"><LayerRow value={Layers.SwapPage} /></Flex></FeatureFlagGroup></Flex><Button\n    onPress={() => window.location.reload()}\n    variant=\"default\"\n    emphasis=\"secondary\"\n    size=\"small\"\n    fill={false}\n  >\r\n          Reload\r\n        </Button></Flex></Modal>;\n}\n","\"use strict\";\nexport const PRIVACY_SHARING_OPT_OUT_STORAGE_KEY = \"optOutPrivacySharing\";\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Lock, AnimatedLock] = createIcon({\n  name: \"Lock\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}><Path\n    d=\"M16.75 9.05811V7C16.75 4.38 14.62 2.25 12 2.25C9.38 2.25 7.25 4.38 7.25 7V9.05811C5.752 9.29111 5 10.269 5 12V18C5 20 6 21 8 21H16C18 21 19 20 19 18V12C19 10.269 18.248 9.29111 16.75 9.05811ZM12.75 14.9871V17C12.75 17.414 12.414 17.75 12 17.75C11.586 17.75 11.25 17.414 11.25 17V14.9619C10.962 14.7329 10.7649 14.395 10.7649 14C10.7649 13.31 11.32 12.75 12.01 12.75H12.02C12.71 12.75 13.27 13.31 13.27 14C13.27 14.412 13.057 14.7601 12.75 14.9871ZM15.25 9H8.75V7C8.75 5.21 10.21 3.75 12 3.75C13.79 3.75 15.25 5.21 15.25 7V9Z\"\n    fill=\"currentColor\"\n  /></Svg>\n});\n","\"use strict\";\nimport { InterfaceElementName } from \"@uniswap/analytics-events\";\nimport { PRIVACY_SHARING_OPT_OUT_STORAGE_KEY } from \"components/PrivacyChoices/constants\";\nimport { useAtom } from \"jotai\";\nimport { atomWithStorage } from \"jotai/utils\";\nimport { useCallback, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useCloseModal, useModalIsOpen } from \"state/application/hooks\";\nimport { Anchor, Button, Checkbox, Flex, ModalCloseIcon, Text } from \"ui/src\";\nimport { Lock } from \"ui/src/components/icons/Lock\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport function PrivacyChoicesModal() {\n  const open = useModalIsOpen(ModalName.PrivacyChoices);\n  const closeModal = useCloseModal(ModalName.PrivacyChoices);\n  const { t } = useTranslation();\n  const privacySharingOptOutAtom = atomWithStorage(PRIVACY_SHARING_OPT_OUT_STORAGE_KEY, false);\n  const [privacySharingOptOut, setPrivacySharingOptOut] = useAtom(privacySharingOptOutAtom);\n  const [isOptOutChecked, setIsOptOutChecked] = useState(privacySharingOptOut);\n  const closeAndResetModal = useCallback(() => {\n    setIsOptOutChecked(privacySharingOptOut);\n    closeModal();\n  }, [privacySharingOptOut, closeModal, setIsOptOutChecked]);\n  const handleSave = useCallback(() => {\n    setPrivacySharingOptOut(isOptOutChecked);\n    closeModal();\n  }, [isOptOutChecked, closeModal, setPrivacySharingOptOut]);\n  return <Modal name={ModalName.PrivacyChoices} isModalOpen={open} onClose={closeAndResetModal}><Flex fill><Flex py=\"$spacing20\" px=\"$spacing24\" gap=\"$spacing24\"><Flex row justifyContent=\"flex-end\"><Trace logPress element={InterfaceElementName.CLOSE_BUTTON}><ModalCloseIcon onClose={closeAndResetModal} /></Trace></Flex><Flex alignItems=\"center\" gap=\"$gap16\"><Flex backgroundColor=\"$surface3\" p=\"$spacing12\" borderRadius=\"$rounded12\"><Lock color=\"$neutral1\" size=\"$icon.24\" /></Flex><Text variant=\"subheading1\">{t(\"common.privacyChoices\")}</Text><Text variant=\"body3\" color=\"$neutral2\" textAlign=\"center\"><Trans\n    i18nKey=\"common.privacyChoices.description\"\n    components={{\n      privacyLink: <Anchor\n        href={uniswapUrls.privacyPolicyUrl}\n        target=\"_blank\"\n        textDecorationLine=\"none\"\n        fontSize=\"inherit\"\n      />\n    }}\n  /></Text><Flex\n    p=\"$padding16\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"$border.width1\"\n    borderColor=\"$surface3\"\n    borderStyle=\"solid\"\n    gap=\"$gap8\"\n  ><Flex row alignItems=\"center\" gap=\"$gap12\"><Checkbox checked={isOptOutChecked} onCheckedChange={(checked) => setIsOptOutChecked(!!checked)} /><Text variant=\"buttonLabel2\" color=\"$neutral1\">{t(\"common.privacyChoices.checkbox.label\")}</Text></Flex><Text variant=\"body4\" color=\"$neutral2\">{t(\"common.privacyChoices.checkbox.description\")}</Text></Flex></Flex><Text variant=\"body4\" color=\"$neutral2\" fontSize={10}>{t(\"common.privacyChoices.disclaimer\")}</Text><Flex row><Button emphasis=\"secondary\" onPress={handleSave}>{t(\"common.button.save\")}</Button></Flex></Flex></Flex></Modal>;\n}\n","\"use strict\";\nimport { SharedEventName } from \"@uniswap/analytics-events\";\nimport Card, { DarkGrayCard } from \"components/Card/cards\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport Row, { AutoRow, RowBetween } from \"components/deprecated/Row\";\nimport styled from \"lib/styled-components\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { ArrowDown, Info } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCloseModal, useModalIsOpen } from \"state/application/hooks\";\nimport { ThemedText } from \"theme/components\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { ModalCloseIcon } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nconst Wrapper = styled.div`\n  max-height: 70vh;\n  overflow: auto;\n  padding: 0 1rem;\n`;\nconst StyledExternalCard = styled(Card)`\n  background-color: ${({ theme }) => theme.accent2};\n  padding: 0.5rem;\n  width: 100%;\n\n  :hover,\n  :focus,\n  :active {\n    background-color: ${({ theme }) => theme.neutral3};\n  }\n`;\nconst StyledLinkOut = styled(ArrowDown)`\n  transform: rotate(230deg);\n`;\nexport function PrivacyPolicyModal() {\n  const node = useRef();\n  const open = useModalIsOpen(ModalName.PrivacyPolicy);\n  const closeModal = useCloseModal(ModalName.PrivacyPolicy);\n  const { t } = useTranslation();\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    sendAnalyticsEvent(SharedEventName.PAGE_VIEWED, {\n      modal: ModalName.Legal\n    });\n  }, [open]);\n  return <Modal name={ModalName.Legal} isModalOpen={open} onClose={() => closeModal()} padding={0}><AutoColumn gap=\"md\" ref={node}><RowBetween padding=\"1rem 1rem 0.5rem 1rem\"><ThemedText.DeprecatedMediumHeader>{t(\"common.legalAndPrivacy\")}</ThemedText.DeprecatedMediumHeader><ModalCloseIcon onClose={closeModal} /></RowBetween><PrivacyPolicy /></AutoColumn></Modal>;\n}\nfunction PrivacyPolicy() {\n  const { t } = useTranslation();\n  const EXTERNAL_APIS = useMemo(\n    () => [\n      {\n        name: \"Auto Router\",\n        description: t(\"privacy.autoRouter\")\n      },\n      {\n        name: \"Infura\",\n        description: t(\"privacy.infura\")\n      },\n      {\n        name: \"TRM Labs\",\n        description: <>{\n          /* {t('privacy.trm')}{' '}\n          <ExternalLink href=\"https://support.uniswap.org/hc/en-us/articles/8671777747597-Address-Screening-Guide\">\n            {t('common.button.learn')}\n          </ExternalLink> */\n        }</>\n      },\n      {\n        name: \"Google Analytics & Amplitude\",\n        description: t(\"privacy.anonymizedLogs\")\n      }\n    ],\n    [t]\n  );\n  return <Wrapper\n    draggable=\"true\"\n    onTouchMove={(e) => {\n      if (isMobileWeb) {\n        e.stopPropagation();\n      }\n    }}\n  ><AutoColumn gap=\"16px\"><AutoColumn gap=\"sm\" style={{ width: \"100%\" }}><StyledExternalCard><ExternalLink href=\"https://uniswap.org/terms-of-service\"><RowBetween><AutoRow gap=\"4px\"><Info size={20} /><ThemedText.DeprecatedMain fontSize={14} color=\"accent1\">{t(\"privacy.uniswaptos\")}</ThemedText.DeprecatedMain></AutoRow><StyledLinkOut size={20} /></RowBetween></ExternalLink></StyledExternalCard><StyledExternalCard><ExternalLink href=\"https://uniswap.org/privacy-policy/\"><RowBetween><AutoRow gap=\"4px\"><Info size={20} /><ThemedText.DeprecatedMain fontSize={14} color=\"accent1\">{t(\"common.privacyPolicy\")}</ThemedText.DeprecatedMain></AutoRow><StyledLinkOut size={20} /></RowBetween></ExternalLink></StyledExternalCard></AutoColumn><ThemedText.DeprecatedMain fontSize={14}>{t(\"privacy.thirdPartyApis\")}</ThemedText.DeprecatedMain><AutoColumn gap=\"md\">{EXTERNAL_APIS.map(({ name, description }, i) => <DarkGrayCard key={i}><AutoColumn gap=\"sm\"><AutoRow gap=\"4px\"><Info size={18} /><ThemedText.DeprecatedMain fontSize={14} color=\"neutral1\">{name}</ThemedText.DeprecatedMain></AutoRow><ThemedText.DeprecatedMain fontSize={14}>{description}</ThemedText.DeprecatedMain></AutoColumn></DarkGrayCard>)}<ThemedText.DeprecatedBody fontSize={12}><Row justify=\"center\" marginBottom=\"1rem\"><ExternalLink href=\"https://support.sunminyXXXhelpUrl/en/articles/5675203-terms-of-service-faq\">{t(\"common.button.learn\")}</ExternalLink></Row></ThemedText.DeprecatedBody></AutoColumn></AutoColumn></Wrapper>;\n}\n","\"use strict\";\nimport { useMemo } from \"react\";\nimport { FiatOnRampTransactionStatus, FiatOnRampTransactionType } from \"state/fiatOnRampTransactions/types\";\nimport { ExternalLink } from \"ui/src/components/icons/ExternalLink\";\nimport { UNISWAP_WEB_URL } from \"uniswap/src/constants/urls\";\nimport { FORQuoteItem } from \"uniswap/src/features/fiatOnRamp/FORQuoteItem\";\nimport { v4 as uuid } from \"uuid\";\nimport { useAddFiatOnRampTransaction } from \"state/fiatOnRampTransactions/hooks\";\nimport { useFiatOnRampAggregatorTransferWidgetQuery } from \"uniswap/src/features/fiatOnRamp/api\";\nexport function ProviderOption({\n  walletAddress,\n  serviceProvider,\n  setConnectedProvider,\n  setErrorProvider\n}) {\n  const addFiatOnRampTransaction = useAddFiatOnRampTransaction();\n  const externalTransactionId = useMemo(() => uuid(), []);\n  const widgetQueryParams = useMemo(() => {\n    return {\n      serviceProvider: serviceProvider.serviceProvider,\n      walletAddress,\n      externalSessionId: externalTransactionId,\n      redirectUrl: `${UNISWAP_WEB_URL}/buy`\n    };\n  }, [walletAddress, serviceProvider, externalTransactionId]);\n  const { data, error, isLoading } = useFiatOnRampAggregatorTransferWidgetQuery(widgetQueryParams);\n  return <FORQuoteItem\n    key={serviceProvider.name}\n    serviceProvider={serviceProvider}\n    hoverIcon={<ExternalLink position=\"absolute\" right=\"$spacing12\" size={20} />}\n    isLoading={isLoading}\n    onPress={async () => {\n      if (data) {\n        window.open(data.widgetUrl, \"_blank\");\n        setConnectedProvider(serviceProvider);\n        addFiatOnRampTransaction({\n          externalSessionId: externalTransactionId,\n          account: walletAddress,\n          status: FiatOnRampTransactionStatus.INITIATED,\n          forceFetched: false,\n          addedAt: Date.now(),\n          type: FiatOnRampTransactionType.TRANSFER,\n          syncedWithBackend: false,\n          provider: serviceProvider.serviceProvider\n        });\n      } else if (error) {\n        setErrorProvider(serviceProvider);\n      }\n    }}\n  />;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [CopySheets, AnimatedCopySheets] = createIcon({\n  name: \"CopySheets\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}><Path\n    d=\"M18.375 6.25H9.625C7.448 6.25 6.25 7.448 6.25 9.625V18.375C6.25 20.552 7.448 21.75 9.625 21.75H18.375C20.552 21.75 21.75 20.552 21.75 18.375V9.625C21.75 7.448 20.552 6.25 18.375 6.25ZM20.25 18.375C20.25 19.707 19.707 20.25 18.375 20.25H9.625C8.293 20.25 7.75 19.707 7.75 18.375V9.625C7.75 8.293 8.293 7.75 9.625 7.75H18.375C19.707 7.75 20.25 8.293 20.25 9.625V18.375ZM3.75 5.62V14.38C3.75 15.578 4.23309 15.873 4.39209 15.971C4.74609 16.187 4.85589 16.649 4.63989 17.002C4.49789 17.233 4.25202 17.36 3.99902 17.36C3.86602 17.36 3.72991 17.324 3.60791 17.25C2.70691 16.698 2.25 15.733 2.25 14.38V5.62C2.25 3.478 3.47912 2.25 5.62012 2.25H14.3799C16.0649 2.25 16.87 2.98897 17.25 3.60797C17.466 3.96097 17.355 4.42298 17.002 4.63898C16.648 4.85598 16.1879 4.74399 15.9709 4.39099C15.8739 4.23199 15.5779 3.74902 14.3799 3.74902H5.62012C4.29212 3.75002 3.75 4.292 3.75 5.62Z\"\n    fill=\"currentColor\"\n  /></Svg>\n});\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [QrCode, AnimatedQrCode] = createIcon({\n  name: \"QrCode\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}><Path\n    d=\"M9 2H3C2.44772 2 2 2.44772 2 3V9C2 9.55228 2.44772 10 3 10H9C9.55228 10 10 9.55228 10 9V3C10 2.44772 9.55228 2 9 2Z\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /><Path\n    d=\"M9 13.9999H3C2.44772 13.9999 2 14.4476 2 14.9999V20.9999C2 21.5522 2.44772 21.9999 3 21.9999H9C9.55228 21.9999 10 21.5522 10 20.9999V14.9999C10 14.4476 9.55228 13.9999 9 13.9999Z\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /><Path\n    d=\"M21 2H15C14.4477 2 14 2.44772 14 3V9C14 9.55228 14.4477 10 15 10H21C21.5523 10 22 9.55228 22 9V3C22 2.44772 21.5523 2 21 2Z\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /><Path\n    d=\"M14 13.9999V17.9999\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /><Path\n    d=\"M14 21.9999H18V13.9999\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /><Path d=\"M18 16H22\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" /><Path\n    d=\"M22 20.0001V22.0001\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /></Svg>\n});\n","\"use strict\";\nimport { Status } from \"components/AccountDrawer/Status\";\nimport { GetHelpHeader } from \"components/Modal/GetHelpHeader\";\nimport { ProviderOption } from \"components/ReceiveCryptoModal/ProviderOption\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useTranslation } from \"react-i18next\";\nimport { useOpenModal, useToggleModal } from \"state/application/hooks\";\nimport { CopyToClipboard } from \"theme/components/CopyHelper\";\nimport { Flex, HeightAnimator, IconButton, Separator, Text, TouchableArea } from \"ui/src\";\nimport { CopySheets } from \"ui/src/components/icons/CopySheets\";\nimport { QrCode } from \"ui/src/components/icons/QrCode\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { useENSName } from \"uniswap/src/features/ens/api\";\nimport { useCexTransferProviders } from \"uniswap/src/features/fiatOnRamp/useCexTransferProviders\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useUnitagByAddress } from \"uniswap/src/features/unitags/hooks\";\nfunction ActionIcon({ Icon }) {\n  return <IconButton emphasis=\"secondary\" size=\"xxsmall\" icon={<Icon />} />;\n}\nfunction AccountCardItem({ onClose }) {\n  const account = useAccount();\n  const { unitag } = useUnitagByAddress(account.address);\n  const { data: ENSName } = useENSName(account.address);\n  const openAddressQRModal = useOpenModal({ name: ModalName.ReceiveCryptoQr });\n  const onPressShowWalletQr = () => {\n    onClose();\n    openAddressQRModal();\n  };\n  return <Flex row alignItems=\"flex-start\" gap=\"$spacing12\"><Flex\n    fill\n    row\n    borderColor=\"$surface3\"\n    borderRadius=\"$rounded20\"\n    borderWidth=\"$spacing1\"\n    gap=\"$spacing12\"\n    p=\"$spacing12\"\n  ><Flex fill><Status\n    account={account.address}\n    ensUsername={ENSName}\n    uniswapUsername={unitag?.username}\n    showAddressCopy={false}\n  /></Flex><Flex centered row gap=\"$spacing12\" px=\"$spacing8\"><CopyToClipboard toCopy={account.address}><ActionIcon Icon={CopySheets} /></CopyToClipboard><TouchableArea onPress={onPressShowWalletQr}><ActionIcon Icon={QrCode} /></TouchableArea></Flex></Flex></Flex>;\n}\nexport function ChooseProvider({ setConnectedProvider, setErrorProvider }) {\n  const { t } = useTranslation();\n  const account = useAccount();\n  const toggleModal = useToggleModal(ModalName.ReceiveCryptoModal);\n  const providers = useCexTransferProviders();\n  return <Flex grow gap=\"$spacing24\" mb=\"$spacing16\"><GetHelpHeader link={uniswapUrls.helpArticleUrls.transferCryptoHelp} closeModal={toggleModal} /><Flex gap=\"$spacing4\" p=\"$spacing8\"><Text color=\"$neutral1\" mt=\"$spacing2\" textAlign=\"center\" variant=\"subheading1\">{t(\"fiatOnRamp.receiveCrypto.title\")}</Text><Text color=\"$neutral2\" mt=\"$spacing2\" textAlign=\"center\" variant=\"body3\">{t(\"fiatOnRamp.receiveCrypto.transferFunds\")}</Text></Flex><Flex gap=\"$spacing12\"><AccountCardItem onClose={toggleModal} />{providers.length > 0 && <HeightAnimator animation=\"fastHeavy\"><Flex gap=\"$spacing12\"><Flex centered row shrink gap=\"$spacing12\"><Separator /><Text color=\"$neutral2\" textAlign=\"center\" variant=\"body3\">{t(\"fiatOnRamp.receiveCrypto.modal.sectionTitle.fromAccount\")}</Text><Separator /></Flex>{account.address && <Flex grow gap=\"$spacing12\">{providers.map((serviceProvider) => <ProviderOption\n    key={serviceProvider.name}\n    serviceProvider={serviceProvider}\n    walletAddress={account.address}\n    setConnectedProvider={setConnectedProvider}\n    setErrorProvider={setErrorProvider}\n  />)}</Flex>}</Flex></HeightAnimator>}</Flex></Flex>;\n}\n","import { useMemo } from \"react\";\nimport { useFiatOnRampAggregatorTransferServiceProvidersQuery } from \"uniswap/src/features/fiatOnRamp/api\";\nexport function useCexTransferProviders(params) {\n  const { data } = useFiatOnRampAggregatorTransferServiceProvidersQuery(void 0, {\n    skip: params?.isDisabled\n  });\n  return useMemo(() => {\n    if (!data) {\n      return [];\n    }\n    return data.serviceProviders;\n  }, [data]);\n}\n","\"use strict\";\nimport { ChooseProvider } from \"components/ReceiveCryptoModal/ChooseProvider\";\nimport { useAccount } from \"hooks/useAccount\";\nimport ms from \"ms\";\nimport { ProviderConnectedView } from \"pages/Swap/Buy/ProviderConnectedView\";\nimport { ProviderConnectionError } from \"pages/Swap/Buy/ProviderConnectionError\";\nimport { ContentWrapper } from \"pages/Swap/Buy/shared\";\nimport { useCallback, useState } from \"react\";\nimport { useModalIsOpen, useToggleModal } from \"state/application/hooks\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { logger } from \"utilities/src/logger/logger\";\nexport function ReceiveCryptoModal() {\n  const account = useAccount();\n  const toggleModal = useToggleModal(ModalName.ReceiveCryptoModal);\n  const isOpen = useModalIsOpen(ModalName.ReceiveCryptoModal);\n  const [errorProvider, setErrorProvider] = useState();\n  const [connectedProvider, setConnectedProvider] = useState();\n  const onClose = useCallback(() => {\n    toggleModal();\n    setTimeout(() => {\n      setErrorProvider(void 0);\n      setConnectedProvider(void 0);\n    }, ms(\"500ms\"));\n  }, [toggleModal, setErrorProvider, setConnectedProvider]);\n  if (!account.address) {\n    logger.debug(\"ReceiveCryptoModal\", \"ReceiveCryptoModal\", \"Modal opened with invalid state. Closing modal.\");\n    onClose();\n    return null;\n  }\n  return <Modal name={ModalName.ReceiveCryptoModal} isModalOpen={isOpen} onClose={onClose} maxWidth={420}><ContentWrapper>{errorProvider ? <ProviderConnectionError\n    onBack={() => setErrorProvider(void 0)}\n    closeModal={onClose}\n    selectedServiceProvider={errorProvider}\n  /> : connectedProvider ? <ProviderConnectedView closeModal={onClose} selectedServiceProvider={connectedProvider} /> : <ChooseProvider setErrorProvider={setErrorProvider} setConnectedProvider={setConnectedProvider} />}</ContentWrapper></Modal>;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [EyeSlash, AnimatedEyeSlash] = createIcon({\n  name: \"EyeSlash\",\n  getIcon: (props) => <Svg viewBox=\"0 0 20 20\" fill=\"none\" {...props}><Path\n    d=\"M16.5448 8.87234C16.9638 9.56568 16.9638 10.4342 16.5448 11.1276C15.6076 12.6895 13.5123 15.3333 9.99994 15.3333C9.43003 15.3333 8.89368 15.2609 8.3954 15.1352C8.22549 15.0925 8.17206 14.8747 8.29625 14.7512L9.74082 13.3067C9.8292 13.2183 9.93898 13.238 9.99994 13.238C11.7858 13.238 13.238 11.7851 13.238 9.99995C13.238 9.93899 13.2289 9.81858 13.2922 9.75534L15.3813 7.66624C15.478 7.56948 15.641 7.57946 15.7256 7.68689C16.0608 8.11051 16.3337 8.51653 16.5448 8.87234ZM17.2609 3.54664L3.54663 17.2609C3.43539 17.3722 3.28908 17.4285 3.14279 17.4285C2.99651 17.4285 2.8502 17.3729 2.73896 17.2609C2.51572 17.0377 2.51572 16.6758 2.73896 16.4525L5.56188 13.6296C4.59426 12.806 3.89244 11.856 3.45511 11.1268C3.03606 10.4335 3.03606 9.56493 3.45511 8.8716C4.39225 7.30969 6.48756 4.66587 9.99994 4.66587C11.3896 4.66587 12.5501 5.08256 13.5146 5.67684L16.4532 2.73823C16.6765 2.51499 17.0384 2.51499 17.2617 2.73823C17.4849 2.96147 17.4841 3.3234 17.2609 3.54664ZM7.34852 11.843L8.17813 11.0133C8.00899 10.7124 7.9047 10.3702 7.9047 9.99995C7.9047 9.73328 7.95799 9.48186 8.04941 9.24567C8.19418 9.36757 8.377 9.44377 8.58271 9.44377C9.05509 9.44377 9.44376 9.0551 9.44376 8.58272C9.44376 8.37701 9.36756 8.19419 9.24566 8.04943C9.48185 7.958 9.73327 7.90471 9.99994 7.90471C10.3702 7.90471 10.7131 8.009 11.0133 8.17815L11.8429 7.34853C11.3188 6.9813 10.6849 6.76185 9.99994 6.76185C8.21708 6.76185 6.76184 8.21709 6.76184 9.99995C6.76184 10.6857 6.98128 11.3188 7.34852 11.843Z\"\n    fill=\"currentColor\"\n  /></Svg>\n});\n","import { Buffer } from \"buffer\";\nimport { exportEncryptedSeedPhrase } from \"uniswap/src/features/passkey/embeddedWallet\";\nexport async function exportSeedPhrase() {\n  const keyPair = await window.crypto.subtle.generateKey(\n    {\n      name: \"RSA-OAEP\",\n      modulusLength: 2048,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      // 65537\n      hash: \"SHA-256\"\n    },\n    true,\n    // extractable\n    [\"encrypt\", \"decrypt\"]\n  );\n  const publicKeySpki = await window.crypto.subtle.exportKey(\"spki\", keyPair.publicKey);\n  const publicKeyBase64 = Buffer.from(publicKeySpki).toString(\"base64\");\n  const encryptedSeedPhrase = await exportEncryptedSeedPhrase(publicKeyBase64);\n  if (!encryptedSeedPhrase) {\n    return void 0;\n  }\n  const decryptedSeedPhrase = await window.crypto.subtle.decrypt(\n    {\n      name: \"RSA-OAEP\"\n    },\n    keyPair.privateKey,\n    Buffer.from(encryptedSeedPhrase, \"base64\")\n  );\n  return new TextDecoder().decode(decryptedSeedPhrase);\n}\n","\"use strict\";\nimport { ModalContent } from \"components/NavBar/DownloadApp/Modal/Content\";\nimport ms from \"ms\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { X } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCloseModal, useModalIsOpen } from \"state/application/hooks\";\nimport { CopyHelper } from \"theme/components/CopyHelper\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Loader, Text, styled } from \"ui/src\";\nimport { EyeSlash } from \"ui/src/components/icons/EyeSlash\";\nimport { LockedDocument } from \"ui/src/components/icons/LockedDocument\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { exportSeedPhrase } from \"uniswap/src/features/passkey/utils\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useOnClickOutside } from \"utilities/src/react/hooks\";\nconst StyledX = styled(X, {\n  color: \"$neutral2\",\n  zIndex: 1,\n  ...ClickableTamaguiStyle\n});\nfunction Seed({ seed, position, revealed }) {\n  return seed ? revealed ? <Flex flexDirection=\"row\" gap=\"$gap8\"><Text variant=\"body2\" lineHeight=\"24px\" color=\"$neutral2\" width=\"$gap16\">{position}</Text><Text variant=\"body2\" lineHeight=\"24px\">{seed}</Text></Flex> : <Flex\n    flexShrink={0}\n    width=\"100%\"\n    height=\"16px\"\n    mb=\"$padding8\"\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$rounded16\"\n  /> : <Loader.Box flexShrink={0} width=\"100%\" height=\"18px\" mb=\"$padding8\" />;\n}\nexport function RecoveryPhraseModal() {\n  const { t } = useTranslation();\n  const isOpen = useModalIsOpen(ModalName.RecoveryPhrase);\n  const closeModal = useCloseModal();\n  const [seedPhrase, setSeedPhrase] = useState(void 0);\n  const [isRevealed, setIsRevealed] = useState(false);\n  const handleClose = () => {\n    closeModal();\n    setIsRevealed(false);\n    setSeedPhrase(void 0);\n  };\n  const seedPhraseContentRef = useRef(null);\n  useOnClickOutside(seedPhraseContentRef, () => setIsRevealed(false));\n  const fetchSeedPhrase = async () => {\n    const retrievedSeedPhrase = await exportSeedPhrase();\n    setSeedPhrase(retrievedSeedPhrase?.split(\" \"));\n  };\n  const handleReveal = () => {\n    setIsRevealed(true);\n    setTimeout(() => {\n      setIsRevealed(false);\n    }, ms(\"1m\"));\n  };\n  useEffect(() => {\n    if (isOpen) {\n      fetchSeedPhrase();\n    }\n  }, [isOpen]);\n  return <Modal\n    position=\"relative\"\n    name={ModalName.RecoveryPhrase}\n    isModalOpen={isOpen}\n    onClose={handleClose}\n    maxWidth={464}\n  ><Flex position=\"absolute\" top=\"32px\" right=\"32px\"><StyledX onClick={handleClose} /></Flex><ModalContent\n    title={t(\"setting.recoveryPhrase.title\")}\n    subtext={t(\"setting.recoveryPhrase.view.warning.message1\")}\n    header={<Flex p=\"$spacing12\" background=\"$surface3\" borderRadius=\"$rounded12\"><LockedDocument size=\"$icon.24\" /></Flex>}\n    maxWidth={void 0}\n  ><Flex\n    p=\"$spacing32\"\n    gap=\"$spacing36\"\n    flexDirection=\"row\"\n    borderRadius=\"$rounded20\"\n    borderWidth=\"1px\"\n    borderStyle=\"solid\"\n    borderColor=\"$surface2\"\n    width=\"100%\"\n    position=\"relative\"\n    backgroundColor=\"$surface2\"\n    ref={seedPhraseContentRef}\n  >{Array.from({ length: 3 }).map((_, i) => <Flex flexShrink={0} key={`recovery-phrase-cover-col-${i}`} gap=\"$gap16\" width=\"88px\">{Array.from({ length: 4 }).map((_2, j) => {\n    const index = i * 4 + j + 1;\n    return <Seed\n      key={`recovery-phrase-item-${index}`}\n      seed={seedPhrase?.[index - 1]}\n      position={index}\n      revealed={isRevealed}\n    />;\n  })}</Flex>)}{!!seedPhrase && !isRevealed && <Flex\n    position=\"absolute\"\n    py=\"$padding8\"\n    px=\"10px\"\n    gap=\"$gap4\"\n    flexDirection=\"row\"\n    alignItems=\"center\"\n    backgroundColor=\"$surface1\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"1px\"\n    borderStyle=\"solid\"\n    borderColor=\"$surface2\"\n    top=\"50%\"\n    left=\"50%\"\n    hoverStyle={{ opacity: 0.6 }}\n    cursor=\"pointer\"\n    userSelect=\"none\"\n    transform=\"translate(-50%, -50%)\"\n    onPress={handleReveal}\n  ><EyeSlash minHeight={20} minWidth={20} color=\"$accent1\" /><Text variant=\"buttonLabel3\" color=\"$accent1\">{t(\"common.button.reveal\")}</Text></Flex>}{isRevealed && !!seedPhrase && <Flex\n    py=\"$padding8\"\n    px=\"10px\"\n    gap=\"$gap4\"\n    opacity={0.8}\n    borderRadius=\"$rounded20\"\n    background=\"$surface1\"\n    borderWidth=\"1px\"\n    borderStyle=\"solid\"\n    borderColor=\"$surface3\"\n    position=\"absolute\"\n    left=\"50%\"\n    top=\"0\"\n    transform=\"translate(-50%, -50%)\"\n    zIndex={1}\n    hoverStyle={{ opacity: 0.6 }}\n    cursor=\"pointer\"\n    userSelect=\"none\"\n    onPress={() => {\n      setTimeout(() => {\n        setIsRevealed(false);\n      }, 500);\n    }}\n  ><CopyHelper iconSize={20} iconPosition=\"left\" toCopy={seedPhrase?.join(\" \")}>{t(\"common.button.copy\")}</CopyHelper></Flex>}</Flex></ModalContent></Modal>;\n}\n","\"use strict\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCloseModal, useModalIsOpen } from \"state/application/hooks\";\nimport { Button, Flex, ModalCloseIcon, Spacer, Text } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport function UkDisclaimerModal() {\n  const { t } = useTranslation();\n  const isOpen = useModalIsOpen(ModalName.UkDisclaimer);\n  const closeModal = useCloseModal();\n  return <Modal name={ModalName.UkDisclaimer} isModalOpen={isOpen} onClose={closeModal} padding={0}><Flex p=\"$padding8\" gap=\"$gap12\"><Flex alignItems=\"flex-end\" pt=\"$spacing8\" pb=\"$spacing4\"><ModalCloseIcon onClose={closeModal} /></Flex><Flex px=\"$padding8\"><Flex gap=\"$gap16\"><Text variant=\"heading2\">{t(\"search.ukDisclaimer\")}</Text><Text variant=\"body2\">{t(\"notice.uk\")}</Text></Flex><Spacer size=\"$spacing24\" /><Flex row><Button size=\"small\" onPress={closeModal}>{t(\"common.dismiss\")}</Button></Flex><Spacer size=\"$spacing12\" /></Flex></Flex></Modal>;\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBlueLoader(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 94,\n    height: 94,\n    viewBox: \"0 0 94 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92 47C92 22.1472 71.8528 2 47 2C22.1472 2 2 22.1472 2 47C2 71.8528 22.1472 92 47 92\",\n    stroke: \"#2172E5\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlueLoader);\nexport default __webpack_public_path__ + \"static/media/blue-loader.ca1aedeb13ab14d6ef4eb375580604ad.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { RowBetween } from \"components/deprecated/Row\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { flexColumnNoWrap } from \"theme/styles\";\nimport { Text } from \"ui/src\";\nimport { useENS } from \"uniswap/src/features/ens/useENS\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nconst InputPanel = styled.div`\n  ${flexColumnNoWrap};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.surface1};\n  z-index: 1;\n  width: 100%;\n`;\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => error ? theme.critical : theme.surface3};\n  transition:\n    border-color 300ms ${({ error }) => error ? \"step-end\" : \"step-start\"},\n    color 500ms ${({ error }) => error ? \"step-end\" : \"step-start\"};\n  background-color: ${({ theme }) => theme.surface1};\n`;\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`;\nconst Input = styled.input`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.surface1};\n  transition: color 300ms ${({ error }) => error ? \"step-end\" : \"step-start\"};\n  color: ${({ error, theme }) => error ? theme.critical : theme.neutral1};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 535;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.neutral3};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.neutral3};\n  }\n`;\nexport default function AddressInputPanel({\n  id,\n  className = \"recipient-address-input\",\n  label,\n  placeholder,\n  value,\n  onChange\n}) {\n  const { t } = useTranslation();\n  const { chainId } = useAccount();\n  const theme = useTheme();\n  const { address, loading, name } = useENS({ nameOrAddress: value });\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value;\n      const withoutSpaces = input.replace(/\\s+/g, \"\");\n      onChange(withoutSpaces);\n    },\n    [onChange]\n  );\n  const error = Boolean(value.length > 0 && !loading && !address);\n  return <InputPanel id={id}><ContainerRow error={error}><InputContainer><AutoColumn gap=\"md\"><RowBetween><Text variant=\"body1\" color={theme.neutral2}>{label ?? <Trans i18nKey=\"addressInput.recipient\" />}</Text>{address && chainId && <ExternalLink\n    href={getExplorerLink(chainId, name ?? address, ExplorerDataType.ADDRESS)}\n    style={{ fontSize: \"14px\" }}\n  >\r\n                  (<Trans i18nKey=\"common.viewOnExplorer\" />)\r\n                </ExternalLink>}</RowBetween><Input\n    className={className}\n    type=\"text\"\n    autoComplete=\"off\"\n    autoCorrect=\"off\"\n    autoCapitalize=\"off\"\n    spellCheck=\"false\"\n    placeholder={placeholder ?? t(\"common.addressOrENS\")}\n    error={error}\n    pattern=\"^(0x[a-fA-F0-9]{40})$\"\n    onChange={handleInput}\n    value={value}\n  /></AutoColumn></InputContainer></ContainerRow></InputPanel>;\n}\n","\"use strict\";\nimport styled, { keyframes } from \"styled-components\";\nconst rotateImg = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`;\nexport const UniTokenAnimated = styled.img`\n  animation: ${rotateImg} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  padding: 2rem 0 0 0;\n  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\n`;\n","\"use strict\";\nimport { isAddress } from \"@ethersproject/address\";\nimport Circle from \"assets/images/blue-loader.svg\";\nimport tokenLogo from \"assets/images/token-logo.png\";\nimport AddressInputPanel from \"components/AddressInputPanel\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { Break, CardBGImage, CardBGImageSmaller, CardNoise, CardSection } from \"components/earn/styled\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useState } from \"react\";\nimport { useClaimCallback, useUserHasAvailableClaim, useUserUnclaimedAmount } from \"state/claim/hooks\";\nimport { useIsTransactionPending } from \"state/transactions/hooks\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { CustomLightSpinner } from \"theme/components/icons/spinner\";\nimport { UniTokenAnimated } from \"theme/components/icons/uniTokenAnimated\";\nimport { Button, Flex, Text, View } from \"ui/src\";\nimport { CloseIconWithHover } from \"ui/src/components/icons/CloseIconWithHover\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { useENS } from \"uniswap/src/features/ens/useENS\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { logger } from \"utilities/src/logger/logger\";\nexport default function AddressClaimModal({\n  isOpen,\n  connectedAddress,\n  onDismiss\n}) {\n  const { chainId } = useAccount();\n  const [typed, setTyped] = useState(connectedAddress ?? \"\");\n  function handleRecipientType(val) {\n    setTyped(val);\n  }\n  const { address: parsedAddress } = useENS({ nameOrAddress: typed });\n  const [attempting, setAttempting] = useState(false);\n  const { claimCallback } = useClaimCallback(parsedAddress);\n  const unclaimedAmount = useUserUnclaimedAmount(parsedAddress);\n  const hasAvailableClaim = useUserHasAvailableClaim(parsedAddress);\n  const [hash, setHash] = useState();\n  const claimPending = useIsTransactionPending(hash ?? \"\");\n  const claimConfirmed = hash && !claimPending;\n  function onClaim() {\n    setAttempting(true);\n    claimCallback().then((hash2) => {\n      setHash(hash2);\n    }).catch((error) => {\n      setAttempting(false);\n      logger.warn(\"AddressClaimModal\", \"onClaim\", \"error\", error);\n    });\n  }\n  function wrappedOnDismiss() {\n    setAttempting(false);\n    setHash(void 0);\n    setTyped(\"\");\n    onDismiss();\n  }\n  const amount = unclaimedAmount?.toFixed(0, { groupSeparator: \",\" });\n  const unclaimedUni = unclaimedAmount?.toFixed(0, { groupSeparator: \",\" });\n  return <Modal name={ModalName.AddressClaim} isModalOpen={isOpen} onClose={wrappedOnDismiss} padding={0}>{!attempting && <Flex gap=\"$gap12\" width=\"100%\"><Flex\n    width=\"100%\"\n    position=\"relative\"\n    overflow=\"hidden\"\n    $platform-web={{ background: \"radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%)\" }}\n    borderRadius=\"$rounded12\"\n    boxShadow=\"0px 4px 10px rgba(0, 0, 0, 0.1)\"\n  ><CardBGImage /><CardNoise /><CardSection gap=\"md\"><Flex row justifyContent=\"space-between\" alignItems=\"center\"><Text color=\"$white\" fontWeight=\"$medium\">\r\n                  Claim UNI token\r\n                </Text><CloseIconWithHover onClose={wrappedOnDismiss} /></Flex><Text color=\"$white\" fontWeight=\"$medium\" fontSize={36}>{amount} UNI\r\n              </Text></CardSection><Break /></Flex><AutoColumn gap=\"md\" style={{ padding: \"1rem\", paddingTop: \"0\" }} justify=\"center\"><Text variant=\"subheading1\" color=\"$white\">\r\n              Enter an address to trigger a UNI claim. If the address has any claimable UNI it will be sent to them on\r\n              submission.\r\n            </Text><AddressInputPanel value={typed} onChange={handleRecipientType} />{parsedAddress && !hasAvailableClaim && <Text color=\"$statusCritical\">Address has no available claim</Text>}<Flex row><Button\n    variant=\"branded\"\n    size=\"large\"\n    isDisabled={!isAddress(parsedAddress ?? \"\") || !hasAvailableClaim}\n    borderRadius=\"$rounded12\"\n    mt=\"$spacing16\"\n    onPress={onClaim}\n  >\r\n                Claim UNI\r\n              </Button></Flex></AutoColumn></Flex>}{(attempting || claimConfirmed) && <View\n    width=\"100%\"\n    p=\"$padding24\"\n    position=\"relative\"\n    alignItems=\"center\"\n    $platform-web={{\n      background: \"radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;\"\n    }}\n  ><CardNoise /><CardBGImageSmaller desaturate /><Flex row alignItems=\"center\" width=\"100%\" pl=\"$padding16\" pt=\"$padding16\"><CloseIconWithHover onClose={wrappedOnDismiss} /></Flex><Flex justifyContent=\"center\" alignItems=\"center\" py={60}>{!claimConfirmed ? <CustomLightSpinner src={Circle} alt=\"loader\" size=\"90px\" /> : <UniTokenAnimated width=\"72px\" src={tokenLogo} alt=\"UNI logo\" />}</Flex><Flex gap={100} justifyContent=\"center\"><Flex gap=\"$gap8\" justifyContent=\"center\" alignItems=\"center\"><Text variant=\"heading1\" color=\"$black\">{claimConfirmed ? \"Claimed\" : \"Claiming\"}</Text>{!claimConfirmed && <Text fontSize={36} color=\"#ff007a\" fontWeight=\"$medium\">{unclaimedUni} UNI\r\n                </Text>}{parsedAddress && <Text variant=\"subheading1\" color=\"$black\">\r\n                  for {shortenAddress(parsedAddress)}</Text>}</Flex>{claimConfirmed && <><Text variant=\"subheading1\" color=\"$black\"><span role=\"img\" aria-label=\"party-hat\">\r\n                    🎉{\" \"}</span>{\"Welcome to team Unicorn :) \"}<span role=\"img\" aria-label=\"party-hat\">\r\n                    🎉\r\n                  </span></Text></>}{attempting && !hash && <Text variant=\"subheading1\" color=\"$black\" mb=\"$spacing16\">\r\n                Confirm this transaction in your wallet\r\n              </Text>}{attempting && hash && !claimConfirmed && chainId && hash && <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)} style={{ zIndex: 99 }}>\r\n                View transaction on Explorer\r\n              </ExternalLink>}</Flex></View>}</Modal>;\n}\n","\"use strict\";\nimport { useDerivedIncreaseLiquidityInfo } from \"components/IncreaseLiquidity/hooks\";\nimport { useModalLiquidityInitialState } from \"components/Liquidity/hooks\";\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nexport var IncreaseLiquidityStep = /* @__PURE__ */ ((IncreaseLiquidityStep2) => {\n  IncreaseLiquidityStep2[IncreaseLiquidityStep2[\"Input\"] = 0] = \"Input\";\n  IncreaseLiquidityStep2[IncreaseLiquidityStep2[\"Review\"] = 1] = \"Review\";\n  return IncreaseLiquidityStep2;\n})(IncreaseLiquidityStep || {});\nconst DEFAULT_INCREASE_LIQUIDITY_STATE = {\n  step: 0 /* Input */,\n  exactField: PositionField.TOKEN0\n};\nconst IncreaseLiquidityContext = createContext({\n  step: 0 /* Input */,\n  setStep: () => void 0,\n  increaseLiquidityState: DEFAULT_INCREASE_LIQUIDITY_STATE,\n  derivedIncreaseLiquidityInfo: {},\n  setIncreaseLiquidityState: () => void 0,\n  unwrapNativeCurrency: true,\n  setUnwrapNativeCurrency: () => void 0,\n  currentTransactionStep: void 0,\n  setCurrentTransactionStep: () => void 0\n});\nexport function useIncreaseLiquidityContext() {\n  return useContext(IncreaseLiquidityContext);\n}\nexport function IncreaseLiquidityContextProvider({ children }) {\n  const positionInfo = useModalLiquidityInitialState();\n  const [step, setStep] = useState(0 /* Input */);\n  const [unwrapNativeCurrency, setUnwrapNativeCurrency] = useState(true);\n  const [increaseLiquidityState, setIncreaseLiquidityState] = useState({\n    ...DEFAULT_INCREASE_LIQUIDITY_STATE,\n    position: positionInfo\n  });\n  const [currentTransactionStep, setCurrentTransactionStep] = useState();\n  const derivedIncreaseLiquidityInfo = useDerivedIncreaseLiquidityInfo(increaseLiquidityState, unwrapNativeCurrency);\n  const value = useMemo(\n    () => ({\n      step,\n      setStep,\n      increaseLiquidityState,\n      setIncreaseLiquidityState,\n      derivedIncreaseLiquidityInfo,\n      unwrapNativeCurrency,\n      setUnwrapNativeCurrency,\n      currentTransactionStep,\n      setCurrentTransactionStep\n    }),\n    [increaseLiquidityState, derivedIncreaseLiquidityInfo, step, unwrapNativeCurrency, currentTransactionStep]\n  );\n  return <IncreaseLiquidityContext.Provider value={value}>{children}</IncreaseLiquidityContext.Provider>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useDepositInfo } from \"pages/Pool/Positions/create/hooks\";\nimport { getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo } from \"react\";\nexport function useDerivedIncreaseLiquidityInfo(state, unwrapNativeCurrency) {\n  const account = useAccount();\n  const { position: positionInfo, exactAmount, exactField } = state;\n  if (!positionInfo) {\n    throw new Error(\"no position available\");\n  }\n  const currency0 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo.currency0Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && positionInfo.version !== ProtocolVersion.V4\n  });\n  const currency1 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo.currency1Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && positionInfo.version !== ProtocolVersion.V4\n  });\n  const depositInfoProps = useMemo(() => {\n    if (positionInfo.version === ProtocolVersion.V2) {\n      return {\n        protocolVersion: ProtocolVersion.V2,\n        pair: positionInfo.pair,\n        address: account.address,\n        token0: currency0,\n        token1: currency1,\n        exactField,\n        exactAmounts: {\n          [exactField]: exactAmount\n        },\n        deposit0Disabled: false,\n        deposit1Disabled: false\n      };\n    }\n    const { tickLower: tickLowerStr, tickUpper: tickUpperStr } = positionInfo;\n    const tickLower = tickLowerStr ? parseInt(tickLowerStr) : void 0;\n    const tickUpper = tickUpperStr ? parseInt(tickUpperStr) : void 0;\n    const deposit0Disabled = Boolean(tickUpper && positionInfo.pool && positionInfo.pool.tickCurrent >= tickUpper);\n    const deposit1Disabled = Boolean(tickLower && positionInfo.pool && positionInfo.pool.tickCurrent <= tickLower);\n    if (positionInfo.version === ProtocolVersion.V3) {\n      return {\n        protocolVersion: ProtocolVersion.V3,\n        pool: positionInfo.pool,\n        address: account.address,\n        tickLower,\n        tickUpper,\n        token0: currency0,\n        token1: currency1,\n        exactField,\n        exactAmounts: {\n          [exactField]: exactAmount\n        },\n        deposit0Disabled,\n        deposit1Disabled\n      };\n    }\n    if (positionInfo.version === ProtocolVersion.V4) {\n      return {\n        protocolVersion: ProtocolVersion.V4,\n        pool: positionInfo.pool,\n        address: account.address,\n        tickLower,\n        tickUpper,\n        token0: currency0,\n        token1: currency1,\n        exactField,\n        exactAmounts: {\n          [exactField]: exactAmount\n        },\n        deposit0Disabled,\n        deposit1Disabled\n      };\n    }\n    return {\n      protocolVersion: ProtocolVersion.UNSPECIFIED,\n      exactField,\n      exactAmounts: {}\n    };\n  }, [account.address, exactAmount, exactField, positionInfo, currency0, currency1]);\n  const depositInfo = useDepositInfo(depositInfoProps);\n  return useMemo(\n    () => ({\n      ...depositInfo,\n      deposit0Disabled: depositInfoProps.deposit0Disabled,\n      deposit1Disabled: depositInfoProps.deposit1Disabled\n    }),\n    [depositInfo, depositInfoProps.deposit0Disabled, depositInfoProps.deposit1Disabled]\n  );\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useIncreaseLiquidityContext } from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { useModalLiquidityInitialState } from \"components/Liquidity/hooks\";\nimport { useIncreasePositionDependentAmountFallback } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport { getProtocolItems, hasLPFoTTransferError } from \"components/Liquidity/utils\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { getCurrencyAddressForTradingApi } from \"pages/Pool/Positions/create/utils\";\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { useCheckLpApprovalQuery } from \"uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery\";\nimport { useIncreaseLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery\";\nimport {\n  IndependentToken\n} from \"uniswap/src/data/tradingApi/__generated__\";\nimport { toSupportedChainId } from \"uniswap/src/features/chains/utils\";\nimport { useTransactionGasFee, useUSDCurrencyAmountOfGasFee } from \"uniswap/src/features/gas/hooks\";\nimport { InterfaceEventNameLocal } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport {\n  LiquidityTransactionType\n} from \"uniswap/src/features/transactions/liquidity/types\";\nimport { getErrorMessageToDisplay, parseErrorMessageTitle } from \"uniswap/src/features/transactions/liquidity/utils\";\nimport { useTransactionSettingsContext } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionStepType } from \"uniswap/src/features/transactions/swap/types/steps\";\nimport { validatePermit, validateTransactionRequest } from \"uniswap/src/features/transactions/swap/utils/trade\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nimport { useAccount } from \"wagmi\";\nconst IncreaseLiquidityTxContext = createContext(void 0);\nexport function IncreaseLiquidityTxContextProvider({ children }) {\n  const positionInfo = useModalLiquidityInitialState();\n  const { derivedIncreaseLiquidityInfo, increaseLiquidityState, currentTransactionStep } = useIncreaseLiquidityContext();\n  const { customDeadline, customSlippageTolerance } = useTransactionSettingsContext();\n  const [hasIncreaseErrorResponse, setHasIncreaseErrorResponse] = useState(false);\n  const { currencyAmounts, error } = derivedIncreaseLiquidityInfo;\n  const { exactField } = increaseLiquidityState;\n  const account = useAccount();\n  const increaseLiquidityApprovalParams = useMemo(() => {\n    if (!positionInfo || !account.address || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    return {\n      simulateTransaction: true,\n      walletAddress: account.address,\n      chainId: positionInfo.currency0Amount.currency.chainId,\n      protocol: getProtocolItems(positionInfo.version),\n      token0: getCurrencyAddressForTradingApi(positionInfo.currency0Amount.currency),\n      token1: getCurrencyAddressForTradingApi(positionInfo.currency1Amount.currency),\n      amount0: currencyAmounts?.TOKEN0?.quotient.toString(),\n      amount1: currencyAmounts?.TOKEN1?.quotient.toString()\n    };\n  }, [positionInfo, account.address, currencyAmounts]);\n  const {\n    data: increaseLiquidityTokenApprovals,\n    isLoading: approvalLoading,\n    error: approvalError,\n    refetch: approvalRefetch\n  } = useCheckLpApprovalQuery({\n    params: increaseLiquidityApprovalParams,\n    staleTime: 5 * ONE_SECOND_MS,\n    enabled: !!increaseLiquidityApprovalParams && !error\n  });\n  if (approvalError) {\n    const message = parseErrorMessageTitle(approvalError, { defaultTitle: \"unknown CheckLpApprovalQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"IncreaseLiquidityTxContext\",\n        function: \"useEffect\"\n      }\n    });\n  }\n  const {\n    token0Approval,\n    token1Approval,\n    positionTokenApproval,\n    permitData,\n    gasFeeToken0Approval,\n    gasFeeToken1Approval,\n    gasFeePositionTokenApproval,\n    token0Cancel,\n    token1Cancel\n  } = increaseLiquidityTokenApprovals || {};\n  const gasFeeToken0USD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.currency0Amount.currency.chainId,\n    gasFeeToken0Approval\n  );\n  const gasFeeToken1USD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.currency1Amount.currency.chainId,\n    gasFeeToken1Approval\n  );\n  const gasFeeLiquidityTokenUSD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.liquidityToken?.chainId,\n    gasFeePositionTokenApproval\n  );\n  const approvalsNeeded = !approvalLoading && Boolean(permitData || token0Approval || token1Approval || positionTokenApproval);\n  const increaseCalldataQueryParams = useMemo(() => {\n    const apiProtocolItems = getProtocolItems(positionInfo?.version);\n    if (!positionInfo || !account.address || !apiProtocolItems || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    const token0 = currencyAmounts.TOKEN0.currency;\n    const token1 = currencyAmounts.TOKEN1.currency;\n    const amount0 = currencyAmounts.TOKEN0.quotient.toString();\n    const amount1 = currencyAmounts.TOKEN1.quotient.toString();\n    const [independentAmount, dependentAmount2] = exactField === PositionField.TOKEN0 ? [amount0, amount1] : [amount1, amount0];\n    const independentToken = exactField === PositionField.TOKEN0 ? IndependentToken.TOKEN_0 : IndependentToken.TOKEN_1;\n    return {\n      simulateTransaction: !approvalsNeeded,\n      protocol: apiProtocolItems,\n      tokenId: positionInfo.tokenId ? Number(positionInfo.tokenId) : void 0,\n      walletAddress: account.address,\n      chainId: positionInfo.currency0Amount.currency.chainId,\n      independentAmount,\n      independentToken,\n      defaultDependentAmount: positionInfo.version === ProtocolVersion.V2 ? dependentAmount2 : void 0,\n      position: {\n        tickLower: positionInfo.tickLower ? Number(positionInfo.tickLower) : void 0,\n        tickUpper: positionInfo.tickUpper ? Number(positionInfo.tickUpper) : void 0,\n        pool: {\n          token0: token0.isNative ? ZERO_ADDRESS : token0.address,\n          token1: token1.isNative ? ZERO_ADDRESS : token1.address,\n          fee: positionInfo.feeTier ? Number(positionInfo.feeTier) : void 0,\n          tickSpacing: positionInfo.tickSpacing ? Number(positionInfo.tickSpacing) : void 0,\n          hooks: positionInfo.v4hook\n        }\n      },\n      slippageTolerance: customSlippageTolerance\n    };\n  }, [account, positionInfo, currencyAmounts, approvalsNeeded, customSlippageTolerance, exactField]);\n  const currency0Info = useCurrencyInfo(currencyId(positionInfo?.currency0Amount.currency));\n  const currency1Info = useCurrencyInfo(currencyId(positionInfo?.currency1Amount.currency));\n  const token0FoTError = hasLPFoTTransferError(currency0Info, positionInfo?.version);\n  const token1FoTError = hasLPFoTTransferError(currency1Info, positionInfo?.version);\n  const fotErrorToken = token0FoTError || token1FoTError;\n  const isUserCommittedToIncrease = currentTransactionStep?.step.type === TransactionStepType.IncreasePositionTransaction || currentTransactionStep?.step.type === TransactionStepType.IncreasePositionTransactionAsync;\n  const isQueryEnabled = !isUserCommittedToIncrease && !error && !approvalLoading && !approvalError && Boolean(increaseCalldataQueryParams) && !fotErrorToken;\n  const {\n    data: increaseCalldata,\n    isLoading: isCalldataLoading,\n    error: calldataError,\n    refetch: calldataRefetch\n  } = useIncreaseLpPositionCalldataQuery({\n    params: increaseCalldataQueryParams,\n    deadlineInMinutes: customDeadline,\n    refetchInterval: hasIncreaseErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled\n  });\n  useEffect(() => {\n    setHasIncreaseErrorResponse(!!calldataError);\n  }, [calldataError, increaseCalldataQueryParams]);\n  const { increase, gasFee: actualGasFee, dependentAmount } = increaseCalldata || {};\n  if (calldataError) {\n    const message = parseErrorMessageTitle(calldataError, { defaultTitle: \"unknown IncreaseLpPositionCalldataQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"IncreaseLiquidityTxContext\",\n        function: \"useEffect\"\n      }\n    });\n    sendAnalyticsEvent(InterfaceEventNameLocal.IncreaseLiquidityFailed, {\n      message\n    });\n  }\n  const fallbackDependentAmount = useIncreasePositionDependentAmountFallback(\n    increaseCalldataQueryParams,\n    isQueryEnabled && Boolean(calldataError)\n  );\n  const { value: calculatedGasFee } = useTransactionGasFee(increase, !!actualGasFee);\n  const increaseGasFeeUsd = useUSDCurrencyAmountOfGasFee(\n    toSupportedChainId(increaseCalldata?.increase?.chainId) ?? void 0,\n    actualGasFee || calculatedGasFee\n  );\n  const increaseLiquidityTxContext = useMemo(() => {\n    if (!positionInfo || approvalLoading || isCalldataLoading || !increaseCalldata || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    const approveToken0Request = validateTransactionRequest(token0Approval);\n    const approveToken1Request = validateTransactionRequest(token1Approval);\n    const approvePositionTokenRequest = validateTransactionRequest(positionTokenApproval);\n    const revokeToken0Request = validateTransactionRequest(token0Cancel);\n    const revokeToken1Request = validateTransactionRequest(token1Cancel);\n    const permit = validatePermit(permitData);\n    const unsigned = Boolean(permitData);\n    const txRequest = validateTransactionRequest(increase);\n    return {\n      type: LiquidityTransactionType.Increase,\n      protocolVersion: positionInfo?.version,\n      action: {\n        type: LiquidityTransactionType.Increase,\n        currency0Amount: currencyAmounts?.TOKEN0,\n        currency1Amount: currencyAmounts?.TOKEN1,\n        liquidityToken: positionInfo.liquidityToken\n      },\n      approveToken0Request,\n      approveToken1Request,\n      approvePositionTokenRequest,\n      revokeToken0Request,\n      revokeToken1Request,\n      permit,\n      increasePositionRequestArgs: { ...increaseCalldataQueryParams, batchPermitData: permitData ?? void 0 },\n      txRequest,\n      unsigned\n    };\n  }, [\n    approvalLoading,\n    isCalldataLoading,\n    increaseCalldata,\n    permitData,\n    positionInfo,\n    positionTokenApproval,\n    token0Approval,\n    token1Approval,\n    token0Cancel,\n    token1Cancel,\n    increaseCalldataQueryParams,\n    increase,\n    currencyAmounts\n  ]);\n  const totalGasFee = useMemo(() => {\n    const fees = [gasFeeToken0USD, gasFeeToken1USD, gasFeeLiquidityTokenUSD, increaseGasFeeUsd];\n    return fees.reduce((total, fee) => {\n      if (fee && total) {\n        return total.add(fee);\n      }\n      return total || fee;\n    });\n  }, [gasFeeToken0USD, gasFeeToken1USD, gasFeeLiquidityTokenUSD, increaseGasFeeUsd]);\n  const value = {\n    txInfo: increaseLiquidityTxContext,\n    gasFeeEstimateUSD: totalGasFee ?? void 0,\n    // in some cases there is an error with create but createCalldata still has a cached value\n    dependentAmount: calldataError && dependentAmount ? dependentAmount : fallbackDependentAmount,\n    error: getErrorMessageToDisplay({ approvalError, calldataError }),\n    refetch: approvalError ? approvalRefetch : calldataError ? calldataRefetch : void 0,\n    fotErrorToken\n  };\n  return <IncreaseLiquidityTxContext.Provider value={value}>{children}</IncreaseLiquidityTxContext.Provider>;\n}\nexport const useIncreaseLiquidityTxContext = () => {\n  const increaseContext = useContext(IncreaseLiquidityTxContext);\n  if (!increaseContext) {\n    throw new Error(\"`useIncreaseLiquidityTxContext` must be used inside of `IncreaseLiquidityTxContextProvider`\");\n  }\n  return increaseContext;\n};\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useIncreaseLiquidityContext } from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { useIncreaseLiquidityTxContext } from \"components/IncreaseLiquidity/IncreaseLiquidityTxContext\";\nimport { TokenInfo } from \"components/Liquidity/TokenInfo\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport { useGetPoolTokenPercentage, usePositionCurrentPrice } from \"components/Liquidity/hooks\";\nimport { useUpdatedAmountsFromDependentAmount } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport { DetailLineItem } from \"components/swap/DetailLineItem\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { liquiditySaga } from \"state/sagas/liquidity/liquiditySaga\";\nimport { Button, Flex, Separator, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { ProgressIndicator } from \"uniswap/src/components/ConfirmSwapModal/ProgressIndicator\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { useAccountMeta } from \"uniswap/src/contexts/UniswapContext\";\nimport { AccountType } from \"uniswap/src/features/accounts/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { isValidLiquidityTxContext } from \"uniswap/src/features/transactions/liquidity/types\";\nimport { getSymbolDisplayText } from \"uniswap/src/utils/currency\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nexport function IncreaseLiquidityReview({ onClose }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const selectChain = useSelectChain();\n  const startChainId = useAccount().chainId;\n  const account = useAccountMeta();\n  const trace = useTrace();\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const { derivedIncreaseLiquidityInfo, increaseLiquidityState, currentTransactionStep, setCurrentTransactionStep } = useIncreaseLiquidityContext();\n  const { txInfo, gasFeeEstimateUSD, dependentAmount } = useIncreaseLiquidityTxContext();\n  const { exactField } = increaseLiquidityState;\n  const { currencyAmounts, currencyAmountsUSDValue, deposit0Disabled, deposit1Disabled } = derivedIncreaseLiquidityInfo;\n  const { updatedCurrencyAmounts, updatedUSDAmounts } = useUpdatedAmountsFromDependentAmount({\n    token0: currencyAmounts?.TOKEN0?.currency,\n    token1: currencyAmounts?.TOKEN1?.currency,\n    dependentAmount,\n    exactField,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    deposit0Disabled: deposit0Disabled || false,\n    deposit1Disabled: deposit1Disabled || false\n  });\n  const [steps, setSteps] = useState([]);\n  if (!increaseLiquidityState.position) {\n    throw new Error(\"a position must be defined\");\n  }\n  const { version, poolId, currency0Amount, currency1Amount, feeTier, chainId } = increaseLiquidityState.position;\n  const currentPrice = usePositionCurrentPrice(increaseLiquidityState.position);\n  const poolTokenPercentage = useGetPoolTokenPercentage(increaseLiquidityState.position);\n  const newToken0Amount = useMemo(() => {\n    if (!updatedCurrencyAmounts?.TOKEN0) {\n      return void 0;\n    }\n    const additionalToken0Amount = CurrencyAmount.fromRawAmount(\n      updatedCurrencyAmounts?.TOKEN0?.currency,\n      currency0Amount.quotient\n    );\n    return updatedCurrencyAmounts?.TOKEN0?.add(additionalToken0Amount);\n  }, [currency0Amount, updatedCurrencyAmounts?.TOKEN0]);\n  const newToken0AmountUSD = useUSDCValue(newToken0Amount);\n  const newToken1Amount = useMemo(() => {\n    if (!updatedCurrencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    const additionalToken1Amount = CurrencyAmount.fromRawAmount(\n      updatedCurrencyAmounts?.TOKEN1?.currency,\n      currency1Amount.quotient\n    );\n    return updatedCurrencyAmounts?.TOKEN1?.add(additionalToken1Amount);\n  }, [currency1Amount, updatedCurrencyAmounts?.TOKEN1]);\n  const newToken1AmountUSD = useUSDCValue(newToken1Amount);\n  const onFailure = () => {\n    setCurrentTransactionStep(void 0);\n  };\n  const onSuccess = () => {\n    setSteps([]);\n    setCurrentTransactionStep(void 0);\n    onClose();\n  };\n  const onIncreaseLiquidity = () => {\n    const isValidTx = isValidLiquidityTxContext(txInfo);\n    if (!account || account?.type !== AccountType.SignerMnemonic || !isValidTx || !increaseLiquidityState.position || !currencyAmounts?.TOKEN0 || !currencyAmounts.TOKEN1) {\n      return;\n    }\n    dispatch(\n      liquiditySaga.actions.trigger({\n        selectChain,\n        startChainId,\n        account,\n        liquidityTxContext: txInfo,\n        setCurrentStep: setCurrentTransactionStep,\n        setSteps,\n        onSuccess,\n        onFailure,\n        analytics: {\n          ...getLPBaseAnalyticsProperties({\n            trace,\n            fee: feeTier,\n            version,\n            poolId,\n            currency0: currencyAmounts?.TOKEN0?.currency,\n            currency1: currencyAmounts?.TOKEN1?.currency,\n            currency0AmountUsd: currencyAmountsUSDValue?.TOKEN0,\n            currency1AmountUsd: currencyAmountsUSDValue?.TOKEN1\n          }),\n          expectedAmountBaseRaw: currencyAmounts?.TOKEN0.quotient?.toString() ?? \"-\",\n          expectedAmountQuoteRaw: currencyAmounts?.TOKEN1.quotient?.toString() ?? \"-\",\n          createPosition: false\n        }\n      })\n    );\n  };\n  return <Flex gap=\"$gap12\"><Flex gap=\"$gap16\" px=\"$padding16\" pt=\"$padding12\"><TokenInfo currencyAmount={updatedCurrencyAmounts?.TOKEN0} currencyUSDAmount={updatedUSDAmounts?.TOKEN0} /><Text variant=\"body3\" color=\"$neutral2\">{t(\"common.and\")}</Text><TokenInfo currencyAmount={updatedCurrencyAmounts?.TOKEN1} currencyUSDAmount={updatedUSDAmounts?.TOKEN1} /></Flex>{currentTransactionStep ? <ProgressIndicator currentStep={currentTransactionStep} steps={steps} /> : <><Separator mx=\"$padding16\" /><Flex gap=\"$gap8\" px=\"$padding16\" pb=\"$padding12\"><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">{t(\"common.rate\")}</Text>,\n      Value: () => <Text variant=\"body3\">{`1 ${currentPrice?.baseCurrency.symbol} = ${currentPrice?.toFixed()} ${currentPrice?.quoteCurrency.symbol}`}</Text>\n    }}\n  /><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans\n        i18nKey=\"pool.newSpecificPosition\"\n        values={{ symbol: currencyAmounts?.TOKEN0?.currency.symbol }}\n      /></Text>,\n      Value: () => <Flex row gap=\"$gap4\"><Text variant=\"body3\">{formatCurrencyAmount({ value: newToken0Amount, type: NumberType.TokenNonTx })}{\" \"}{getSymbolDisplayText(newToken0Amount?.currency.symbol)}</Text><Text variant=\"body3\" color=\"$neutral2\">{`(${formatCurrencyAmount({ value: newToken0AmountUSD, type: NumberType.FiatStandard })})`}</Text></Flex>\n    }}\n  /><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans\n        i18nKey=\"pool.newSpecificPosition\"\n        values={{ symbol: currencyAmounts?.TOKEN1?.currency.symbol }}\n      /></Text>,\n      Value: () => <Flex row gap=\"$gap4\"><Text variant=\"body3\">{formatCurrencyAmount({ value: newToken1Amount, type: NumberType.TokenNonTx })}{\" \"}{getSymbolDisplayText(newToken1Amount?.currency.symbol)}</Text><Text variant=\"body3\" color=\"$neutral2\">{`(${formatCurrencyAmount({ value: newToken1AmountUSD, type: NumberType.FiatStandard })})`}</Text></Flex>\n    }}\n  />{poolTokenPercentage ? <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">{t(\"addLiquidity.shareOfPool\")}</Text>,\n      Value: () => <Text>{formatPercent(poolTokenPercentage.toFixed())}</Text>\n    }}\n  /> : null}<DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">{t(\"common.networkCost\")}</Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\"><NetworkLogo chainId={chainId} size={iconSizes.icon16} shape=\"square\" /><Text variant=\"body3\">{formatCurrencyAmount({ value: gasFeeEstimateUSD, type: NumberType.FiatGasPrice })}</Text></Flex>\n    }}\n  /></Flex><Flex row><Button variant=\"branded\" size=\"large\" onPress={onIncreaseLiquidity}>{t(\"common.confirm\")}</Button></Flex></>}</Flex>;\n}\n","\"use strict\";\nimport { DetailLineItem } from \"components/swap/DetailLineItem\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function LiquidityModalDetailRows({\n  currency0Amount,\n  currency1Amount,\n  networkCost\n}) {\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const currency0Info = useCurrencyInfo(currency0Amount?.currency);\n  const currency1Info = useCurrencyInfo(currency1Amount?.currency);\n  return <Flex px=\"$padding16\" gap=\"$gap8\"><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"pool.specificPosition\" values={{ symbol: currency0Amount?.currency.symbol }} /></Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\"><CurrencyLogo currencyInfo={currency0Info} size={iconSizes.icon16} /><Text variant=\"body3\" color=\"$neutral1\">{formatCurrencyAmount({ value: currency0Amount, type: NumberType.TokenNonTx })}{\" \"}{currency0Amount?.currency.symbol}</Text></Flex>\n    }}\n  /><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"pool.specificPosition\" values={{ symbol: currency1Amount?.currency.symbol }} /></Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\"><CurrencyLogo currencyInfo={currency1Info} size={iconSizes.icon16} /><Text variant=\"body3\" color=\"$neutral1\">{formatCurrencyAmount({ value: currency1Amount, type: NumberType.TokenNonTx })}{\" \"}{currency1Amount?.currency.symbol}</Text></Flex>\n    }}\n  />{Boolean(networkCost) && !!currency0Amount && <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.networkCost\" /></Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\"><NetworkLogo chainId={currency0Amount.currency.chainId} size={iconSizes.icon16} shape=\"square\" /><Text variant=\"body3\" color=\"$neutral1\">{formatCurrencyAmount({ value: networkCost, type: NumberType.FiatGasPrice })}</Text></Flex>\n    }}\n  />}</Flex>;\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport {\n  IncreaseLiquidityStep,\n  useIncreaseLiquidityContext\n} from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { useIncreaseLiquidityTxContext } from \"components/IncreaseLiquidity/IncreaseLiquidityTxContext\";\nimport { DepositInputForm } from \"components/Liquidity/DepositInputForm\";\nimport { LiquidityModalDetailRows } from \"components/Liquidity/LiquidityModalDetailRows\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { useUpdatedAmountsFromDependentAmount } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport { canUnwrapCurrency, getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PositionField } from \"types/position\";\nimport { Button, Flex, Switch, Text } from \"ui/src\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nexport function IncreaseLiquidityForm() {\n  const { t } = useTranslation();\n  const {\n    setStep,\n    increaseLiquidityState,\n    derivedIncreaseLiquidityInfo,\n    setIncreaseLiquidityState,\n    unwrapNativeCurrency,\n    setUnwrapNativeCurrency\n  } = useIncreaseLiquidityContext();\n  const {\n    formattedAmounts,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    currencyBalances,\n    deposit0Disabled,\n    deposit1Disabled,\n    error\n  } = derivedIncreaseLiquidityInfo;\n  const { position, exactField } = increaseLiquidityState;\n  const {\n    gasFeeEstimateUSD,\n    txInfo,\n    error: dataFetchingError,\n    refetch,\n    dependentAmount,\n    fotErrorToken\n  } = useIncreaseLiquidityTxContext();\n  if (!position) {\n    throw new Error(\"AddLiquidityModal must have an initial state when opening\");\n  }\n  const { currency0Amount: initialCurrency0Amount, currency1Amount: initialCurrency1Amount } = position;\n  const canUnwrap0 = canUnwrapCurrency(initialCurrency0Amount.currency, position.version);\n  const canUnwrap1 = canUnwrapCurrency(initialCurrency1Amount.currency, position.version);\n  const token0 = getCurrencyWithOptionalUnwrap({\n    currency: initialCurrency0Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && canUnwrap0\n  });\n  const token1 = getCurrencyWithOptionalUnwrap({\n    currency: initialCurrency1Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && canUnwrap1\n  });\n  const nativeCurrency = nativeOnChain(position.chainId);\n  const currency0Amount = useMemo(() => {\n    if (unwrapNativeCurrency && canUnwrap0) {\n      return CurrencyAmount.fromRawAmount(token0, initialCurrency0Amount.quotient);\n    }\n    return initialCurrency0Amount;\n  }, [unwrapNativeCurrency, canUnwrap0, token0, initialCurrency0Amount]);\n  const currency1Amount = useMemo(() => {\n    if (unwrapNativeCurrency && canUnwrap1) {\n      return CurrencyAmount.fromRawAmount(token1, initialCurrency1Amount.quotient);\n    }\n    return initialCurrency1Amount;\n  }, [unwrapNativeCurrency, canUnwrap1, token1, initialCurrency1Amount]);\n  const { updatedFormattedAmounts, updatedUSDAmounts } = useUpdatedAmountsFromDependentAmount({\n    token0,\n    token1,\n    dependentAmount,\n    exactField,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    formattedAmounts,\n    deposit0Disabled: deposit0Disabled || false,\n    deposit1Disabled: deposit1Disabled || false\n  });\n  const handleUserInput = (field, newValue) => {\n    setIncreaseLiquidityState((prev) => ({\n      ...prev,\n      exactField: field,\n      exactAmount: newValue\n    }));\n  };\n  const handleOnSetMax = (field, amount) => {\n    setIncreaseLiquidityState((prev) => ({\n      ...prev,\n      exactField: field,\n      exactAmount: amount\n    }));\n  };\n  const handleOnContinue = () => {\n    if (!error) {\n      setStep(IncreaseLiquidityStep.Review);\n    }\n  };\n  const UnwrapNativeCurrencyToggle = useMemo(() => {\n    return <Flex row justifyContent=\"space-between\" alignItems=\"center\"><Text variant=\"body3\" color=\"$neutral2\">{t(\"pool.addAs\", { nativeWrappedSymbol: nativeCurrency.symbol })}</Text><Switch\n      id=\"add-as-weth\"\n      checked={unwrapNativeCurrency}\n      onCheckedChange={() => setUnwrapNativeCurrency((unwrapNativeCurrency2) => !unwrapNativeCurrency2)}\n      variant=\"branded\"\n    /></Flex>;\n  }, [nativeCurrency, t, unwrapNativeCurrency, setUnwrapNativeCurrency]);\n  const requestLoading = Boolean(\n    !dataFetchingError && !error && currencyAmounts?.TOKEN0 && currencyAmounts.TOKEN1 && !txInfo?.txRequest && !fotErrorToken\n  );\n  return <Flex gap=\"$gap24\"><Flex gap=\"$gap24\"><LiquidityPositionInfo positionInfo={position} /><DepositInputForm\n    token0={token0}\n    token1={token1}\n    formattedAmounts={updatedFormattedAmounts}\n    currencyAmounts={currencyAmounts}\n    currencyAmountsUSDValue={updatedUSDAmounts}\n    currencyBalances={currencyBalances}\n    onUserInput={handleUserInput}\n    onSetMax={handleOnSetMax}\n    deposit0Disabled={deposit0Disabled}\n    deposit1Disabled={deposit1Disabled}\n    amount0Loading={requestLoading && exactField === PositionField.TOKEN1}\n    amount1Loading={requestLoading && exactField === PositionField.TOKEN0}\n    token0UnderCardComponent={canUnwrap0 ? UnwrapNativeCurrencyToggle : void 0}\n    token1UnderCardComponent={canUnwrap1 ? UnwrapNativeCurrencyToggle : void 0}\n  /></Flex><LiquidityModalDetailRows\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    networkCost={gasFeeEstimateUSD}\n  />{fotErrorToken && <ErrorCallout\n    errorMessage={true}\n    title={t(\"token.safety.warning.fotLow.title\")}\n    description={t(\"position.increase.fot\", { token: fotErrorToken.currency.symbol })}\n  />}<ErrorCallout errorMessage={dataFetchingError} onPress={refetch} /><Flex row><Button\n    isDisabled={Boolean(error) || !txInfo?.txRequest || Boolean(fotErrorToken)}\n    onPress={handleOnContinue}\n    loading={requestLoading}\n    variant=\"branded\"\n    key=\"LoaderButton-animation-IncreaseLiquidity-continue\"\n    size=\"large\"\n  >{error || t(\"common.add.label\")}</Button></Flex></Flex>;\n}\n","\"use strict\";\nimport {\n  IncreaseLiquidityContextProvider,\n  IncreaseLiquidityStep,\n  useIncreaseLiquidityContext\n} from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { IncreaseLiquidityReview } from \"components/IncreaseLiquidity/IncreaseLiquidityReview\";\nimport { IncreaseLiquidityTxContextProvider } from \"components/IncreaseLiquidity/IncreaseLiquidityTxContext\";\nimport { LiquidityModalHeader } from \"components/Liquidity/LiquidityModalHeader\";\nimport { IncreaseLiquidityForm } from \"pages/IncreaseLiquidity/IncreaseLiquidityForm\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCloseModal } from \"state/application/hooks\";\nimport { HeightAnimator } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { MIN_AUTO_SLIPPAGE_TOLERANCE } from \"uniswap/src/constants/transactions\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { TransactionSettingsContextProvider } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionSettingKey } from \"uniswap/src/features/transactions/settings/slice\";\nfunction IncreaseLiquidityModalInner() {\n  const { t } = useTranslation();\n  const { step, setStep } = useIncreaseLiquidityContext();\n  const onClose = useCloseModal(ModalName.AddLiquidity);\n  if (step === IncreaseLiquidityStep.Input) {\n    return <Modal name={ModalName.AddLiquidity} onClose={onClose} isDismissible gap=\"$gap24\" padding=\"$padding16\"><LiquidityModalHeader title={t(\"common.addLiquidity\")} closeModal={onClose} /><HeightAnimator animation=\"fast\"><IncreaseLiquidityForm /></HeightAnimator></Modal>;\n  }\n  return <Modal\n    name={ModalName.AddLiquidity}\n    onClose={onClose}\n    isDismissible\n    gap=\"$gap12\"\n    paddingX=\"$padding8\"\n    paddingY=\"$padding12\"\n    height=\"max-content\"\n  ><LiquidityModalHeader\n    title={t(\"common.addLiquidity\")}\n    closeModal={onClose}\n    goBack={() => setStep(IncreaseLiquidityStep.Input)}\n  /><HeightAnimator animation=\"fast\"><IncreaseLiquidityReview onClose={onClose} /></HeightAnimator></Modal>;\n}\nexport function IncreaseLiquidityModal() {\n  return <IncreaseLiquidityContextProvider><TransactionSettingsContextProvider\n    settingKey={TransactionSettingKey.LP}\n    autoSlippageTolerance={MIN_AUTO_SLIPPAGE_TOLERANCE}\n  ><IncreaseLiquidityTxContextProvider><IncreaseLiquidityModalInner /></IncreaseLiquidityTxContextProvider></TransactionSettingsContextProvider></IncreaseLiquidityContextProvider>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport { useModalLiquidityInitialState, useV3OrV4PositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { getProtocolItems } from \"components/Liquidity/utils\";\nimport { GetHelpHeader } from \"components/Modal/GetHelpHeader\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport { canUnwrapCurrency, getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useCloseModal } from \"state/application/hooks\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { liquiditySaga } from \"state/sagas/liquidity/liquiditySaga\";\nimport { Button, Flex, Switch, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { useAccountMeta } from \"uniswap/src/contexts/UniswapContext\";\nimport { useClaimLpFeesCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useClaimLpFeesCalldataQuery\";\nimport { AccountType } from \"uniswap/src/features/accounts/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { InterfaceEventNameLocal, ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport {\n  LiquidityTransactionType,\n  isValidLiquidityTxContext\n} from \"uniswap/src/features/transactions/liquidity/types\";\nimport { getErrorMessageToDisplay, parseErrorMessageTitle } from \"uniswap/src/features/transactions/liquidity/utils\";\nimport { validateTransactionRequest } from \"uniswap/src/features/transactions/swap/utils/trade\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nfunction UnwrapUnderCard({\n  unwrapNativeCurrency,\n  setUnwrapNativeCurrency,\n  chainId\n}) {\n  const nativeCurrency = chainId ? nativeOnChain(chainId) : void 0;\n  return <Flex\n    row\n    backgroundColor=\"$surface2\"\n    borderBottomLeftRadius=\"$rounded12\"\n    borderBottomRightRadius=\"$rounded12\"\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n    py=\"$padding8\"\n    px=\"$padding16\"\n  ><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"pool.collectAs\" values={{ nativeWrappedSymbol: nativeCurrency?.symbol }} /></Text><Switch\n    id=\"collect-as-weth\"\n    checked={unwrapNativeCurrency}\n    onCheckedChange={() => setUnwrapNativeCurrency((unwrapNativeCurrency2) => !unwrapNativeCurrency2)}\n    variant=\"default\"\n  /></Flex>;\n}\nexport function ClaimFeeModal() {\n  const { t } = useTranslation();\n  const trace = useTrace();\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const positionInfo = useModalLiquidityInitialState();\n  const account = useAccountMeta();\n  const [currentTransactionStep, setCurrentTransactionStep] = useState();\n  const [unwrapNativeCurrency, setUnwrapNativeCurrency] = useState(true);\n  const { currency0Amount, currency1Amount, chainId } = positionInfo || {};\n  const canUnwrap0 = canUnwrapCurrency(currency0Amount?.currency, positionInfo?.version);\n  const canUnwrap1 = canUnwrapCurrency(currency1Amount?.currency, positionInfo?.version);\n  const canUnwrap = positionInfo && chainId && (canUnwrap0 || canUnwrap1);\n  const onClose = useCloseModal(ModalName.ClaimFee);\n  const {\n    feeValue0: token0Fees,\n    feeValue1: token1Fees,\n    fiatFeeValue0: token0FeesUsd,\n    fiatFeeValue1: token1FeesUsd\n  } = useV3OrV4PositionDerivedInfo(positionInfo);\n  const currency0 = getCurrencyWithOptionalUnwrap({\n    currency: token0Fees?.currency,\n    shouldUnwrap: unwrapNativeCurrency && canUnwrap0\n  });\n  const currency1 = getCurrencyWithOptionalUnwrap({\n    currency: token1Fees?.currency,\n    shouldUnwrap: unwrapNativeCurrency && canUnwrap1\n  });\n  const currencyInfo0 = useCurrencyInfo(currencyId(currency0));\n  const currencyInfo1 = useCurrencyInfo(currencyId(currency1));\n  const dispatch = useAppDispatch();\n  const selectChain = useSelectChain();\n  const startChainId = useAccount().chainId;\n  const claimLpFeesParams = useMemo(() => {\n    if (!positionInfo || !currency0 || !currency1) {\n      return void 0;\n    }\n    return {\n      simulateTransaction: true,\n      protocol: getProtocolItems(positionInfo.version),\n      tokenId: positionInfo.tokenId ? Number(positionInfo.tokenId) : void 0,\n      walletAddress: account?.address,\n      chainId: positionInfo.currency0Amount.currency.chainId,\n      position: {\n        pool: {\n          token0: currency0.isNative ? ZERO_ADDRESS : currency0.address,\n          token1: currency1.isNative ? ZERO_ADDRESS : currency1.address,\n          fee: positionInfo.feeTier ? Number(positionInfo.feeTier) : void 0,\n          tickSpacing: positionInfo?.tickSpacing ? Number(positionInfo?.tickSpacing) : void 0,\n          hooks: positionInfo.v4hook\n        },\n        tickLower: positionInfo.tickLower ? Number(positionInfo.tickLower) : void 0,\n        tickUpper: positionInfo.tickUpper ? Number(positionInfo.tickUpper) : void 0\n      },\n      expectedTokenOwed0RawAmount: positionInfo.version !== ProtocolVersion.V4 ? token0Fees?.quotient.toString() : void 0,\n      expectedTokenOwed1RawAmount: positionInfo.version !== ProtocolVersion.V4 ? token1Fees?.quotient.toString() : void 0,\n      collectAsWETH: positionInfo.version !== ProtocolVersion.V4 ? !unwrapNativeCurrency : void 0\n    };\n  }, [\n    account?.address,\n    currency0,\n    currency1,\n    positionInfo,\n    token0Fees?.quotient,\n    token1Fees?.quotient,\n    unwrapNativeCurrency\n  ]);\n  const {\n    data,\n    isLoading: calldataLoading,\n    error,\n    refetch\n  } = useClaimLpFeesCalldataQuery({\n    params: claimLpFeesParams,\n    enabled: Boolean(claimLpFeesParams)\n  });\n  if (error && Object.keys(error).length > 0) {\n    const message = parseErrorMessageTitle(error, { defaultTitle: \"unknown ClaimLPFeesCalldataQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"ClaimFeeModal\",\n        function: \"useEffect\"\n      }\n    });\n    sendAnalyticsEvent(InterfaceEventNameLocal.CollectLiquidityFailed, {\n      message\n    });\n  }\n  const txInfo = useMemo(() => {\n    const validatedTxRequest = validateTransactionRequest(data?.claim);\n    if (!positionInfo || !validatedTxRequest) {\n      return void 0;\n    }\n    return {\n      type: LiquidityTransactionType.Collect,\n      protocolVersion: positionInfo?.version,\n      action: {\n        type: LiquidityTransactionType.Collect,\n        currency0Amount: token0Fees || CurrencyAmount.fromRawAmount(positionInfo.currency0Amount.currency, 0),\n        currency1Amount: token1Fees || CurrencyAmount.fromRawAmount(positionInfo.currency1Amount.currency, 0)\n      },\n      txRequest: validatedTxRequest\n    };\n  }, [data?.claim, token0Fees, token1Fees, positionInfo]);\n  const onPressConfirm = async () => {\n    const isValidTx = isValidLiquidityTxContext(txInfo);\n    if (!account || account?.type !== AccountType.SignerMnemonic || !isValidTx) {\n      return;\n    }\n    dispatch(\n      liquiditySaga.actions.trigger({\n        selectChain,\n        startChainId,\n        account,\n        liquidityTxContext: txInfo,\n        setCurrentStep: setCurrentTransactionStep,\n        setSteps: () => void 0,\n        onSuccess: () => {\n          onClose();\n        },\n        onFailure: () => {\n          setCurrentTransactionStep(void 0);\n        },\n        analytics: positionInfo && token0Fees?.currency && token1Fees?.currency ? {\n          ...getLPBaseAnalyticsProperties({\n            trace,\n            poolId: positionInfo.poolId,\n            currency0: currencyInfo0?.currency ?? token0Fees.currency,\n            currency1: currencyInfo1?.currency ?? token1Fees.currency,\n            currency0AmountUsd: token0FeesUsd,\n            currency1AmountUsd: token1FeesUsd,\n            version: positionInfo?.version\n          })\n        } : void 0\n      })\n    );\n  };\n  return <Modal name={ModalName.ClaimFee} onClose={onClose} isDismissible><Flex gap=\"$gap16\"><GetHelpHeader\n    link={uniswapUrls.helpRequestUrl}\n    title={t(\"pool.collectFees\")}\n    closeModal={onClose}\n    closeDataTestId=\"ClaimFeeModal-close-icon\"\n  />{token0Fees && token1Fees && <Flex gap=\"$gap4\"><Flex\n    backgroundColor=\"$surface2\"\n    borderTopLeftRadius=\"$rounded12\"\n    borderTopRightRadius=\"$rounded12\"\n    borderBottomLeftRadius={canUnwrap ? \"$rounded0\" : \"$rounded12\"}\n    borderBottomRightRadius={canUnwrap ? \"$rounded0\" : \"$rounded12\"}\n    p=\"$padding16\"\n    gap=\"$gap12\"\n  ><Flex row alignItems=\"center\" justifyContent=\"space-between\"><Flex row gap=\"$gap8\" alignItems=\"center\"><CurrencyLogo currencyInfo={currencyInfo0} size={iconSizes.icon24} /><Text variant=\"body1\" color=\"neutral1\">{currency0?.symbol}</Text></Flex><Flex row gap=\"$gap8\" alignItems=\"center\"><Text variant=\"body1\" color=\"$neutral1\">{formatCurrencyAmount({ value: token0Fees })}</Text>{token0FeesUsd && <Text variant=\"body1\" color=\"$neutral2\">\r\n                      ({formatCurrencyAmount({ value: token0FeesUsd, type: NumberType.FiatTokenPrice })})\r\n                    </Text>}</Flex></Flex><Flex row alignItems=\"center\" justifyContent=\"space-between\"><Flex row gap=\"$gap8\" alignItems=\"center\"><CurrencyLogo currencyInfo={currencyInfo1} size={iconSizes.icon24} /><Text variant=\"body1\" color=\"neutral1\">{currency1?.symbol}</Text></Flex><Flex row gap=\"$gap8\" alignItems=\"center\"><Text variant=\"body1\" color=\"$neutral1\">{formatCurrencyAmount({ value: token1Fees })}</Text>{token1FeesUsd && <Text variant=\"body1\" color=\"$neutral2\">\r\n                      ({formatCurrencyAmount({ value: token1FeesUsd, type: NumberType.FiatTokenPrice })})\r\n                    </Text>}</Flex></Flex></Flex>{canUnwrap && <UnwrapUnderCard\n    unwrapNativeCurrency={unwrapNativeCurrency}\n    setUnwrapNativeCurrency={setUnwrapNativeCurrency}\n    chainId={chainId}\n  />}</Flex>}<ErrorCallout errorMessage={getErrorMessageToDisplay({ calldataError: error })} onPress={refetch} /><Flex row><Button\n    key=\"LoaderButton-animation-ClaimFeeModal-button\"\n    isDisabled={!data?.claim || Boolean(currentTransactionStep)}\n    loading={calldataLoading || Boolean(currentTransactionStep)}\n    size=\"large\"\n    variant=\"branded\"\n    onPress={onPressConfirm}\n  >{currentTransactionStep ? t(\"common.confirmWallet\") : t(\"common.collect.button\")}</Button></Flex></Flex></Modal>;\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { claimLpFees } from \"uniswap/src/data/apiClients/tradingApi/TradingApiClient\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nexport function useClaimLpFeesCalldataQuery({\n  params,\n  ...rest\n}) {\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.claimLpFees, params];\n  return useQuery({\n    queryKey,\n    queryFn: async () => {\n      if (!params) {\n        throw { name: \"Params are required\" };\n      }\n      return await claimLpFees(params);\n    },\n    ...rest\n  });\n}\n","\"use strict\";\nimport { useModalLiquidityInitialState } from \"components/Liquidity/hooks\";\nimport { createContext, useContext, useMemo, useState } from \"react\";\nexport var DecreaseLiquidityStep = /* @__PURE__ */ ((DecreaseLiquidityStep2) => {\n  DecreaseLiquidityStep2[DecreaseLiquidityStep2[\"Input\"] = 0] = \"Input\";\n  DecreaseLiquidityStep2[DecreaseLiquidityStep2[\"Review\"] = 1] = \"Review\";\n  return DecreaseLiquidityStep2;\n})(DecreaseLiquidityStep || {});\nconst RemoveLiquidityModalContext = createContext({\n  step: 0 /* Input */,\n  setStep: () => null,\n  percent: \"\",\n  setPercent: () => null,\n  percentInvalid: true,\n  unwrapNativeCurrency: true,\n  setUnwrapNativeCurrency: () => null,\n  currentTransactionStep: void 0,\n  setCurrentTransactionStep: () => null\n});\nexport function RemoveLiquidityModalContextProvider({ children }) {\n  const [step, setStep] = useState(0 /* Input */);\n  const [unwrapNativeCurrency, setUnwrapNativeCurrency] = useState(true);\n  const [percent, setPercent] = useState(\"\");\n  const [currentTransactionStep, setCurrentTransactionStep] = useState();\n  const positionInfo = useModalLiquidityInitialState();\n  const percentInvalid = percent === \"0\" || percent === \"\" || !percent;\n  const ctx = useMemo(\n    () => ({\n      percent,\n      setPercent,\n      step,\n      setStep,\n      positionInfo,\n      percentInvalid,\n      unwrapNativeCurrency,\n      setUnwrapNativeCurrency,\n      currentTransactionStep,\n      setCurrentTransactionStep\n    }),\n    [\n      percent,\n      step,\n      positionInfo,\n      percentInvalid,\n      unwrapNativeCurrency,\n      setUnwrapNativeCurrency,\n      currentTransactionStep\n    ]\n  );\n  return <RemoveLiquidityModalContext.Provider value={ctx}>{children}</RemoveLiquidityModalContext.Provider>;\n}\nexport function useRemoveLiquidityModalContext() {\n  const removeModalContext = useContext(RemoveLiquidityModalContext);\n  if (removeModalContext === void 0) {\n    throw new Error(\"`useRemoveLiquidityTxContext` must be used inside of `RemoveLiquidityTxContextProvider`\");\n  }\n  return removeModalContext;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useV3OrV4PositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { getProtocolItems } from \"components/Liquidity/utils\";\nimport { useRemoveLiquidityModalContext } from \"components/RemoveLiquidity/RemoveLiquidityModalContext\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport JSBI from \"jsbi\";\nimport { getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useCheckLpApprovalQuery } from \"uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery\";\nimport { useDecreaseLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useDecreaseLpPositionCalldataQuery\";\nimport {\n  ProtocolItems\n} from \"uniswap/src/data/tradingApi/__generated__\";\nimport { toSupportedChainId } from \"uniswap/src/features/chains/utils\";\nimport { useTransactionGasFee, useUSDCurrencyAmountOfGasFee } from \"uniswap/src/features/gas/hooks\";\nimport { InterfaceEventNameLocal } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { getErrorMessageToDisplay, parseErrorMessageTitle } from \"uniswap/src/features/transactions/liquidity/utils\";\nimport { useTransactionSettingsContext } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionStepType } from \"uniswap/src/features/transactions/swap/types/steps\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nexport function useRemoveLiquidityTxAndGasInfo({ account }) {\n  const { positionInfo, percent, percentInvalid, unwrapNativeCurrency, currentTransactionStep } = useRemoveLiquidityModalContext();\n  const { customDeadline, customSlippageTolerance } = useTransactionSettingsContext();\n  const [hasDecreaseErrorResponse, setHasDecreaseErrorResponse] = useState(false);\n  const currency0 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo?.currency0Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && positionInfo?.version !== ProtocolVersion.V4\n  });\n  const currency1 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo?.currency1Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && positionInfo?.version !== ProtocolVersion.V4\n  });\n  const v2LpTokenApprovalQueryParams = useMemo(() => {\n    if (!positionInfo || !positionInfo.liquidityToken || percentInvalid || !positionInfo.liquidityAmount) {\n      return void 0;\n    }\n    return {\n      protocol: ProtocolItems.V2,\n      walletAddress: account,\n      chainId: positionInfo.liquidityToken.chainId,\n      positionToken: positionInfo.liquidityToken.address,\n      positionAmount: positionInfo.liquidityAmount.multiply(JSBI.BigInt(percent)).divide(JSBI.BigInt(100)).quotient.toString()\n    };\n  }, [positionInfo, percent, account, percentInvalid]);\n  const {\n    data: v2LpTokenApproval,\n    isLoading: v2ApprovalLoading,\n    error: approvalError,\n    refetch: approvalRefetch\n  } = useCheckLpApprovalQuery({\n    params: v2LpTokenApprovalQueryParams,\n    staleTime: 5 * ONE_SECOND_MS,\n    enabled: Boolean(v2LpTokenApprovalQueryParams)\n  });\n  if (approvalError) {\n    logger.info(\n      \"RemoveLiquidityTxAndGasInfo\",\n      \"RemoveLiquidityTxAndGasInfo\",\n      parseErrorMessageTitle(approvalError, { defaultTitle: \"unkown CheckLpApprovalQuery\" }),\n      {\n        error: JSON.stringify(approvalError),\n        v2LpTokenApprovalQueryParams: JSON.stringify(v2LpTokenApprovalQueryParams)\n      }\n    );\n  }\n  const v2ApprovalGasFeeUSD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.liquidityToken?.chainId,\n    v2LpTokenApproval?.gasFeePositionTokenApproval\n  ) ?? void 0;\n  const approvalsNeeded = Boolean(v2LpTokenApproval);\n  const { feeValue0, feeValue1 } = useV3OrV4PositionDerivedInfo(positionInfo);\n  const decreaseCalldataQueryParams = useMemo(() => {\n    const apiProtocolItems = getProtocolItems(positionInfo?.version);\n    if (!positionInfo || !apiProtocolItems || !account || percentInvalid || !currency0 || !currency1) {\n      return void 0;\n    }\n    return {\n      simulateTransaction: !approvalsNeeded,\n      protocol: apiProtocolItems,\n      tokenId: positionInfo.tokenId ? Number(positionInfo.tokenId) : void 0,\n      chainId: positionInfo.currency0Amount.currency.chainId,\n      walletAddress: account,\n      liquidityPercentageToDecrease: Number(percent),\n      liquidity0: positionInfo.version === ProtocolVersion.V2 ? positionInfo.currency0Amount.quotient.toString() : void 0,\n      liquidity1: positionInfo.version === ProtocolVersion.V2 ? positionInfo.currency1Amount.quotient.toString() : void 0,\n      positionLiquidity: positionInfo.version === ProtocolVersion.V2 ? positionInfo.liquidityAmount?.quotient.toString() : positionInfo.liquidity,\n      expectedTokenOwed0RawAmount: positionInfo.version !== ProtocolVersion.V4 ? feeValue0?.quotient.toString() : void 0,\n      expectedTokenOwed1RawAmount: positionInfo.version !== ProtocolVersion.V4 ? feeValue1?.quotient.toString() : void 0,\n      position: {\n        tickLower: positionInfo.tickLower ? Number(positionInfo.tickLower) : void 0,\n        tickUpper: positionInfo.tickUpper ? Number(positionInfo.tickUpper) : void 0,\n        pool: {\n          token0: currency0.isNative ? ZERO_ADDRESS : currency0.address,\n          token1: currency1.isNative ? ZERO_ADDRESS : currency1.address,\n          fee: positionInfo.feeTier ? Number(positionInfo.feeTier) : void 0,\n          tickSpacing: positionInfo?.tickSpacing ? Number(positionInfo?.tickSpacing) : void 0,\n          hooks: positionInfo.v4hook\n        }\n      },\n      slippageTolerance: customSlippageTolerance\n    };\n  }, [\n    positionInfo,\n    account,\n    percentInvalid,\n    currency0,\n    currency1,\n    approvalsNeeded,\n    percent,\n    feeValue0?.quotient,\n    feeValue1?.quotient,\n    customSlippageTolerance\n  ]);\n  const isUserCommittedToDecrease = currentTransactionStep?.step.type === TransactionStepType.DecreasePositionTransaction;\n  const {\n    data: decreaseCalldata,\n    isLoading: decreaseCalldataLoading,\n    error: calldataError,\n    refetch: calldataRefetch\n  } = useDecreaseLpPositionCalldataQuery({\n    params: decreaseCalldataQueryParams,\n    deadlineInMinutes: customDeadline,\n    refetchInterval: hasDecreaseErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: !isUserCommittedToDecrease && !!decreaseCalldataQueryParams && (!percentInvalid && !v2LpTokenApprovalQueryParams || !v2ApprovalLoading && !approvalError && Boolean(v2LpTokenApproval))\n  });\n  useEffect(() => {\n    setHasDecreaseErrorResponse(!!calldataError);\n  }, [calldataError, decreaseCalldataQueryParams]);\n  if (calldataError) {\n    const message = parseErrorMessageTitle(calldataError, { defaultTitle: \"DecreaseLpPositionCalldataQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"RemoveLiquidityTxAndGasInfo\",\n        function: \"useEffect\"\n      }\n    });\n    sendAnalyticsEvent(InterfaceEventNameLocal.DecreaseLiquidityFailed, {\n      message\n    });\n  }\n  const { value: estimatedGasFee } = useTransactionGasFee(decreaseCalldata?.decrease, !!decreaseCalldata?.gasFee);\n  const decreaseGasFeeUsd = useUSDCurrencyAmountOfGasFee(\n    toSupportedChainId(decreaseCalldata?.decrease?.chainId) ?? void 0,\n    decreaseCalldata?.gasFee || estimatedGasFee\n  ) ?? void 0;\n  const totalGasFeeEstimate = v2ApprovalGasFeeUSD ? decreaseGasFeeUsd?.add(v2ApprovalGasFeeUSD) : decreaseGasFeeUsd;\n  return {\n    gasFeeEstimateUSD: totalGasFeeEstimate,\n    decreaseCalldataLoading,\n    decreaseCalldata,\n    v2LpTokenApproval,\n    approvalLoading: v2ApprovalLoading,\n    error: getErrorMessageToDisplay({ approvalError, calldataError }),\n    refetch: approvalError ? approvalRefetch : calldataError ? calldataRefetch : void 0\n  };\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { decreaseLpPosition } from \"uniswap/src/data/apiClients/tradingApi/TradingApiClient\";\nimport { getTradeSettingsDeadline } from \"uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nexport function useDecreaseLpPositionCalldataQuery({\n  params,\n  deadlineInMinutes,\n  ...rest\n}) {\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.decreaseLp, params];\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes);\n  const paramsWithDeadline = { ...params, deadline };\n  return useQuery({\n    queryKey,\n    queryFn: async () => {\n      if (!params) {\n        throw { name: \"Params are required\" };\n      }\n      return await decreaseLpPosition(paramsWithDeadline);\n    },\n    ...rest\n  });\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useRemoveLiquidityModalContext } from \"components/RemoveLiquidity/RemoveLiquidityModalContext\";\nimport { useRemoveLiquidityTxAndGasInfo } from \"components/RemoveLiquidity/hooks\";\nimport { getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { createContext, useContext, useEffect, useMemo } from \"react\";\nimport { useAccountMeta } from \"uniswap/src/contexts/UniswapContext\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport {\n  LiquidityTransactionType\n} from \"uniswap/src/features/transactions/liquidity/types\";\nimport { validateTransactionRequest } from \"uniswap/src/features/transactions/swap/utils/trade\";\nimport { logContextUpdate } from \"utilities/src/logger/contextEnhancer\";\nconst RemoveLiquidityTxContext = createContext(void 0);\nexport function RemoveLiquidityTxContextProvider({ children }) {\n  const account = useAccountMeta();\n  const { positionInfo, percent, unwrapNativeCurrency } = useRemoveLiquidityModalContext();\n  const removeLiquidityTxInfo = useRemoveLiquidityTxAndGasInfo({ account: account?.address });\n  const { approvalLoading, decreaseCalldataLoading, decreaseCalldata, error, refetch } = removeLiquidityTxInfo;\n  const datadogEnabled = useFeatureFlag(FeatureFlags.Datadog);\n  useEffect(() => {\n    logContextUpdate(\"RemoveLiquidityTxContext\", removeLiquidityTxInfo, datadogEnabled);\n  }, [removeLiquidityTxInfo, datadogEnabled]);\n  const currency0 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo?.currency0Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency\n  });\n  const currency1 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo?.currency1Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency\n  });\n  const decreaseLiquidityTxContext = useMemo(() => {\n    if (!positionInfo || approvalLoading || decreaseCalldataLoading || !decreaseCalldata || !currency0 || !currency1) {\n      return void 0;\n    }\n    const approvePositionTokenRequest = validateTransactionRequest(\n      removeLiquidityTxInfo.v2LpTokenApproval?.positionTokenApproval\n    );\n    const txRequest = validateTransactionRequest(decreaseCalldata.decrease);\n    if (!txRequest) {\n      return void 0;\n    }\n    const { currency0Amount, currency1Amount } = positionInfo;\n    const token0Amount = CurrencyAmount.fromRawAmount(currency0, currency0Amount.quotient);\n    const token1Amount = CurrencyAmount.fromRawAmount(currency1, currency1Amount.quotient);\n    const currency0AmountToRemove = token0Amount.multiply(percent).divide(100);\n    const currency1AmountToRemove = token1Amount.multiply(percent).divide(100);\n    return {\n      type: LiquidityTransactionType.Decrease,\n      protocolVersion: positionInfo.version,\n      action: {\n        type: LiquidityTransactionType.Decrease,\n        currency0Amount: currency0AmountToRemove,\n        currency1Amount: currency1AmountToRemove,\n        liquidityToken: positionInfo.liquidityToken\n      },\n      approvePositionTokenRequest,\n      txRequest,\n      approveToken0Request: void 0,\n      approveToken1Request: void 0,\n      revokeToken0Request: void 0,\n      revokeToken1Request: void 0,\n      permit: void 0\n    };\n  }, [\n    positionInfo,\n    approvalLoading,\n    decreaseCalldataLoading,\n    decreaseCalldata,\n    currency0,\n    currency1,\n    removeLiquidityTxInfo.v2LpTokenApproval?.positionTokenApproval,\n    percent\n  ]);\n  return <RemoveLiquidityTxContext.Provider\n    value={{ ...removeLiquidityTxInfo, txContext: decreaseLiquidityTxContext, error, refetch }}\n  >{children}</RemoveLiquidityTxContext.Provider>;\n}\nexport const useRemoveLiquidityTxContext = () => {\n  const removeContext = useContext(RemoveLiquidityTxContext);\n  if (removeContext === void 0) {\n    throw new Error(\"`useRemoveLiquidityTxContext` must be used inside of `RemoveLiquidityTxContextProvider`\");\n  }\n  return removeContext;\n};\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { TokenInfo } from \"components/Liquidity/TokenInfo\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport {\n  useGetPoolTokenPercentage,\n  usePositionCurrentPrice,\n  useV3OrV4PositionDerivedInfo\n} from \"components/Liquidity/hooks\";\nimport { useRemoveLiquidityModalContext } from \"components/RemoveLiquidity/RemoveLiquidityModalContext\";\nimport { useRemoveLiquidityTxContext } from \"components/RemoveLiquidity/RemoveLiquidityTxContext\";\nimport { DetailLineItem } from \"components/swap/DetailLineItem\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport { getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { liquiditySaga } from \"state/sagas/liquidity/liquiditySaga\";\nimport { Button, Flex, Separator, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { ProgressIndicator } from \"uniswap/src/components/ConfirmSwapModal/ProgressIndicator\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { useAccountMeta } from \"uniswap/src/contexts/UniswapContext\";\nimport { AccountType } from \"uniswap/src/features/accounts/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { isValidLiquidityTxContext } from \"uniswap/src/features/transactions/liquidity/types\";\nimport { getSymbolDisplayText } from \"uniswap/src/utils/currency\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nexport function RemoveLiquidityReview({ onClose }) {\n  const { t } = useTranslation();\n  const { percent, positionInfo, unwrapNativeCurrency, currentTransactionStep, setCurrentTransactionStep } = useRemoveLiquidityModalContext();\n  const [steps, setSteps] = useState([]);\n  const removeLiquidityTxContext = useRemoveLiquidityTxContext();\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const currency0FiatAmount = useUSDCValue(positionInfo?.currency0Amount) ?? void 0;\n  const currency1FiatAmount = useUSDCValue(positionInfo?.currency1Amount) ?? void 0;\n  const selectChain = useSelectChain();\n  const startChainId = useAccount().chainId;\n  const account = useAccountMeta();\n  const dispatch = useDispatch();\n  const trace = useTrace();\n  const { txContext, gasFeeEstimateUSD } = removeLiquidityTxContext;\n  const onSuccess = () => {\n    setSteps([]);\n    setCurrentTransactionStep(void 0);\n    onClose();\n  };\n  const onFailure = () => {\n    setCurrentTransactionStep(void 0);\n  };\n  if (!positionInfo) {\n    throw new Error(\"RemoveLiquidityModal must have an initial state when opening\");\n  }\n  const { feeValue0, feeValue1, fiatFeeValue0, fiatFeeValue1 } = useV3OrV4PositionDerivedInfo(positionInfo);\n  const { currency0Amount, currency1Amount, chainId, feeTier, version, poolId } = positionInfo;\n  const currentPrice = usePositionCurrentPrice(positionInfo);\n  const currency0 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo?.currency0Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency\n  });\n  const currency1 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo?.currency1Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency\n  });\n  const {\n    unwrappedCurrency0AmountToRemove,\n    unwrappedCurrency1AmountToRemove,\n    currency0AmountToRemove,\n    currency1AmountToRemove\n  } = useMemo(() => {\n    const unwrappedCurrency0AmountToRemove2 = CurrencyAmount.fromRawAmount(currency0, currency0Amount.quotient).multiply(percent).divide(100);\n    const unwrappedCurrency1AmountToRemove2 = CurrencyAmount.fromRawAmount(currency1, currency1Amount.quotient).multiply(percent).divide(100);\n    const currency0AmountToRemove2 = currency0Amount.multiply(percent).divide(100);\n    const currency1AmountToRemove2 = currency1Amount.multiply(percent).divide(100);\n    return {\n      unwrappedCurrency0AmountToRemove: unwrappedCurrency0AmountToRemove2,\n      unwrappedCurrency1AmountToRemove: unwrappedCurrency1AmountToRemove2,\n      currency0AmountToRemove: currency0AmountToRemove2,\n      currency1AmountToRemove: currency1AmountToRemove2\n    };\n  }, [currency0Amount, currency0, currency1Amount, currency1, percent]);\n  const currency0AmountToRemoveUSD = useUSDCValue(unwrappedCurrency0AmountToRemove);\n  const currency1AmountToRemoveUSD = useUSDCValue(unwrappedCurrency1AmountToRemove);\n  const newCurrency0Amount = currency0Amount.subtract(currency0AmountToRemove);\n  const newCurrency1Amount = currency1Amount.subtract(currency1AmountToRemove);\n  const newCurrency0AmountUSD = useUSDCValue(newCurrency0Amount);\n  const newCurrency1AmountUSD = useUSDCValue(newCurrency1Amount);\n  const poolTokenPercentage = useGetPoolTokenPercentage(positionInfo);\n  const currency0CurrencyInfo = useCurrencyInfo(currency0Amount.currency);\n  const currency1CurrencyInfo = useCurrencyInfo(currency1Amount.currency);\n  const onDecreaseLiquidity = () => {\n    const isValidTx = isValidLiquidityTxContext(txContext);\n    if (!account || account?.type !== AccountType.SignerMnemonic || !isValidTx || !positionInfo) {\n      return;\n    }\n    dispatch(\n      liquiditySaga.actions.trigger({\n        selectChain,\n        startChainId,\n        account,\n        liquidityTxContext: txContext,\n        setCurrentStep: setCurrentTransactionStep,\n        setSteps,\n        onSuccess,\n        onFailure,\n        analytics: {\n          ...getLPBaseAnalyticsProperties({\n            trace,\n            fee: feeTier,\n            poolId,\n            currency0,\n            currency1,\n            currency0AmountUsd: currency0AmountToRemoveUSD,\n            currency1AmountUsd: currency1AmountToRemoveUSD,\n            version\n          }),\n          expectedAmountBaseRaw: unwrappedCurrency0AmountToRemove?.quotient.toString() ?? \"-\",\n          expectedAmountQuoteRaw: unwrappedCurrency1AmountToRemove?.quotient.toString() ?? \"-\",\n          closePosition: percent === \"100\"\n        }\n      })\n    );\n  };\n  return <Flex gap=\"$gap16\"><Flex gap=\"$gap16\" px=\"$padding16\"><TokenInfo\n    currencyAmount={unwrappedCurrency0AmountToRemove}\n    currencyUSDAmount={currency0FiatAmount?.multiply(percent).divide(100)}\n  /><Text variant=\"body3\" color=\"$neutral2\">{t(\"common.and\")}</Text><TokenInfo\n    currencyAmount={unwrappedCurrency1AmountToRemove}\n    currencyUSDAmount={currency1FiatAmount?.multiply(percent).divide(100)}\n  />{positionInfo.version !== ProtocolVersion.V2 && <Flex p=\"$spacing16\" gap=\"$gap12\" background=\"$surface2\" borderRadius=\"$rounded12\"><Text variant=\"body4\" color=\"$neutral2\">{t(\"fee.uncollected\")}</Text><Flex row alignItems=\"center\" justifyContent=\"space-between\"><Flex row gap=\"$gap8\" alignItems=\"center\"><CurrencyLogo currencyInfo={currency0CurrencyInfo} size={24} /><Text variant=\"body3\">{currency0Amount.currency.symbol} fees</Text></Flex><Flex row alignItems=\"center\" gap=\"$spacing4\"><Text variant=\"body3\">{formatCurrencyAmount({ value: feeValue0 })}</Text>{\" \"}<Text variant=\"body3\" color=\"$neutral2\">\r\n                  ({formatCurrencyAmount({ value: fiatFeeValue0, type: NumberType.FiatTokenPrice })})\r\n                </Text></Flex></Flex><Flex row alignItems=\"center\" justifyContent=\"space-between\"><Flex row gap=\"$gap8\" alignItems=\"center\"><CurrencyLogo currencyInfo={currency1CurrencyInfo} size={24} /><Text variant=\"body3\">{currency1Amount.currency.symbol} fees</Text></Flex><Flex row alignItems=\"center\" gap=\"$spacing4\"><Text variant=\"body3\">{formatCurrencyAmount({ value: feeValue1 })}</Text>{\" \"}<Text variant=\"body3\" color=\"$neutral2\">\r\n                  ({formatCurrencyAmount({ value: fiatFeeValue1, type: NumberType.FiatTokenPrice })})\r\n                </Text></Flex></Flex></Flex>}</Flex>{currentTransactionStep ? <ProgressIndicator steps={steps} currentStep={currentTransactionStep} /> : <><Separator mx=\"$padding16\" /><Flex gap=\"$gap8\" px=\"$padding16\"><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">{t(\"common.rate\")}</Text>,\n      Value: () => <Text variant=\"body3\">{`1 ${currentPrice?.baseCurrency.symbol} = ${currentPrice?.toFixed()} ${currentPrice?.quoteCurrency.symbol}`}</Text>\n    }}\n  /><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"pool.newSpecificPosition\" values={{ symbol: currency0Amount.currency.symbol }} /></Text>,\n      Value: () => <Flex row gap=\"$gap4\"><Text variant=\"body3\">{formatCurrencyAmount({ value: newCurrency0Amount, type: NumberType.TokenNonTx })}{\" \"}{getSymbolDisplayText(newCurrency0Amount?.currency.symbol)}</Text><Text variant=\"body3\" color=\"$neutral2\">{`(${formatCurrencyAmount({ value: newCurrency0AmountUSD, type: NumberType.FiatStandard })})`}</Text></Flex>\n    }}\n  /><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"pool.newSpecificPosition\" values={{ symbol: currency1Amount.currency.symbol }} /></Text>,\n      Value: () => <Flex row gap=\"$gap4\"><Text variant=\"body3\">{formatCurrencyAmount({ value: newCurrency1Amount, type: NumberType.TokenNonTx })}{\" \"}{getSymbolDisplayText(newCurrency1Amount?.currency.symbol)}</Text><Text variant=\"body3\" color=\"$neutral2\">{`(${formatCurrencyAmount({ value: newCurrency1AmountUSD, type: NumberType.FiatStandard })})`}</Text></Flex>\n    }}\n  />{poolTokenPercentage ? <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">{t(\"addLiquidity.shareOfPool\")}</Text>,\n      Value: () => <Text variant=\"body3\">{formatPercent(poolTokenPercentage.toFixed())}</Text>\n    }}\n  /> : null}<DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">{t(\"common.networkCost\")}</Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\"><NetworkLogo chainId={chainId} size={iconSizes.icon16} shape=\"square\" /><Text variant=\"body3\">{formatCurrencyAmount({ value: gasFeeEstimateUSD, type: NumberType.FiatGasPrice })}</Text></Flex>\n    }}\n  /></Flex><Flex row><Button size=\"large\" onPress={onDecreaseLiquidity}>{t(\"common.confirm\")}</Button></Flex></>}</Flex>;\n}\n","\"use strict\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport { LiquidityModalDetailRows } from \"components/Liquidity/LiquidityModalDetailRows\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { StyledPercentInput } from \"components/PercentInput\";\nimport {\n  DecreaseLiquidityStep,\n  useRemoveLiquidityModalContext\n} from \"components/RemoveLiquidity/RemoveLiquidityModalContext\";\nimport { useRemoveLiquidityTxContext } from \"components/RemoveLiquidity/RemoveLiquidityTxContext\";\nimport { canUnwrapCurrency } from \"pages/Pool/Positions/create/utils\";\nimport { ClickablePill } from \"pages/Swap/Buy/PredefinedAmount\";\nimport { NumericalInputMimic, NumericalInputSymbolContainer, NumericalInputWrapper } from \"pages/Swap/common/shared\";\nimport { useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Button, Flex, Switch, Text, useSporeColors } from \"ui/src\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport useResizeObserver from \"use-resize-observer\";\nconst isValidPercentageInput = (value) => {\n  const numValue = Number(value);\n  return !isNaN(numValue) && numValue <= 100;\n};\nexport function RemoveLiquidityForm() {\n  const hiddenObserver = useResizeObserver();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const { percent, positionInfo, setPercent, setStep, percentInvalid, unwrapNativeCurrency, setUnwrapNativeCurrency } = useRemoveLiquidityModalContext();\n  const { gasFeeEstimateUSD, txContext, error, refetch } = useRemoveLiquidityTxContext();\n  if (!positionInfo) {\n    throw new Error(\"RemoveLiquidityModal must have an initial state when opening\");\n  }\n  const { currency0Amount, currency1Amount } = positionInfo;\n  const canUnwrap0 = canUnwrapCurrency(currency0Amount.currency, positionInfo.version);\n  const canUnwrap1 = canUnwrapCurrency(currency1Amount.currency, positionInfo.version);\n  const nativeCurrency = nativeOnChain(positionInfo.chainId);\n  const canUnwrap = canUnwrap0 || canUnwrap1;\n  const unwrapUnderCard = useMemo(() => {\n    if (!canUnwrap) {\n      return null;\n    }\n    return <Flex\n      row\n      backgroundColor=\"$surface2\"\n      borderBottomLeftRadius=\"$rounded12\"\n      borderBottomRightRadius=\"$rounded12\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      py=\"$padding8\"\n      px=\"$padding16\"\n    ><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"pool.withdrawAs\" values={{ nativeWrappedSymbol: nativeCurrency.symbol }} /></Text><Switch\n      id=\"add-as-weth\"\n      checked={unwrapNativeCurrency}\n      onCheckedChange={() => setUnwrapNativeCurrency((unwrapNativeCurrency2) => !unwrapNativeCurrency2)}\n      variant=\"branded\"\n    /></Flex>;\n  }, [canUnwrap, nativeCurrency, unwrapNativeCurrency, setUnwrapNativeCurrency]);\n  return <Flex gap=\"$gap24\">{\n    /* Position info */\n  }<Flex width=\"100%\" row justifyContent=\"flex-start\"><LiquidityPositionInfo positionInfo={positionInfo} /></Flex>{\n    /* Percent input panel */\n  }<Flex gap=\"$gap4\"><Flex\n    backgroundColor=\"$surface2\"\n    borderTopLeftRadius=\"$rounded12\"\n    borderTopRightRadius=\"$rounded12\"\n    borderBottomLeftRadius={canUnwrap ? \"$rounded0\" : \"$rounded12\"}\n    borderBottomRightRadius={canUnwrap ? \"$rounded0\" : \"$rounded12\"}\n    p=\"$padding16\"\n    gap=\"$gap12\"\n  ><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.withdrawal.amount\" /></Text><Flex row alignItems=\"center\" justifyContent=\"center\" width=\"100%\"><NumericalInputWrapper width=\"100%\"><StyledPercentInput\n    value={percent}\n    onUserInput={(value) => {\n      if (isValidPercentageInput(value)) {\n        setPercent(value);\n      }\n    }}\n    placeholder=\"0\"\n    $width={percent && hiddenObserver.width ? hiddenObserver.width + 1 : void 0}\n    maxDecimals={0}\n    maxLength={3}\n  /><NumericalInputSymbolContainer showPlaceholder={!percent}>%</NumericalInputSymbolContainer><NumericalInputMimic ref={hiddenObserver.ref}>{percent}</NumericalInputMimic></NumericalInputWrapper></Flex><Flex row gap=\"$gap8\" width=\"100%\" justifyContent=\"center\">{[25, 50, 75, 100].map((option) => {\n    const active = percent === option.toString();\n    const disabled = false;\n    return <ClickablePill\n      key={option}\n      onPress={() => {\n        setPercent(option.toString());\n      }}\n      $disabled={disabled}\n      $active={active}\n      customBorderColor={colors.surface3.val}\n      foregroundColor={colors[disabled ? \"neutral3\" : active ? \"neutral1\" : \"neutral2\"].val}\n      label={option < 100 ? option + \"%\" : t(\"swap.button.max\")}\n      px=\"$spacing16\"\n      textVariant=\"buttonLabel2\"\n    />;\n  })}</Flex></Flex>{unwrapUnderCard}</Flex>{\n    /* Detail rows */\n  }<LiquidityModalDetailRows\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    networkCost={gasFeeEstimateUSD}\n  /><ErrorCallout errorMessage={error} onPress={refetch} /><Flex row><Button\n    isDisabled={percentInvalid || !txContext?.txRequest}\n    onPress={() => setStep(DecreaseLiquidityStep.Review)}\n    loading={!error && !percentInvalid && !txContext?.txRequest}\n    variant=\"branded\"\n    key=\"LoaderButton-animation-RemoveLiquidity-continue\"\n    size=\"large\"\n  >{t(\"common.button.remove\")}</Button></Flex></Flex>;\n}\n","\"use strict\";\nimport { LiquidityModalHeader } from \"components/Liquidity/LiquidityModalHeader\";\nimport {\n  DecreaseLiquidityStep,\n  RemoveLiquidityModalContextProvider,\n  useRemoveLiquidityModalContext\n} from \"components/RemoveLiquidity/RemoveLiquidityModalContext\";\nimport { RemoveLiquidityReview } from \"components/RemoveLiquidity/RemoveLiquidityReview\";\nimport { RemoveLiquidityTxContextProvider } from \"components/RemoveLiquidity/RemoveLiquidityTxContext\";\nimport { RemoveLiquidityForm } from \"pages/RemoveLiquidity/RemoveLiquidityForm\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCloseModal } from \"state/application/hooks\";\nimport { HeightAnimator } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { MIN_AUTO_SLIPPAGE_TOLERANCE } from \"uniswap/src/constants/transactions\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { TransactionSettingsContextProvider } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionSettingKey } from \"uniswap/src/features/transactions/settings/slice\";\nfunction RemoveLiquidityModalInner() {\n  const closeModal = useCloseModal(ModalName.RemoveLiquidity);\n  const { t } = useTranslation();\n  const { step, setStep } = useRemoveLiquidityModalContext();\n  let modalContent;\n  switch (step) {\n    case DecreaseLiquidityStep.Input:\n      modalContent = <RemoveLiquidityForm />;\n      break;\n    case DecreaseLiquidityStep.Review:\n      modalContent = <RemoveLiquidityReview onClose={closeModal} />;\n      break;\n  }\n  return <Modal name={ModalName.RemoveLiquidity} onClose={closeModal} isDismissible gap=\"$gap24\" padding=\"$padding16\"><LiquidityModalHeader\n    title={t(\"pool.removeLiquidity\")}\n    closeModal={closeModal}\n    goBack={step === DecreaseLiquidityStep.Review ? () => setStep(DecreaseLiquidityStep.Input) : void 0}\n  /><HeightAnimator animation=\"fast\">{modalContent}</HeightAnimator></Modal>;\n}\nexport function RemoveLiquidityModal() {\n  return <RemoveLiquidityModalContextProvider><TransactionSettingsContextProvider\n    settingKey={TransactionSettingKey.LP}\n    autoSlippageTolerance={MIN_AUTO_SLIPPAGE_TOLERANCE}\n  ><RemoveLiquidityTxContextProvider><RemoveLiquidityModalInner /></RemoveLiquidityTxContextProvider></TransactionSettingsContextProvider></RemoveLiquidityModalContextProvider>;\n}\n","import { Button, Flex, Text, TouchableArea, isWeb, useSporeColors } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nimport { zIndexes } from \"ui/src/theme\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { openURL } from \"uniswap/src/utils/link\";\nimport { logger } from \"utilities/src/logger/logger\";\nexport function InfoLinkModal({\n  name,\n  isOpen,\n  showCloseButton,\n  icon,\n  title,\n  description,\n  buttonText,\n  linkText,\n  linkUrl,\n  onDismiss,\n  onButtonPress,\n  onAnalyticsEvent,\n  height\n}) {\n  const colors = useSporeColors();\n  const openUniswapURL = async () => {\n    if (!linkUrl) {\n      return;\n    }\n    try {\n      await openURL(linkUrl);\n      onAnalyticsEvent?.();\n    } catch (error) {\n      logger.error(error, { tags: { file: \"InfoLinkModal.tsx\", function: \"openUniswapURL\" } });\n    }\n  };\n  return <Modal backgroundColor={colors.surface1.val} isModalOpen={isOpen} name={name} height={height} onClose={onDismiss}>{showCloseButton && <TouchableArea\n    p=\"$spacing16\"\n    position=\"absolute\"\n    right={0}\n    top={0}\n    zIndex={zIndexes.default}\n    onPress={onDismiss}\n  >{isWeb && <X color=\"$neutral2\" size=\"$icon.16\" />}</TouchableArea>}<Flex alignItems=\"center\" gap=\"$spacing8\" mx={isWeb ? \"$none\" : \"$spacing36\"} pt=\"$spacing16\">{icon}<Flex centered gap=\"$spacing8\" p=\"$spacing16\"><Text color=\"$neutral1\" variant={isWeb ? \"subheading2\" : \"subheading1\"}>{title}</Text><Text color=\"$neutral2\" textAlign=\"center\" variant=\"body3\">{description}</Text></Flex><Flex row width=\"100%\"><Button fill emphasis=\"secondary\" size=\"large\" onPress={onButtonPress}>{buttonText}</Button></Flex>{linkText && linkUrl && <Flex row width=\"100%\"><Button fill emphasis=\"text-only\" size=\"large\" onPress={openUniswapURL}>{linkText}</Button></Flex>}</Flex></Modal>;\n}\n","import { useTranslation } from \"react-i18next\";\nimport { Flex } from \"ui/src\";\nimport { Wrench } from \"ui/src/components/icons/Wrench\";\nimport { InfoLinkModal } from \"uniswap/src/components/modals/InfoLinkModal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport function TestnetModeModal({\n  isOpen,\n  descriptionCopy,\n  unsupported = false,\n  showCloseButton = false,\n  onClose\n}) {\n  const { t } = useTranslation();\n  return <InfoLinkModal\n    title={unsupported ? t(\"common.notSupported\") : t(\"settings.setting.wallet.testnetMode.title\")}\n    description={descriptionCopy ?? unsupported ? t(\"testnet.unsupported\") : t(\"settings.setting.wallet.testnetMode.description\")}\n    isOpen={isOpen}\n    buttonText={t(\"common.button.close\")}\n    name={ModalName.TestnetMode}\n    icon={<Flex centered backgroundColor=\"$surface3\" borderRadius=\"$rounded12\" p=\"$spacing12\"><Wrench color=\"$neutral1\" size=\"$icon.24\" /></Flex>}\n    showCloseButton={showCloseButton}\n    height=\"max-content\"\n    onDismiss={onClose}\n    onButtonPress={onClose}\n  />;\n}\n","\"use strict\";\nimport { OffchainActivityModal } from \"components/AccountDrawer/MiniPortfolio/Activity/OffchainActivityModal\";\nimport UniwalletModal from \"components/AccountDrawer/UniwalletModal\";\nimport { AddressQRModal } from \"components/AddressQRModal\";\nimport { Banners } from \"components/Banner/shared/Banners\";\nimport ConnectedAccountBlocked from \"components/ConnectedAccountBlocked\";\nimport FeatureFlagModal from \"components/FeatureFlagModal/FeatureFlagModal\";\nimport { GetTheAppModal } from \"components/NavBar/DownloadApp/Modal\";\nimport { PrivacyChoicesModal } from \"components/PrivacyChoices\";\nimport { PrivacyPolicyModal } from \"components/PrivacyPolicy\";\nimport { ReceiveCryptoModal } from \"components/ReceiveCryptoModal\";\nimport { RecoveryPhraseModal } from \"components/RecoveryPhrase/Modal\";\nimport { UkDisclaimerModal } from \"components/TopLevelModals/UkDisclaimerModal\";\nimport AddressClaimModal from \"components/claim/AddressClaimModal\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useAccountRiskCheck from \"hooks/useAccountRiskCheck\";\nimport { PageType, useIsPage } from \"hooks/useIsPage\";\nimport { IncreaseLiquidityModal } from \"pages/IncreaseLiquidity/IncreaseLiquidityModal\";\nimport { ClaimFeeModal } from \"pages/Pool/Positions/ClaimFeeModal\";\nimport { RemoveLiquidityModal } from \"pages/RemoveLiquidity/RemoveLiquidityModal\";\nimport { useCloseModal, useModalIsOpen, useToggleModal } from \"state/application/hooks\";\nimport { useMedia } from \"ui/src\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { TestnetModeModal } from \"uniswap/src/features/testnets/TestnetModeModal\";\nimport { isBetaEnv, isDevEnv } from \"utilities/src/environment/env\";\nexport default function TopLevelModals() {\n  const isLandingPage = useIsPage(PageType.LANDING);\n  const media = useMedia();\n  const addressClaimOpen = useModalIsOpen(ModalName.AddressClaim);\n  const addressClaimToggle = useToggleModal(ModalName.AddressClaim);\n  const blockedAccountModalOpen = useModalIsOpen(ModalName.BlockedAccount);\n  const isAddLiquidityModalOpen = useModalIsOpen(ModalName.AddLiquidity);\n  const isRemoveLiquidityModalOpen = useModalIsOpen(ModalName.RemoveLiquidity);\n  const isClaimFeeModalOpen = useModalIsOpen(ModalName.ClaimFee);\n  const isTestnetModeModalOpen = useModalIsOpen(ModalName.TestnetMode);\n  const closeTestnetModeModal = useCloseModal(ModalName.TestnetMode);\n  const account = useAccount();\n  useAccountRiskCheck(account.address);\n  const accountBlocked = Boolean(blockedAccountModalOpen && account.isConnected);\n  const shouldShowDevFlags = isDevEnv() || isBetaEnv();\n  if (isLandingPage && media.sm) {\n    return <><PrivacyPolicyModal /><PrivacyChoicesModal /></>;\n  }\n  return <><AddressClaimModal isOpen={addressClaimOpen} connectedAddress={account.address} onDismiss={addressClaimToggle} /><ConnectedAccountBlocked account={account.address} isOpen={accountBlocked} /><UniwalletModal /><Banners /><OffchainActivityModal />{account.address && <ReceiveCryptoModal />}{account.address && <AddressQRModal accountAddress={account.address} />}<UkDisclaimerModal /><TestnetModeModal isOpen={isTestnetModeModalOpen} onClose={closeTestnetModeModal} showCloseButton /><GetTheAppModal /><PrivacyPolicyModal /><PrivacyChoicesModal /><FeatureFlagModal />{\n    /* {shouldShowDevFlags && <DevFlagsBox />} */\n  }{isAddLiquidityModalOpen && <IncreaseLiquidityModal />}{isRemoveLiquidityModalOpen && <RemoveLiquidityModal />}{isClaimFeeModalOpen && <ClaimFeeModal />}<RecoveryPhraseModal /></>;\n}\n","\"use strict\";\nimport { useEffect } from \"react\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useIsBlocked } from \"uniswap/src/features/trm/hooks\";\nexport default function useAccountRiskCheck(account) {\n  const dispatch = useAppDispatch();\n  const { isBlocked, isBlockedLoading } = useIsBlocked(account || void 0);\n  useEffect(() => {\n    if (!account) {\n      return;\n    }\n    if (isBlockedLoading) {\n      return;\n    }\n    if (isBlocked) {\n      dispatch(setOpenModal({ name: ModalName.BlockedAccount }));\n    }\n  }, [account, isBlockedLoading, isBlocked, dispatch]);\n}\n","\"use strict\";\nimport { ChainConnectivityWarning } from \"components/ChainConnectivityWarning\";\nimport ClaimPopup from \"components/Popups/ClaimPopup\";\nimport { PopupRenderer } from \"components/Popups/PopupRenderer\";\nimport TopLevelModals from \"components/TopLevelModals\";\nexport default function AppChrome() {\n  return <><PopupRenderer /><ClaimPopup /><ChainConnectivityWarning /><TopLevelModals /></>;\n}\n","\"use strict\";\nimport { DynamicConfigs, ExternallyConnectableExtensionConfigKey } from \"uniswap/src/features/gating/configs\";\nimport { useDynamicConfigValue } from \"uniswap/src/features/gating/hooks\";\nimport { TRUSTED_CHROME_EXTENSION_IDS } from \"utilities/src/environment/extensionId\";\nexport function useExternallyConnectableExtensionId() {\n  const extensionId = useDynamicConfigValue(\n    DynamicConfigs.ExternallyConnectableExtension,\n    ExternallyConnectableExtensionConfigKey.ExtensionId,\n    TRUSTED_CHROME_EXTENSION_IDS.prod\n  );\n  return extensionId;\n}\n","\"use strict\";\nimport { AlertTriangle } from \"react-feather\";\nimport styled from \"styled-components\";\nexport const CautionTriangle = styled(AlertTriangle)`\n  color: ${({ theme }) => theme.deprecated_accentWarning};\n`;\n","import { useQuery } from \"@tanstack/react-query\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { checkLpApproval } from \"uniswap/src/data/apiClients/tradingApi/TradingApiClient\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nexport function useCheckLpApprovalQuery({\n  params,\n  headers,\n  ...rest\n}) {\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.lpApproval, params];\n  return useQuery({\n    queryKey,\n    queryFn: async () => {\n      if (!params) {\n        throw { name: \"Params are required\" };\n      }\n      return await checkLpApproval(params, headers);\n    },\n    ...rest\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { createLpPosition } from \"uniswap/src/data/apiClients/tradingApi/TradingApiClient\";\nimport { getTradeSettingsDeadline } from \"uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nexport function useCreateLpPositionCalldataQuery({\n  params,\n  deadlineInMinutes,\n  ...rest\n}) {\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.createLp, params];\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes);\n  const paramsWithDeadline = { ...params, deadline };\n  return useQuery({\n    queryKey,\n    queryFn: async () => {\n      if (!params) {\n        throw { name: \"Params are required\" };\n      }\n      return await createLpPosition(paramsWithDeadline);\n    },\n    ...rest\n  });\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { increaseLpPosition } from \"uniswap/src/data/apiClients/tradingApi/TradingApiClient\";\nimport { getTradeSettingsDeadline } from \"uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nexport function useIncreaseLpPositionCalldataQuery({\n  params,\n  deadlineInMinutes,\n  ...rest\n}) {\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.increaseLp, params];\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes);\n  const paramsWithDeadline = { ...params, deadline };\n  return useQuery({\n    queryKey,\n    queryFn: async () => {\n      if (!params) {\n        throw { name: \"Params are required\" };\n      }\n      return await increaseLpPosition(paramsWithDeadline);\n    },\n    ...rest\n  });\n}\n"],"names":["Card","styled","Box","width","padding","$borderRadius","border","LightCard","theme","surface3","surface2","DarkGrayCard","OutlineCard","YellowCard","deprecated_yellow3","BlueCard","accent2","accent1","_cn3","_cn2","_cn","UnderCardComponent","children","div","className","DepositInputForm","token0","token1","currencyAmounts","currencyBalances","currencyAmountsUSDValue","formattedAmounts","onUserInput","onSetMax","deposit0Disabled","deposit1Disabled","token0UnderCardComponent","token1UnderCardComponent","amount0Loading","amount1Loading","autofocus","bufferPercentage","useNativeTokenPercentageBufferExperiment","focusedInputField","setFocusedInputField","useState","PositionField","TOKEN0","token0CurrencyInfo","useCurrencyInfo","token1CurrencyInfo","handleUserInput","field","newValue","handleOnSetMax","amount","CurrencyInputPanel","focus","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","currencyInfo","currencyField","CurrencyField","INPUT","currencyAmount","currencyBalance","nativeTokenPercentageBuffer","onSetExactAmount","onToggleIsFiatMode","usdValue","onSetPresetValue","value","onPressIn","isLoading","TOKEN1","py","LiquidityModalHeader","title","closeModal","goBack","t","useTranslation","CloseIconComponent","useMemo","ModalCloseIcon","testId","onClose","TouchableArea","onPress","BackArrow","color","size","Text","variant","flexGrow","textAlign","pr","SwapFormSettings","adjustTopAlignment","settings","Slippage","Deadline","defaultTitle","TokenInfo","currencyUSDAmount","isMigrating","currency","formatCurrencyAmount","useLocalizationContext","getCurrencyForProtocol","ProtocolVersion","V4","type","NumberType","TokenNonTx","getSymbolDisplayText","symbol","FiatStandard","CurrencyLogo","iconSizes","icon36","useIncreasePositionDependentAmountFallback","queryParams","isQueryEnabled","data","hasErrorResponse","setHasErrorResponse","error","useIncreaseLpPositionCalldataQuery","params","simulateTransaction","refetchInterval","ONE_SECOND_MS","retry","enabled","useEffect","dependentAmount","useCreatePositionDependentAmountFallback","useCreateLpPositionCalldataQuery","useUpdatedAmountsFromDependentAmount","exactField","dependentAmount0","CurrencyAmount","fromRawAmount","dependentAmount0USDValue","useUSDCValue","dependentAmount1","dependentAmount1USDValue","updatedFormattedAmounts","toExact","updatedUSDAmounts","updatedCurrencyAmounts","updatedDeposit0Disabled","greaterThan","updatedDeposit1Disabled","PercentInput","forwardRef","placeholder","maxDecimals","rest","ref","inputRegexStr","noDecimalRegexStr","inputRegex","RegExp","noDecimalRegex","locale","useCurrentLocale","valueFormattedWithLocale","value2","searchValue","replaceValue","localeUsesComma","toString","replace","formatValueWithLocale","StyledInput","minLength","maxLength","data-testid","onChange","event","nextUserInput","sanitizedInput","test","enforcer","target","inputMode","autoComplete","autoCorrect","pattern","spellCheck","displayName","MemoizedInput","React","StyledPercentInput","$width","NumericalInputFontStyle","CardBGImage","span","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","AutoColumn","disabled","Break","updateInterval","now","setNow","Date","useInterval","useCallback","BodyRow","neutral1","Link","ExternalLink","black","TitleRow","TitleText","Wrapper","surface1","CloseButton","tamaguiStyled","X","ClickableTamaguiStyle","icon20","ChainConnectivityWarning","defaultChainId","useEnabledChains","hide","setHide","isMonadDownFlag","useFeatureFlag","FeatureFlags","MonadTestnetDown","swapInputChainId","chainId","useUniswapContext","info","getChainInfo","label","isLandingPage","useIsPage","PageType","LANDING","waitMsBeforeWarning","blockWaitMsBeforeWarning","DEFAULT_MS_BEFORE_WARNING","machineTime","useMachineTimeMs","AVERAGE_L1_BLOCK_TIME_MS","blockTime","useCurrentBlockTimestamp","ms","warning","Boolean","Number","isMonadDown","UniverseChainId","MonadTestnet","CautionTriangle","Trans","i18nKey","onClick","Mainnet","values","network","statusPage","components","link","href","StyledClaimPopup","StyledClose","rotate","keyframes","UniToken","img","ClaimPopup","unclaimedAmount","account","useAccount","showClaimPopup","useShowClaimPopup","toggleShowClaimPopup","useToggleShowClaimPopup","showClaimModal","useModalIsOpen","ModalName","AddressClaim","toggleClaimModal","useToggleModal","userHasAvailableclaim","useUserHasAvailableClaim","address","useUserUnclaimedAmount","Flex","$platform-web","position","maxWidth","zIndex","animation","gap","stroke","style","justify","src","tokenLogo","ThemedText","DeprecatedWhite","marginTop","fontSize","fontWeight","toFixed","groupSeparator","paddingTop","role","aria-label","DeprecatedSubHeader","heart","Heart","Button","fill","POPUP_MAX_WIDTH","$padding","neutral2","RowNoFlex","AutoRow","ColumnContainer","PopupAlertTriangle","AlertTriangleFilled","PopupContainer","padded","row","borderWidth","borderRadius","borderColor","p","FailedNetworkSwitchPopup","chainInfo","useIsSupportedChainId","SubHeader","BodySmall","Descriptor","EllipsisStyle","ActivityPopupContent","activity","success","status","TransactionStatus","Confirmed","cancelled","pending","Pending","showPortfolioLogo","offchainOrderDetails","colors","useSporeColors","isBridgeActivity","outputChainId","PortfolioRow","left","Column","PortfolioLogo","currencies","accountAddress","otherAccount","customIcon","BridgeIcon","descriptor","LoaderV3","variable","TransactionPopupContent","hash","transaction","useTransaction","formatNumber","useFormatter","useQuery","getTransactionToActivityQueryOptions","window","open","getExplorerLink","ExplorerDataType","TRANSACTION","UniswapXOrderPopupContent","orderHash","order","useOrder","openOffchainActivityModal","useOpenOffchainActivityModal","getSignatureToActivityQueryOptions","inputLogo","logos","outputLogo","ToastRegularSimple","icon","text","onDismiss","shadowProps","useShadowPropsMedium","alignItems","justifyContent","mx","opacity","$sm","ml","PopupItem","content","supportedChainId","useSupportedChainId","PopupType","Transaction","Order","FailedSwitchNetwork","failedSwitchNetwork","SwitchNetwork","NetworkLogo","getSwitchNetworkTitle","action","Bridge","BridgeToast","inputChainId","SwapTab","Swap","Send","originChain","targetChain","lineHeight","Shuffle","PopupRenderer","popupRegistry","addListener","key","removeAfterMs","toast","removePopup","popKey","duration","DEFAULT_TXN_DISMISS_MS","onAutoClose","Toaster","pauseWhenPageIsHidden","expand","toastOptions","background","boxShadow","EYE_OFFSET_MULTIPLIER","isWeb","QREyes","x","y","fillColor","Svg","G","transform","Path","clipRule","d","fillRule","QREyeBG","QREyeWrapper","overlayColor","transformMatrixIntoCirclePath","matrix","cellSize","length","radius","path","forEach","i","column","j","cx","cy","QRCode","inputBackgroundColor","quietZone","ecl","_matrix","errorCorrectionLevel","arr","Array","prototype","slice","call","create","modules","sqrt","Math","reduce","rows","index","push","genMatrix","eyeSize","val","cornerPosition","height","viewBox","join","Defs","LinearGradient","gradientTransform","id","x1","x2","y1","y2","Stop","offset","stopColor","stopOpacity","Rect","rx","AddressQRCode","_QRCodeDisplay","encodedValue","containerBackgroundColor","QRCodeDisplay","memo","_cn8","_cn7","_cn6","_cn5","_cn4","UniwalletModal","uri","setUri","connection","useConnect","isWebIOS","isWebAndroid","isPending","listener","addEventListener","removeEventListener","close","reset","sendAnalyticsEvent","InterfaceEventName","UNIWALLET_CONNECT_MODAL_OPENED","Modal","name","UniWalletConnect","isModalOpen","CloseIconWithHover","Image","MobileAppLogo","emphasis","openDownloadApp","element","InterfaceElementName","UNISWAP_WALLET_MODAL_DOWNLOAD_BUTTON","GlobeFilled","AnimatedGlobeFilled","createIcon","getIcon","props","NetworkLogos","chains","isShowingModal","setIsShowingModal","openModal","chainPills","map","chain","logo","objectFit","source","icon16","borderRadii","rounded4","UniversalImage","allowLocalUri","ALL_NETWORKS_LOGO","resizeMode","UniversalImageResizeMode","Contain","QRCodeNetworkInfo","isInterface","alignSelf","zIndexes","default","mt","LearnMoreLink","textColor","textVariant","url","uniswapUrls","helpArticleUrls","supportedNetworks","useAddressColorProps","isDarkMode","useIsDarkMode","uniconColor","getUniconColors","avatar","loading","avatarLoading","unitag","validated","getValidAddress","ensAvatar","ensLoading","useENSAvatar","unitagLoading","useUnitagByAddress","unitagAvatar","metadata","useAvatar","avatarColors","useExtractedColors","hasAvatar","primary","passesContrast","base","detail","UNICON_SIZE","QR_CODE_SIZE","AddressQRModal","toggleModal","ReceiveCryptoQr","isOpen","openReceiveCryptoModal","useOpenModal","ReceiveCryptoModal","ENSName","useENSName","hasSecondaryIdentifier","username","addressColor","orderedChainIds","useOrderedChainIds","SUPPORTED_CHAIN_IDS","AddressQR","GetHelpHeader","AddressDisplay","enableCopyAddress","CopyHelper","iconSize","iconPosition","toCopy","shortenAddress","Identicon","numOfNetworks","Object","keys","getOutageBannerSessionStorageKey","OutageCloseButton","icon24","right","top","OutageBanner","version","hidden","setHidden","useTheme","versionName","toLowerCase","chainName","capitalize","getChainUrlParam","versionDescription","bottom","sticky","borderStyle","$lg","$xs","centered","m","mr","warning2","Globe","sessionStorage","setItem","MonadOutageBanner","Banners","manualOutage","pathname","useLocation","currentPage","getCurrentPageFromLocation","LpIncentives","useAtomValue","manualChainOutageAtom","isTestnetModeEnabled","pageChainId","chainUrlParam","split","find","isChainUrlParam","getChainIdFromChainUrlParam","currentPageHasManualOutage","showOutageBanner","getItem","InterfacePageName","EXPLORE_PAGE","TOKEN_DETAILS_PAGE","POOL_DETAILS_PAGE","TOKENS_PAGE","includes","ContentWrapper","ConnectedAccountBlocked","AccountBlocked","Function","Slash","DeprecatedLargeHeader","marginBottom","mb","DeprecatedMain","emailAddress","useQuickRouteChains","useDynamicConfigValue","DynamicConfigs","QuickRouteChains","QuickRouteChainsConfigKey","Chains","isUniverseChainIdArrayType","every","c","logger","Error","tags","file","function","extra","LayerRow","layerName","layerDefault","get","getLayerValue","useLayer","LayerProperties","acc","overrideValue","newPairs","getOverrideAdapter","overrideLayer","Row","handleBooleanChange","handleNumberChange","handleStringChange","paramRows","entries","valueElement","Switch","checked","onCheckedChange","Input","onChangeText","CenteredRow","flexDirection","FlagInfo","pl","flexShrink","FeatureFlagGroup","FlagVariantSelection","styledDep","select","Variant","option","FeatureFlagOption","flag","useFeatureFlagWithExposureLoggingDisabled","getFeatureFlagName","onFlagVariantChange","e","overrideGate","DynamicConfigDropdown","config","configKey","options","selected","parser","allowMultiple","handleSelectChange","selectedValues","from","selectedOptions","opt","overrideDynamicConfig","multiple","isArray","FeatureFlagModal","useCloseModal","borderBottomColor","borderBottomWidth","removeAllOverrides","UniswapX","IndicativeSwapQuotes","InstantTokenBalanceUpdate","UniswapXPriorityOrdersBase","UniswapXPriorityOrdersUnichain","Eip6936Enabled","LimitsFees","MigrateV3ToV4","PositionPageV2","MultipleRoutingOptions","NavigationHotkeys","ArbitrumDutchV3","TokenSelectorTrendingTokens","ServiceBasedSwapTransactionInfo","EmbeddedWallet","useExternallyConnectableExtensionId","TRUSTED_CHROME_EXTENSION_IDS","ExternallyConnectableExtension","ExternallyConnectableExtensionConfigKey","ExtensionId","SearchRevamp","Soneium","L2NFTs","QuickRouteMainnet","parseInt","NetworkRequests","NetworkRequestsConfigKey","BalanceMaxRefetchAttempts","UniswapXSyntheticQuote","UniswapXv2","TraceJsonRpc","AATestWeb","Layers","SwapPage","location","reload","PRIVACY_SHARING_OPT_OUT_STORAGE_KEY","Lock","AnimatedLock","PrivacyChoicesModal","PrivacyChoices","privacySharingOptOutAtom","atomWithStorage","privacySharingOptOut","setPrivacySharingOptOut","useAtom","isOptOutChecked","setIsOptOutChecked","closeAndResetModal","handleSave","Trace","logPress","CLOSE_BUTTON","privacyLink","Anchor","privacyPolicyUrl","textDecorationLine","Checkbox","StyledExternalCard","neutral3","StyledLinkOut","ArrowDown","PrivacyPolicyModal","node","useRef","PrivacyPolicy","SharedEventName","PAGE_VIEWED","modal","Legal","RowBetween","DeprecatedMediumHeader","EXTERNAL_APIS","description","draggable","onTouchMove","isMobileWeb","stopPropagation","Info","DeprecatedBody","ProviderOption","walletAddress","serviceProvider","setConnectedProvider","setErrorProvider","addFiatOnRampTransaction","useAddFiatOnRampTransaction","externalTransactionId","uuid","widgetQueryParams","externalSessionId","redirectUrl","UNISWAP_WEB_URL","useFiatOnRampAggregatorTransferWidgetQuery","FORQuoteItem","hoverIcon","widgetUrl","FiatOnRampTransactionStatus","INITIATED","forceFetched","addedAt","FiatOnRampTransactionType","TRANSFER","syncedWithBackend","provider","CopySheets","AnimatedCopySheets","QrCode","AnimatedQrCode","strokeWidth","strokeLinecap","strokeLinejoin","_cn10","_cn9","ActionIcon","Icon","IconButton","AccountCardItem","openAddressQRModal","Status","ensUsername","uniswapUsername","showAddressCopy","CopyToClipboard","onPressShowWalletQr","ChooseProvider","providers","useFiatOnRampAggregatorTransferServiceProvidersQuery","skip","isDisabled","serviceProviders","useCexTransferProviders","transferCryptoHelp","HeightAnimator","errorProvider","connectedProvider","setTimeout","ProviderConnectionError","onBack","selectedServiceProvider","ProviderConnectedView","debug","EyeSlash","AnimatedEyeSlash","exportSeedPhrase","keyPair","crypto","subtle","generateKey","modulusLength","publicExponent","Uint8Array","publicKeySpki","exportKey","publicKey","publicKeyBase64","Buffer","encryptedSeedPhrase","exportEncryptedSeedPhrase","decryptedSeedPhrase","decrypt","privateKey","TextDecoder","decode","StyledX","Seed","seed","revealed","Loader","RecoveryPhraseModal","seedPhrase","RecoveryPhrase","setSeedPhrase","isRevealed","setIsRevealed","handleClose","seedPhraseContentRef","useOnClickOutside","fetchSeedPhrase","retrievedSeedPhrase","ModalContent","subtext","header","LockedDocument","_","_2","handleReveal","minHeight","minWidth","UkDisclaimerModal","UkDisclaimer","InputPanel","flexColumnNoWrap","ContainerRow","critical","InputContainer","input","AddressInputPanel","useENS","nameOrAddress","handleInput","withoutSpaces","ADDRESS","autoCapitalize","rotateImg","UniTokenAnimated","AddressClaimModal","connectedAddress","typed","setTyped","parsedAddress","attempting","setAttempting","claimCallback","useClaimCallback","hasAvailableClaim","setHash","claimPending","useIsTransactionPending","claimConfirmed","wrappedOnDismiss","unclaimedUni","overflow","isAddress","then","hash2","catch","warn","View","alt","CustomLightSpinner","Circle","IncreaseLiquidityStep","IncreaseLiquidityStep2","DEFAULT_INCREASE_LIQUIDITY_STATE","step","IncreaseLiquidityContext","createContext","setStep","increaseLiquidityState","derivedIncreaseLiquidityInfo","setIncreaseLiquidityState","unwrapNativeCurrency","setUnwrapNativeCurrency","currentTransactionStep","setCurrentTransactionStep","useIncreaseLiquidityContext","useContext","IncreaseLiquidityContextProvider","positionInfo","useModalLiquidityInitialState","state","exactAmount","currency0","getCurrencyWithOptionalUnwrap","currency0Amount","shouldUnwrap","currency1","currency1Amount","depositInfoProps","V2","protocolVersion","pair","exactAmounts","tickLower","tickLowerStr","tickUpper","tickUpperStr","pool","tickCurrent","V3","UNSPECIFIED","depositInfo","useDepositInfo","useDerivedIncreaseLiquidityInfo","Provider","IncreaseLiquidityTxContext","IncreaseLiquidityTxContextProvider","increaseCalldata","customDeadline","customSlippageTolerance","useTransactionSettingsContext","hasIncreaseErrorResponse","setHasIncreaseErrorResponse","increaseLiquidityApprovalParams","protocol","getProtocolItems","getCurrencyAddressForTradingApi","amount0","quotient","amount1","increaseLiquidityTokenApprovals","approvalLoading","approvalError","refetch","approvalRefetch","useCheckLpApprovalQuery","staleTime","message","parseErrorMessageTitle","token0Approval","token1Approval","positionTokenApproval","permitData","gasFeeToken0Approval","gasFeeToken1Approval","gasFeePositionTokenApproval","token0Cancel","token1Cancel","gasFeeToken0USD","useUSDCurrencyAmountOfGasFee","gasFeeToken1USD","gasFeeLiquidityTokenUSD","liquidityToken","approvalsNeeded","increaseCalldataQueryParams","apiProtocolItems","independentAmount","dependentAmount2","independentToken","IndependentToken","TOKEN_0","TOKEN_1","tokenId","defaultDependentAmount","isNative","ZERO_ADDRESS","fee","feeTier","tickSpacing","hooks","v4hook","slippageTolerance","currency0Info","currencyId","currency1Info","token0FoTError","hasLPFoTTransferError","token1FoTError","fotErrorToken","TransactionStepType","IncreasePositionTransaction","IncreasePositionTransactionAsync","isCalldataLoading","calldataError","calldataRefetch","deadlineInMinutes","increase","gasFee","actualGasFee","InterfaceEventNameLocal","IncreaseLiquidityFailed","fallbackDependentAmount","calculatedGasFee","useTransactionGasFee","increaseGasFeeUsd","toSupportedChainId","increaseLiquidityTxContext","approveToken0Request","validateTransactionRequest","approveToken1Request","approvePositionTokenRequest","revokeToken0Request","revokeToken1Request","permit","validatePermit","unsigned","txRequest","LiquidityTransactionType","Increase","increasePositionRequestArgs","batchPermitData","txInfo","gasFeeEstimateUSD","total","add","getErrorMessageToDisplay","useIncreaseLiquidityTxContext","increaseContext","IncreaseLiquidityReview","dispatch","useDispatch","selectChain","useSelectChain","startChainId","useAccountMeta","trace","useTrace","formatPercent","steps","setSteps","poolId","currentPrice","usePositionCurrentPrice","poolTokenPercentage","useGetPoolTokenPercentage","newToken0Amount","additionalToken0Amount","newToken0AmountUSD","newToken1Amount","additionalToken1Amount","newToken1AmountUSD","onFailure","onSuccess","ProgressIndicator","currentStep","DetailLineItem","LineItem","Label","Value","baseCurrency","quoteCurrency","shape","FiatGasPrice","onIncreaseLiquidity","isValidTx","isValidLiquidityTxContext","AccountType","SignerMnemonic","liquiditySaga","actions","trigger","liquidityTxContext","setCurrentStep","analytics","getLPBaseAnalyticsProperties","currency0AmountUsd","currency1AmountUsd","expectedAmountBaseRaw","expectedAmountQuoteRaw","createPosition","LiquidityModalDetailRows","networkCost","IncreaseLiquidityForm","dataFetchingError","initialCurrency0Amount","initialCurrency1Amount","canUnwrap0","canUnwrapCurrency","canUnwrap1","nativeCurrency","nativeOnChain","UnwrapNativeCurrencyToggle","nativeWrappedSymbol","unwrapNativeCurrency2","requestLoading","LiquidityPositionInfo","prev","ErrorCallout","errorMessage","token","handleOnContinue","Review","IncreaseLiquidityModalInner","AddLiquidity","isDismissible","paddingX","paddingY","IncreaseLiquidityModal","TransactionSettingsContextProvider","settingKey","TransactionSettingKey","LP","autoSlippageTolerance","MIN_AUTO_SLIPPAGE_TOLERANCE","UnwrapUnderCard","ClaimFeeModal","token0Fees","token1Fees","canUnwrap","ClaimFee","feeValue0","feeValue1","fiatFeeValue0","token0FeesUsd","fiatFeeValue1","token1FeesUsd","useV3OrV4PositionDerivedInfo","currencyInfo0","currencyInfo1","useAppDispatch","claimLpFeesParams","expectedTokenOwed0RawAmount","expectedTokenOwed1RawAmount","collectAsWETH","calldataLoading","queryKey","ReactQueryCacheKey","TradingApi","tradingApiPaths","claimLpFees","queryFn","useClaimLpFeesCalldataQuery","CollectLiquidityFailed","validatedTxRequest","claim","Collect","onPressConfirm","helpRequestUrl","closeDataTestId","concatClassName","FiatTokenPrice","DecreaseLiquidityStep","DecreaseLiquidityStep2","RemoveLiquidityModalContext","percent","setPercent","percentInvalid","RemoveLiquidityModalContextProvider","ctx","useRemoveLiquidityModalContext","removeModalContext","useRemoveLiquidityTxAndGasInfo","v2LpTokenApproval","decreaseCalldata","decreaseGasFeeUsd","hasDecreaseErrorResponse","setHasDecreaseErrorResponse","v2LpTokenApprovalQueryParams","liquidityAmount","ProtocolItems","positionToken","positionAmount","multiply","JSBI","divide","v2ApprovalLoading","JSON","stringify","v2ApprovalGasFeeUSD","decreaseCalldataQueryParams","liquidityPercentageToDecrease","liquidity0","liquidity1","positionLiquidity","liquidity","isUserCommittedToDecrease","DecreasePositionTransaction","decreaseCalldataLoading","decreaseLp","deadline","getTradeSettingsDeadline","paramsWithDeadline","decreaseLpPosition","useDecreaseLpPositionCalldataQuery","DecreaseLiquidityFailed","estimatedGasFee","decrease","RemoveLiquidityTxContext","RemoveLiquidityTxContextProvider","removeLiquidityTxInfo","datadogEnabled","Datadog","logContextUpdate","decreaseLiquidityTxContext","token0Amount","token1Amount","currency0AmountToRemove","currency1AmountToRemove","Decrease","txContext","useRemoveLiquidityTxContext","removeContext","_cn11","RemoveLiquidityReview","currency0FiatAmount","currency1FiatAmount","removeLiquidityTxContext","unwrappedCurrency0AmountToRemove","unwrappedCurrency1AmountToRemove","currency0AmountToRemoveUSD","currency1AmountToRemoveUSD","newCurrency0Amount","subtract","newCurrency1Amount","newCurrency0AmountUSD","newCurrency1AmountUSD","currency0CurrencyInfo","currency1CurrencyInfo","onDecreaseLiquidity","closePosition","isValidPercentageInput","numValue","isNaN","RemoveLiquidityForm","hiddenObserver","useResizeObserver","unwrapUnderCard","NumericalInputWrapper","NumericalInputSymbolContainer","showPlaceholder","NumericalInputMimic","active","ClickablePill","$disabled","$active","customBorderColor","foregroundColor","px","RemoveLiquidityModalInner","RemoveLiquidity","modalContent","RemoveLiquidityModal","InfoLinkModal","showCloseButton","buttonText","linkText","linkUrl","onButtonPress","onAnalyticsEvent","openUniswapURL","openURL","TestnetModeModal","descriptionCopy","unsupported","TestnetMode","Wrench","TopLevelModals","media","useMedia","addressClaimOpen","addressClaimToggle","blockedAccountModalOpen","BlockedAccount","isAddLiquidityModalOpen","isRemoveLiquidityModalOpen","isClaimFeeModalOpen","isTestnetModeModalOpen","closeTestnetModeModal","isBlocked","isBlockedLoading","useIsBlocked","setOpenModal","useAccountRiskCheck","accountBlocked","isConnected","isDevEnv","isBetaEnv","sm","OffchainActivityModal","GetTheAppModal","AppChrome","prod","AlertTriangle","deprecated_accentWarning","headers","lpApproval","checkLpApproval","createLp","createLpPosition","increaseLp","increaseLpPosition"],"sourceRoot":""}