{"version":3,"file":"static/js/9441.94092aad.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable.tsx?1aa9","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/index.tsx?c2a7","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/TokenDescription.tsx?2890","webpack://@uniswap/interface/./src/components/NavBar/MobileBottomBar/TDPActionTabs.tsx?bdda","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/TokenDetailsHeader.tsx?f128","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/tables/TransactionsTable.tsx?8b57","hooks/useSwapTaxes.ts","components/Icons/CreditCard.tsx","components/Icons/Sell.tsx","webpack://@uniswap/interface/./src/components/NavBar/MobileBottomBar/TDPActionTabs.tsx?c78c","graphql/data/pools/usePoolsFromTokenAddress.ts","components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable.tsx","graphql/data/useTokenTransactions.ts","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/tables/TransactionsTable.tsx?7257","components/Tokens/TokenDetails/ActivitySection.tsx","components/Tokens/TokenDetails/BalanceSummary.tsx","components/Icons/Globe.tsx","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/TokenDescription.tsx?9926","../../../node_modules/react-feather/dist/icons/more-horizontal.js","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/TokenDetailsHeader.tsx?1d2f","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/index.tsx?b206","utils/getInitialLogoURL.ts","assets/svg/eye.svg","components/Tokens/TokenDetails/InvalidTokenDetails.tsx","pages/TokenDetails/utils.ts","pages/TokenDetails/index.tsx","shared-cloud/metatags.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { InterfaceEventName } from \"@uniswap/analytics-events\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { WETH_ADDRESS as getWethAddress } from \"@uniswap/universal-router-sdk\";\nimport { BIPS_BASE, ZERO_PERCENT } from \"constants/misc\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useContract } from \"hooks/useContract\";\nimport { useEffect, useState } from \"react\";\nimport FOT_DETECTOR_ABI from \"uniswap/src/abis/fee-on-transfer-detector.json\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { logger } from \"utilities/src/logger/logger\";\nfunction getFeeOnTransferAddress(chainId) {\n  switch (chainId) {\n    case UniverseChainId.Mainnet:\n      return \"0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f\";\n    case UniverseChainId.Optimism:\n      return \"0xa7c17505B43955A474fb6AFE61E093907a7567c9\";\n    case UniverseChainId.Bnb:\n      return \"0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB\";\n    case UniverseChainId.Polygon:\n      return \"0x92bCCCb6c8c199AAcA38408621E38Ab6dBfA00B5\";\n    case UniverseChainId.Base:\n      return \"0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB\";\n    case UniverseChainId.ArbitrumOne:\n      return \"0x64CF365CC5CCf5E64380bc05Acd5df7D0618c118\";\n    case UniverseChainId.Celo:\n      return \"0x3dfF0145E68a5880EAbE8F56b6Bc30C4AdCF3413\";\n    case UniverseChainId.Avalanche:\n      return \"0xBF2B9F6A6eCc4541b31ab2dCF8156D33644Ca3F3\";\n    default:\n      return void 0;\n  }\n}\nfunction useFeeOnTransferDetectorContract(chainId) {\n  const account = useAccount();\n  const contract = useContract(getFeeOnTransferAddress(chainId), FOT_DETECTOR_ABI, true, chainId);\n  useEffect(() => {\n    if (contract && account.address) {\n      sendAnalyticsEvent(InterfaceEventName.WALLET_PROVIDER_USED, {\n        source: \"useFeeOnTransferDetectorContract\",\n        contract: {\n          name: \"FeeOnTransferDetector\",\n          address: getFeeOnTransferAddress(chainId)\n        }\n      });\n    }\n  }, [account.address, chainId, contract]);\n  return contract;\n}\nconst AMOUNT_TO_BORROW = 1e4;\nconst FEE_CACHE = {};\nasync function getSwapTaxes(fotDetector, inputTokenAddress, outputTokenAddress, chainId) {\n  const addresses = [];\n  if (inputTokenAddress && FEE_CACHE[inputTokenAddress] === void 0) {\n    addresses.push(inputTokenAddress);\n  }\n  if (outputTokenAddress && FEE_CACHE[outputTokenAddress] === void 0) {\n    addresses.push(outputTokenAddress);\n  }\n  try {\n    if (addresses.length) {\n      const data = await fotDetector.callStatic.batchValidate(addresses, getWethAddress(chainId), AMOUNT_TO_BORROW);\n      addresses.forEach((address, index) => {\n        const { sellFeeBps, buyFeeBps } = data[index];\n        const sellTax = new Percent(sellFeeBps.toNumber(), BIPS_BASE);\n        const buyTax = new Percent(buyFeeBps.toNumber(), BIPS_BASE);\n        FEE_CACHE[address] = { sellTax, buyTax };\n      });\n    }\n  } catch (e) {\n    logger.warn(\"useSwapTaxes\", \"getSwapTaxes\", \"Failed to get swap taxes for token(s):\", addresses, e);\n  }\n  const inputTax = (inputTokenAddress ? FEE_CACHE[inputTokenAddress]?.sellTax : ZERO_PERCENT) ?? ZERO_PERCENT;\n  const outputTax = (outputTokenAddress ? FEE_CACHE[outputTokenAddress]?.buyTax : ZERO_PERCENT) ?? ZERO_PERCENT;\n  return { inputTax, outputTax };\n}\nexport function useSwapTaxes(inputTokenAddress, outputTokenAddress, tokenChainId) {\n  const account = useAccount();\n  const chainId = tokenChainId ?? account.chainId;\n  const fotDetector = useFeeOnTransferDetectorContract(chainId);\n  const [{ inputTax, outputTax }, setTaxes] = useState({ inputTax: ZERO_PERCENT, outputTax: ZERO_PERCENT });\n  useEffect(() => {\n    if (!fotDetector || !chainId) {\n      return;\n    }\n    getSwapTaxes(fotDetector, inputTokenAddress, outputTokenAddress, chainId).then(setTaxes);\n  }, [fotDetector, inputTokenAddress, outputTokenAddress, chainId]);\n  return { inputTax, outputTax };\n}\n","\"use strict\";\nexport function CreditCardIcon(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"none\" {...props}><path\n    d=\"M21 8V9.25H3V8C3 6 4 5 6 5H18C20 5 21 6 21 8ZM21 10.75V16C21 18 20 19 18 19H6C4 19 3 18 3 16V10.75H21ZM10.75 15C10.75 14.586 10.414 14.25 10 14.25H7C6.586 14.25 6.25 14.586 6.25 15C6.25 15.414 6.586 15.75 7 15.75H10C10.414 15.75 10.75 15.414 10.75 15Z\"\n    fill={props.fill}\n  /></svg>;\n}\n","\"use strict\";\nexport function Sell(props) {\n  return <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    d=\"M1.28516 11.9999C1.28516 6.08243 6.08194 1.28564 11.9994 1.28564C17.9169 1.28564 22.7137 6.08243 22.7137 11.9999C22.7137 17.9174 17.9169 22.7142 11.9994 22.7142C6.08194 22.7142 1.28516 17.9174 1.28516 11.9999ZM10.9816 7.49994C10.9816 6.9378 11.4373 6.48209 11.9995 6.48209C12.5616 6.48209 13.0173 6.9378 13.0173 7.49994V14.0426L15.7798 11.2802C16.1772 10.8827 16.8217 10.8827 17.2192 11.2802C17.6167 11.6777 17.6167 12.3222 17.2192 12.7197L12.7192 17.2197C12.3217 17.6172 11.6772 17.6172 11.2798 17.2197L6.77975 12.7197C6.38225 12.3222 6.38225 11.6777 6.77975 11.2802C7.17725 10.8827 7.82172 10.8827 8.21922 11.2802L10.9816 14.0426V7.49994Z\"\n    fill={props.fill || \"white\"}\n  /></svg>;\n}\n","\"use strict\";\nimport { CreditCardIcon } from \"components/Icons/CreditCard\";\nimport { Sell } from \"components/Icons/Sell\";\nimport { Send } from \"components/Icons/Send\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Flex, useMedia } from \"ui/src\";\nexport function TDPActionTabs() {\n  const { t } = useTranslation();\n  const { currencyChain, currencyChainId, address, tokenColor } = useTDPContext();\n  const switchChain = useSwitchChain();\n  const navigate = useNavigate();\n  const account = useAccount();\n  const chainUrlParam = currencyChain.toLowerCase();\n  const addressUrlParam = address === NATIVE_CHAIN_ID ? \"ETH\" : address;\n  const media = useMedia();\n  const showIcons = !media.xs;\n  const toActionLink = useCallback(\n    async (href) => {\n      if (account.chainId && account.chainId !== currencyChainId) {\n        await switchChain(currencyChainId);\n      }\n      navigate(href);\n    },\n    [account, currencyChainId, switchChain, navigate]\n  );\n  const tabs = [\n    {\n      label: t(\"common.buy.label\"),\n      href: `/swap/?chain=${chainUrlParam}&outputCurrency=${addressUrlParam}`,\n      icon: <CreditCardIcon fill=\"currentColor\" />\n    },\n    {\n      label: t(\"common.sell.label\"),\n      href: `/swap?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Sell fill=\"currentColor\" />\n    },\n    {\n      label: t(\"common.send.button\"),\n      href: `/send?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Send fill=\"currentColor\" />\n    }\n  ];\n  return <Flex row justifyContent=\"center\" gap=\"$spacing8\" width=\"100%\">{tabs.map((tab) => <Button\n    key={tab.label}\n    onPress={() => toActionLink(tab.href)}\n    backgroundColor={tokenColor}\n    icon={showIcons ? tab.icon : void 0}\n    size=\"medium\"\n  >{tab.label}</Button>)}</Flex>;\n}\n","\"use strict\";\nimport {\n  V2_BIPS,\n  calculate1DVolOverTvl,\n  calculateApr,\n  sortPools\n} from \"graphql/data/pools/useTopPools\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  useTopV2PairsQuery,\n  useTopV3PoolsQuery,\n  useTopV4PoolsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nconst DEFAULT_QUERY_SIZE = 20;\nexport function usePoolsFromTokenAddress(tokenAddress, sortState, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const chain = toGraphQLChain(chainId ?? defaultChainId);\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4,\n    fetchMore: fetchMoreV4\n  } = useTopV4PoolsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    }\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useTopV3PoolsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    }\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useTopV2PairsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    },\n    skip: !chainId\n  });\n  const loading = loadingV4 || loadingV3 || loadingV2;\n  const loadingMoreV4 = useRef(false);\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const sizeRef = useRef(DEFAULT_QUERY_SIZE);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV4.current || loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV4.current = true;\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      sizeRef.current += DEFAULT_QUERY_SIZE;\n      fetchMoreV4({\n        variables: {\n          cursor: dataV4?.topV4Pools?.[dataV4.topV4Pools.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            loadingMoreV4.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV4Pools: [...(prev.topV4Pools ?? []).slice(), ...(fetchMoreResult.topV4Pools ?? []).slice()]\n          };\n          loadingMoreV4.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.topV3Pools?.[dataV3.topV3Pools.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            loadingMoreV3.current = false;\n            return prev;\n          }\n          if (!loadingMoreV2.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV3Pools: [...(prev.topV3Pools ?? []).slice(), ...(fetchMoreResult.topV3Pools ?? []).slice()]\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.topV2Pairs?.[dataV2.topV2Pairs.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            loadingMoreV2.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV2Pairs: [...(prev.topV2Pairs ?? []).slice(), ...(fetchMoreResult.topV2Pairs ?? []).slice()]\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [dataV2?.topV2Pairs, dataV3?.topV3Pools, dataV4?.topV4Pools, fetchMoreV2, fetchMoreV3, fetchMoreV4]\n  );\n  return useMemo(() => {\n    const topV4Pools = dataV4?.topV4Pools?.map((pool) => {\n      return {\n        hash: pool.poolId,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, pool.feeTier),\n        feeTier: pool.feeTier,\n        protocolVersion: pool.protocolVersion,\n        hookAddress: pool.hook?.address\n      };\n    }) ?? [];\n    const topV3Pools = dataV3?.topV3Pools?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, pool.feeTier),\n        feeTier: pool.feeTier,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const topV2Pairs = dataV2?.topV2Pairs?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, V2_BIPS),\n        feeTier: V2_BIPS,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const pools = sortPools([...topV4Pools, ...topV3Pools, ...topV2Pairs], sortState).slice(0, sizeRef.current);\n    return { loading, errorV2, errorV3, errorV4, pools, loadMore };\n  }, [\n    dataV2?.topV2Pairs,\n    dataV3?.topV3Pools,\n    dataV4?.topV4Pools,\n    errorV2,\n    errorV3,\n    errorV4,\n    loadMore,\n    loading,\n    sortState\n  ]);\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { PoolsTable, sortAscendingAtom, sortMethodAtom } from \"components/Pools/PoolTable/PoolTable\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { usePoolsFromTokenAddress } from \"graphql/data/pools/usePoolsFromTokenAddress\";\nimport { PoolSortFields } from \"graphql/data/pools/useTopPools\";\nimport { OrderDirection } from \"graphql/data/util\";\nimport { useAtomValue, useResetAtom } from \"jotai/utils\";\nimport { useEffect, useMemo } from \"react\";\nimport { Flex } from \"ui/src\";\nconst HIDDEN_COLUMNS = [PoolSortFields.VolOverTvl, PoolSortFields.RewardApr];\nexport function TokenDetailsPoolsTable({\n  chainId,\n  referenceToken\n}) {\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const sortState = useMemo(\n    () => ({ sortBy: sortMethod, sortDirection: sortAscending ? OrderDirection.Asc : OrderDirection.Desc }),\n    [sortAscending, sortMethod]\n  );\n  const { pools, loading, errorV2, errorV3, loadMore } = usePoolsFromTokenAddress(\n    referenceToken.address,\n    sortState,\n    chainId\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Pools for token ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !pools.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const resetSortMethod = useResetAtom(sortMethodAtom);\n  const resetSortAscending = useResetAtom(sortAscendingAtom);\n  useEffect(() => {\n    resetSortMethod();\n    resetSortAscending();\n  }, [resetSortAscending, resetSortMethod]);\n  return <Flex data-testid={`tdp-pools-table-${referenceToken.address.toLowerCase()}`}><PoolsTable\n    pools={pools}\n    loading={allDataStillLoading}\n    error={combinedError}\n    maxHeight={600}\n    hiddenColumns={HIDDEN_COLUMNS}\n    loadMore={loadMore}\n    forcePinning\n  /></Flex>;\n}\n","\"use strict\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  Chain,\n  PoolTransactionType,\n  useV2TokenTransactionsQuery,\n  useV3TokenTransactionsQuery,\n  useV4TokenTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nexport var TokenTransactionType = /* @__PURE__ */ ((TokenTransactionType2) => {\n  TokenTransactionType2[\"BUY\"] = \"Buy\";\n  TokenTransactionType2[\"SELL\"] = \"Sell\";\n  return TokenTransactionType2;\n})(TokenTransactionType || {});\nconst TokenTransactionDefaultQuerySize = 25;\nexport function useTokenTransactions(address, chainId, filter = [\"Buy\" /* BUY */, \"Sell\" /* SELL */]) {\n  const { defaultChainId } = useEnabledChains();\n  const {\n    data: dataV4,\n    loading: loadingV4,\n    fetchMore: fetchMoreV4,\n    error: errorV4\n  } = useV4TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      chain: toGraphQLChain(chainId ?? defaultChainId),\n      first: TokenTransactionDefaultQuerySize\n    }\n  });\n  const {\n    data: dataV3,\n    loading: loadingV3,\n    fetchMore: fetchMoreV3,\n    error: errorV3\n  } = useV3TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      chain: toGraphQLChain(chainId ?? defaultChainId),\n      first: TokenTransactionDefaultQuerySize\n    }\n  });\n  const {\n    data: dataV2,\n    loading: loadingV2,\n    error: errorV2,\n    fetchMore: fetchMoreV2\n  } = useV2TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      first: TokenTransactionDefaultQuerySize,\n      chain: toGraphQLChain(chainId)\n    }\n  });\n  const loadingMoreV4 = useRef(false);\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const querySizeRef = useRef(TokenTransactionDefaultQuerySize);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV4.current || loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV4.current = true;\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      querySizeRef.current += TokenTransactionDefaultQuerySize;\n      fetchMoreV4({\n        variables: {\n          cursor: dataV4?.token?.v4Transactions?.[dataV4.token?.v4Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMoreV4.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v4Transactions: [...prev.token?.v4Transactions ?? [], ...fetchMoreResult.token?.v4Transactions ?? []]\n            }\n          };\n          loadingMoreV4.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.token?.v3Transactions?.[dataV3.token?.v3Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMoreV3.current = false;\n            return prev;\n          }\n          if (!loadingMoreV2.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v3Transactions: [...prev.token?.v3Transactions ?? [], ...fetchMoreResult.token?.v3Transactions ?? []]\n            }\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.token?.v2Transactions?.[dataV2.token?.v2Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMoreV2.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v2Transactions: [...prev.token?.v2Transactions ?? [], ...fetchMoreResult.token?.v2Transactions ?? []]\n            }\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [\n      dataV2?.token?.v2Transactions,\n      dataV3?.token?.v3Transactions,\n      dataV4?.token?.v4Transactions,\n      fetchMoreV2,\n      fetchMoreV3,\n      fetchMoreV4\n    ]\n  );\n  const filterTransaction = useCallback(\n    (tx) => {\n      if (!tx) {\n        return false;\n      }\n      const tokenBeingSold = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n      const isSell = tokenBeingSold.address?.toLowerCase() === address.toLowerCase();\n      return tx.type === PoolTransactionType.Swap && filter.includes(isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */);\n    },\n    [address, filter]\n  );\n  const transactions = useMemo(\n    () => [\n      ...dataV4?.token?.v4Transactions ?? [],\n      ...dataV3?.token?.v3Transactions ?? [],\n      ...dataV2?.token?.v2Transactions ?? []\n    ].filter(filterTransaction).sort(\n      (a, b) => a?.timestamp && b?.timestamp ? b.timestamp - a.timestamp : a?.timestamp === null ? -1 : 1\n    ).slice(0, querySizeRef.current),\n    [dataV2?.token?.v2Transactions, dataV3?.token?.v3Transactions, dataV4?.token?.v4Transactions, filterTransaction]\n  );\n  return useMemo(\n    () => ({\n      transactions,\n      loading: loadingV4 || loadingV3 || loadingV2,\n      loadMore,\n      errorV2,\n      errorV3,\n      errorV4\n    }),\n    [transactions, loadingV4, loadingV3, loadingV2, loadMore, errorV2, errorV3, errorV4]\n  );\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport {\n  EllipsisText,\n  FilterHeaderRow,\n  HeaderCell,\n  HeaderSortText,\n  StyledExternalLink,\n  TableText,\n  TimestampCell,\n  TokenLinkCell\n} from \"components/Table/styled\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { TokenTransactionType, useTokenTransactions } from \"graphql/data/useTokenTransactions\";\nimport { unwrapToken } from \"graphql/data/util\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, Text, styled, useMedia } from \"ui/src\";\nimport { useAppFiatCurrency } from \"uniswap/src/features/fiatCurrency/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst TableWrapper = styled(Flex, {\n  position: \"relative\",\n  minHeight: 158\n});\nexport function TransactionsTable({ chainId, referenceToken }) {\n  const activeLocalCurrency = useAppFiatCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([TokenTransactionType.BUY, TokenTransactionType.SELL]);\n  const { transactions, loading, loadMore, errorV2, errorV3 } = useTokenTransactions(\n    referenceToken.address,\n    chainId,\n    filter\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Transactions for token: ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !transactions.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const unwrappedReferenceToken = unwrapToken(chainId, referenceToken);\n  const data = useMemo(\n    () => transactions.map((transaction) => {\n      const swapLeg0 = {\n        address: transaction.token0.address,\n        symbol: transaction.token0.symbol,\n        amount: parseFloat(transaction.token0Quantity),\n        token: transaction.token0\n      };\n      const swapLeg1 = {\n        address: transaction.token1.address,\n        symbol: transaction.token1.symbol,\n        amount: parseFloat(transaction.token1Quantity),\n        token: transaction.token1\n      };\n      const token0IsBeingSold = parseFloat(transaction.token0Quantity) > 0;\n      return {\n        hash: transaction.hash,\n        timestamp: transaction.timestamp,\n        input: token0IsBeingSold ? swapLeg0 : swapLeg1,\n        output: token0IsBeingSold ? swapLeg1 : swapLeg0,\n        usdValue: transaction.usdValue.value,\n        makerAddress: transaction.account\n      };\n    }),\n    [transactions]\n  );\n  const media = useMedia();\n  const showLoadingSkeleton = allDataStillLoading || !!combinedError;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        maxSize: 80,\n        header: () => <HeaderCell justifyContent=\"flex-start\" grow><Flex row gap=\"$gap4\" alignItems=\"center\"><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.time\" /></Text></Flex></HeaderCell>,\n        cell: (row) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\" grow><TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chainId, row.getValue?.().hash, ExplorerDataType.TRANSACTION)}\n        /></Cell>\n      }),\n      columnHelper.accessor((row) => row.output.address, {\n        id: \"swap-type\",\n        maxSize: 80,\n        header: () => <HeaderCell justifyContent=\"flex-start\" grow><FilterHeaderRow\n          clickable={filterModalIsOpen}\n          onPress={filterModalIsOpen ? void 0 : toggleFilterModal}\n          alignItems=\"center\"\n          ref={filterAnchorRef}\n        ><Filter\n          allFilters={Object.values(TokenTransactionType)}\n          activeFilter={filter}\n          setFilters={setFilters}\n          isOpen={filterModalIsOpen}\n          toggleFilterModal={toggleFilterModal}\n          anchorRef={filterAnchorRef}\n        /><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.type.label\" /></Text></FilterHeaderRow></HeaderCell>,\n        cell: (outputTokenAddress) => {\n          const isBuy = String(outputTokenAddress.getValue?.()).toLowerCase() === referenceToken.address.toLowerCase();\n          return <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\" grow><TableText color={isBuy ? \"$statusSuccess\" : \"$statusCritical\"}>{isBuy ? <Trans i18nKey=\"common.buy.label\" /> : <Trans i18nKey=\"common.sell.label\" />}</TableText></Cell>;\n        }\n      }),\n      columnHelper.accessor(\n        (row) => row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.input.amount : row.output.amount,\n        {\n          id: \"reference-amount\",\n          maxSize: 80,\n          header: () => <HeaderCell justifyContent=\"flex-end\"><Text variant=\"body3\" color=\"$neutral2\">\r\n                ${unwrappedReferenceToken.symbol}</Text></HeaderCell>,\n          cell: (inputTokenAmount) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\"><TableText>{formatNumber({\n            input: Math.abs(inputTokenAmount.getValue?.()) || 0\n          })}</TableText></Cell>\n        }\n      ),\n      columnHelper.accessor(\n        (row) => {\n          const nonReferenceSwapLeg = row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.output : row.input;\n          return <Flex row gap=\"$gap8\" justifyContent=\"flex-end\" alignItems=\"center\"><EllipsisText maxWidth={75}>{formatNumber({\n            input: Math.abs(nonReferenceSwapLeg.amount) || 0,\n            type: NumberType.TokenQuantityStats\n          })}</EllipsisText><TokenLinkCell token={nonReferenceSwapLeg.token} /></Flex>;\n        },\n        {\n          id: \"non-reference-amount\",\n          maxSize: 160,\n          header: () => <HeaderCell justifyContent=\"flex-end\"><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.for\" /></Text></HeaderCell>,\n          cell: (swapOutput) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\"><TableText>{swapOutput.getValue?.()}</TableText></Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.usdValue, {\n        id: \"fiat-value\",\n        maxSize: 100,\n        header: () => <HeaderCell justifyContent=\"flex-end\"><Flex row gap=\"$gap4\" justifyContent=\"flex-end\"><HeaderSortText>{activeLocalCurrency}</HeaderSortText></Flex></HeaderCell>,\n        cell: (fiat) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\"><TableText>{formatFiatPrice({ price: fiat.getValue?.() })}</TableText></Cell>\n      }),\n      columnHelper.accessor((row) => row.makerAddress, {\n        id: \"maker-address\",\n        maxSize: 130,\n        header: () => <HeaderCell justifyContent=\"flex-end\"><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.wallet.label\" /></Text></HeaderCell>,\n        cell: (makerAddress) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\"><StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}><TableText>{shortenAddress(makerAddress.getValue?.())}</TableText></StyledExternalLink></Cell>\n      })\n    ];\n  }, [\n    showLoadingSkeleton,\n    chainId,\n    filterModalIsOpen,\n    filter,\n    referenceToken.address,\n    unwrappedReferenceToken.symbol,\n    formatNumber,\n    activeLocalCurrency,\n    formatFiatPrice\n  ]);\n  return <TableWrapper><Table\n    columns={columns}\n    data={data}\n    loading={allDataStillLoading}\n    error={combinedError}\n    loadMore={loadMore}\n    maxHeight={600}\n    defaultPinnedColumns={[\"timestamp\", \"swap-type\"]}\n    forcePinning={media.xxl}\n  /></TableWrapper>;\n}\n","\"use strict\";\nimport { TokenDetailsPoolsTable } from \"components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable\";\nimport { TransactionsTable } from \"components/Tokens/TokenDetails/tables/TransactionsTable\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, styled, Text } from \"ui/src\";\nconst Container = styled(Flex, {\n  width: \"100%\"\n});\nconst Tab = styled(Text, {\n  color: \"$neutral1\",\n  variant: \"heading3\",\n  ...ClickableTamaguiStyle\n});\nvar ActivityTab = /* @__PURE__ */ ((ActivityTab2) => {\n  ActivityTab2[ActivityTab2[\"Txs\"] = 0] = \"Txs\";\n  ActivityTab2[ActivityTab2[\"Pools\"] = 1] = \"Pools\";\n  return ActivityTab2;\n})(ActivityTab || {});\nexport function ActivitySection() {\n  const { wrapped: referenceToken, chainId } = useTDPContext().currency;\n  const [activityInView, setActivityInView] = useState(0 /* Txs */);\n  if (!referenceToken) {\n    return null;\n  }\n  return <Container data-testid=\"token-details-activity-section\"><Flex row gap=\"$spacing24\" mb=\"$spacing24\" id=\"activity-header\"><Tab\n    color={activityInView === 0 /* Txs */ ? \"$neutral1\" : \"$neutral2\"}\n    onPress={() => setActivityInView(0 /* Txs */)}\n  ><Trans i18nKey=\"common.transactions\" /></Tab><Tab\n    color={activityInView === 1 /* Pools */ ? \"$neutral1\" : \"$neutral2\"}\n    onPress={() => setActivityInView(1 /* Pools */)}\n  ><Trans i18nKey=\"common.pools\" /></Tab></Flex>{activityInView === 0 /* Txs */ && <TransactionsTable chainId={chainId} referenceToken={referenceToken} />}{activityInView === 1 /* Pools */ && <TokenDetailsPoolsTable chainId={chainId} referenceToken={referenceToken} />}</Container>;\n}\n","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { getTokenDetailsURL, gqlToCurrency, supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { Chain } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst BalancesCard = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  height: fit-content;\n  width: 100%;\n\n  @media screen and (min-width: ${breakpoints.lg}px) {\n    display: flex;\n  }\n`;\nconst BalanceSection = styled.div`\n  height: fit-content;\n  width: 100%;\n`;\nconst BalanceRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-top: 12px;\n`;\nconst BalanceItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BalanceAmountsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-left: 12px;\n  ${({ $alignLeft }) => $alignLeft && `\n    justify-content: start;\n    gap: 8px;\n  `}\n`;\nconst Balance = ({\n  currency,\n  chainId = UniverseChainId.Mainnet,\n  gqlBalance,\n  alignLeft = false,\n  onClick\n}) => {\n  const { formatNumber } = useFormatter();\n  const currencies = useMemo(() => [currency], [currency]);\n  const formattedGqlBalance = formatNumber({\n    input: gqlBalance?.quantity,\n    type: NumberType.TokenNonTx\n  });\n  const formattedUsdGqlValue = formatNumber({\n    input: gqlBalance?.denominatedValue?.value,\n    type: NumberType.PortfolioBalance\n  });\n  return <BalanceRow onClick={onClick}><PortfolioLogo\n    currencies={currencies}\n    chainId={chainId}\n    images={[gqlBalance?.token?.project?.logoUrl]}\n    size={32}\n  /><BalanceAmountsContainer $alignLeft={alignLeft}><BalanceItem><ThemedText.BodyPrimary>{formattedUsdGqlValue}</ThemedText.BodyPrimary></BalanceItem><BalanceItem><ThemedText.BodySecondary>{formattedGqlBalance}</ThemedText.BodySecondary></BalanceItem></BalanceAmountsContainer></BalanceRow>;\n};\nexport const PageChainBalanceSummary = ({\n  pageChainBalance,\n  alignLeft = false\n}) => {\n  if (!pageChainBalance || !pageChainBalance.token) {\n    return null;\n  }\n  const currency = gqlToCurrency(pageChainBalance.token);\n  return <BalanceSection><ThemedText.HeadlineSmall color=\"neutral1\"><Trans i18nKey=\"tdp.balanceSummary.title\" /></ThemedText.HeadlineSmall><Balance currency={currency} chainId={currency?.chainId} gqlBalance={pageChainBalance} alignLeft={alignLeft} /></BalanceSection>;\n};\nconst OtherChainsBalanceSummary = ({\n  otherChainBalances,\n  hasPageChainBalance\n}) => {\n  const navigate = useNavigate();\n  const { defaultChainId } = useEnabledChains();\n  if (!otherChainBalances.length) {\n    return null;\n  }\n  return <BalanceSection>{hasPageChainBalance ? <ThemedText.SubHeaderSmall><Trans i18nKey=\"tdp.balanceSummary.otherNetworks\">On other networks</Trans></ThemedText.SubHeaderSmall> : <ThemedText.HeadlineSmall><Trans i18nKey=\"tdp.balanceSummary.otherNetworksBalance\">Balance on other networks</Trans></ThemedText.HeadlineSmall>}{otherChainBalances.map((balance) => {\n    const currency = balance.token && gqlToCurrency(balance.token);\n    const chainId = (balance.token && supportedChainIdFromGQLChain(balance.token.chain)) ?? defaultChainId;\n    return <Balance\n      key={balance.id}\n      currency={currency}\n      chainId={chainId}\n      gqlBalance={balance}\n      onClick={() => navigate(\n        getTokenDetailsURL({\n          address: balance.token?.address,\n          chain: balance.token?.chain ?? Chain.Ethereum\n        })\n      )}\n    />;\n  })}</BalanceSection>;\n};\nexport default function BalanceSummary() {\n  const account = useAccount();\n  const { currencyChain, multiChainMap } = useTDPContext();\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const otherChainBalances = [];\n  for (const [key, value] of Object.entries(multiChainMap)) {\n    if (key !== currencyChain && value?.balance !== void 0) {\n      otherChainBalances.push(value.balance);\n    }\n  }\n  const hasBalances = pageChainBalance || Boolean(otherChainBalances.length);\n  if (!account.isConnected || !hasBalances) {\n    return null;\n  }\n  return <BalancesCard><PageChainBalanceSummary pageChainBalance={pageChainBalance} /><OtherChainsBalanceSummary otherChainBalances={otherChainBalances} hasPageChainBalance={!!pageChainBalance} /></BalancesCard>;\n}\n","\"use strict\";\nexport const Globe = (props) => <svg\n  width=\"18\"\n  height=\"18\"\n  viewBox=\"0 0 18 18\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  stroke=\"transparent\"\n  {...props}\n><path\n  d=\"M5.12245 9.5625C5.23495 11.8725 6.01495 14.2275 7.37245 16.32C4.19245 15.615 1.76996 12.8925 1.52246 9.5625H5.12245ZM7.37245 1.67999C4.19245 2.38499 1.76996 5.1075 1.52246 8.4375H5.12245C5.23495 6.1275 6.01495 3.77249 7.37245 1.67999ZM9.14997 1.5H8.84995L8.62496 1.82249C7.19996 3.84749 6.36745 6.1725 6.24745 8.4375H11.7525C11.6325 6.1725 10.8 3.84749 9.37496 1.82249L9.14997 1.5ZM6.24745 9.5625C6.36745 11.8275 7.19996 14.1525 8.62496 16.1775L8.84995 16.5H9.14997L9.37496 16.1775C10.8 14.1525 11.6325 11.8275 11.7525 9.5625H6.24745ZM12.8775 9.5625C12.765 11.8725 11.985 14.2275 10.6275 16.32C13.8075 15.615 16.23 12.8925 16.4775 9.5625H12.8775ZM16.4775 8.4375C16.23 5.1075 13.8075 2.38499 10.6275 1.67999C11.985 3.77249 12.765 6.1275 12.8775 8.4375H16.4775Z\"\n  fill={props.fill ?? \"#607BEE\"}\n/></svg>;\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport { NoInfoAvailable, truncateDescription } from \"components/Tokens/TokenDetails/shared\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { FOTTooltipContent } from \"components/swap/SwapLineItem\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useSwapTaxes } from \"hooks/useSwapTaxes\";\nimport { useTheme } from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useReducer } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { ClickableTamaguiStyle, EllipsisTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Paragraph, Text, styled } from \"ui/src\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst TokenInfoSection = styled(Flex, {\n  gap: \"$gap16\",\n  width: \"100%\",\n  $xl: {\n    gap: 24\n  }\n});\nconst TokenNameRow = styled(Flex, {\n  row: true,\n  gap: \"$gap8\",\n  width: \"100%\"\n});\nconst TokenButtonRow = styled(TokenNameRow, {\n  flexWrap: \"wrap\"\n});\nconst TokenInfoButton = styled(Text, {\n  variant: \"buttonLabel3\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  gap: \"$gap4\",\n  py: \"$padding8\",\n  px: \"$padding12\",\n  borderRadius: \"$rounded20\",\n  backgroundColor: \"$surface2\",\n  width: \"max-content\",\n  ...ClickableTamaguiStyle,\n  color: \"$neutral1\"\n});\nconst TokenDescriptionContainer = styled(Text, {\n  variant: \"body1\",\n  color: \"$neutral1\",\n  maxWidth: \"100%\",\n  maxHeight: \"fit-content\",\n  ...EllipsisTamaguiStyle,\n  whiteSpace: \"pre-wrap\",\n  lineHeight: 24\n});\nconst DescriptionVisibilityWrapper = styled(Paragraph, {\n  fontWeight: \"$book\",\n  variants: {\n    visible: {\n      true: {\n        display: \"inline\"\n      },\n      false: {\n        display: \"none\"\n      }\n    }\n  }\n});\nconst TRUNCATE_CHARACTER_COUNT = 200;\nexport function TokenDescription() {\n  const { t } = useTranslation();\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { neutral1 } = useTheme();\n  const { description, homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const [isDescriptionTruncated, toggleIsDescriptionTruncated] = useReducer((x) => !x, true);\n  const truncatedDescription = truncateDescription(description ?? \"\", TRUNCATE_CHARACTER_COUNT);\n  const shouldTruncate = !!description && description.length > TRUNCATE_CHARACTER_COUNT;\n  const showTruncatedDescription = shouldTruncate && isDescriptionTruncated;\n  const { inputTax: sellFee, outputTax: buyFee } = useSwapTaxes(address, address, currency.chainId);\n  const { formatPercent } = useFormatter();\n  const { sellFeeString, buyFeeString } = {\n    sellFeeString: formatPercent(sellFee),\n    buyFeeString: formatPercent(buyFee)\n  };\n  const hasFee = Boolean(parseFloat(sellFeeString)) || Boolean(parseFloat(buyFee.toFixed(2)));\n  const sameFee = sellFeeString === buyFeeString;\n  return <TokenInfoSection data-testid=\"token-details-info-section\"><Text variant=\"heading3\"><Trans i18nKey=\"common.info.label\" /></Text><TokenButtonRow data-testid=\"token-details-info-links\">{!currency.isNative && <MouseoverTooltip\n    disabled\n    placement=\"bottom\"\n    size={TooltipSize.Max}\n    forceShow={isCopied}\n    text={t(\"common.copied\")}\n  ><TokenInfoButton onPress={copy}><Copy width=\"18px\" height=\"18px\" color={neutral1} />{shortenAddress(currency.address)}</TokenInfoButton></MouseoverTooltip>}<ExternalLink href={explorerUrl}><TokenInfoButton><EtherscanLogo width=\"18px\" height=\"18px\" fill={neutral1} />{currency.chainId === UniverseChainId.Mainnet ? <Trans i18nKey=\"common.etherscan\" /> : <Trans i18nKey=\"common.explorer\" />}</TokenInfoButton></ExternalLink>{homepageUrl && <ExternalLink href={homepageUrl}><TokenInfoButton><Globe width=\"18px\" height=\"18px\" fill={neutral1} /><Trans i18nKey=\"common.website\" /></TokenInfoButton></ExternalLink>}{twitterName && <ExternalLink href={`https://x.com/${twitterName}`}><TokenInfoButton><TwitterXLogo width=\"18px\" height=\"18px\" fill={neutral1} /><Trans i18nKey=\"common.twitter\" /></TokenInfoButton></ExternalLink>}</TokenButtonRow><TokenDescriptionContainer>{!description && <NoInfoAvailable><Trans i18nKey=\"tdp.noInfoAvailable\" /></NoInfoAvailable>}{description && <><DescriptionVisibilityWrapper data-testid=\"token-description-full\" visible={!showTruncatedDescription}>{description}</DescriptionVisibilityWrapper><DescriptionVisibilityWrapper data-testid=\"token-description-truncated\" visible={showTruncatedDescription}>{truncatedDescription}</DescriptionVisibilityWrapper></>}{shouldTruncate && <Text\n    display=\"flex\"\n    color=\"neutral2\"\n    fontWeight=\"485\"\n    variant=\"body2\"\n    pt=\"0.5em\"\n    $sm={{ mb: \"2rem\" }}\n    onPress={toggleIsDescriptionTruncated}\n    {...ClickableTamaguiStyle}\n    data-testid=\"token-description-show-more-button\"\n  >{isDescriptionTruncated ? <Trans i18nKey=\"common.showMore.button\" /> : <Trans i18nKey=\"common.hide.button\" />}</Text>}</TokenDescriptionContainer>{hasFee && <MouseoverTooltip\n    placement=\"left\"\n    size={TooltipSize.Small}\n    text={<ThemedText.Caption color=\"neutral2\"><FOTTooltipContent /></ThemedText.Caption>}\n  ><Flex gap=\"$gap8\">{sameFee ? <ThemedText.BodyPrimary>{currency.symbol}&nbsp;\r\n                <Trans i18nKey=\"token.fee.label\" />\r\n                :&nbsp;{sellFeeString}</ThemedText.BodyPrimary> : <><ThemedText.BodyPrimary>{currency.symbol}&nbsp;\r\n                  <Trans i18nKey=\"token.fee.buy.label\" />\r\n                  :&nbsp;{buyFeeString}</ThemedText.BodyPrimary>{\" \"}<ThemedText.BodyPrimary>{currency.symbol}&nbsp;\r\n                  <Trans i18nKey=\"token.fee.sell.label\" />\r\n                  :&nbsp;{sellFeeString}</ThemedText.BodyPrimary>{\" \"}</>}</Flex></MouseoverTooltip>}</TokenInfoSection>;\n}\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var MoreHorizontal=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"circle\",{cx:\"12\",cy:\"12\",r:\"1\"}),React.createElement(\"circle\",{cx:\"19\",cy:\"12\",r:\"1\"}),React.createElement(\"circle\",{cx:\"5\",cy:\"12\",r:\"1\"}))}));MoreHorizontal.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},MoreHorizontal.displayName=\"MoreHorizontal\";export default MoreHorizontal;","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { Share as ShareIcon } from \"components/Icons/Share\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport ShareButton, { openShareTweetWindow } from \"components/Tokens/TokenDetails/ShareButton\";\nimport { ActionButtonStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo, useState } from \"react\";\nimport { Link, MoreHorizontal } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { EllipsisTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, TouchableArea, WebBottomSheet, useMedia, useSporeColors } from \"ui/src\";\nimport { Check } from \"ui/src/components/icons/Check\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nexport const TokenDetailsHeader = () => {\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const media = useMedia();\n  const isMobileScreen = media.sm;\n  const [mobileSheetOpen, toggleMobileSheet] = useState(false);\n  const tokenSymbolName = currency.symbol ?? t(\"tdp.symbolNotFound\");\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const { homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const twitterUrl = twitterName && `https://x.com/${twitterName}`;\n  const [searchParams] = useSearchParams();\n  const utmTag = `${searchParams.size > 0 ? \"&\" : \"?\"}utm_source=share-tdp&utm_medium=${isMobileScreen ? \"mobile\" : \"web\"}`;\n  const currentLocation = window.location.href + utmTag;\n  const twitterShareName = currency.name && currency.symbol ? `${currency.name} (${currency.symbol})` : currency?.name || currency?.symbol || \"\";\n  const [isCopied, setCopied] = useCopyClipboard();\n  const HeaderActions = useMemo(() => {\n    return [\n      {\n        title: t(\"common.explorer\"),\n        icon: currency.chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(explorerUrl, \"_blank\"),\n        show: !!explorerUrl\n      },\n      {\n        title: t(\"common.website\"),\n        icon: <Globe width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(homepageUrl, \"_blank\"),\n        show: !!homepageUrl\n      },\n      {\n        title: t(\"common.twitter\"),\n        icon: <TwitterXLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(twitterUrl, \"_blank\"),\n        show: !!twitterUrl\n      },\n      {\n        title: isCopied ? t(\"common.copied\") : t(\"common.copyLink.button\"),\n        icon: isCopied ? <Check size={16} p={1} color={colors.statusSuccess.val} /> : <Link size={18} color={colors.neutral1.val} />,\n        onPress: () => setCopied(currentLocation),\n        show: isMobileScreen\n      },\n      {\n        title: t(\"common.share.shareToTwitter\"),\n        icon: <ShareIcon fill={colors.neutral1.val} width={18} height={18} />,\n        onPress: () => openShareTweetWindow(twitterShareName),\n        show: isMobileScreen\n      }\n    ];\n  }, [\n    t,\n    currency.chainId,\n    colors.neutral1.val,\n    colors.statusSuccess.val,\n    explorerUrl,\n    homepageUrl,\n    twitterUrl,\n    isCopied,\n    isMobileScreen,\n    setCopied,\n    currentLocation,\n    twitterShareName\n  ]);\n  return <Flex\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    width=\"100%\"\n    mb=\"$spacing20\"\n    $sm={{ mb: \"$spacing8\", alignItems: \"flex-start\" }}\n    animation=\"quick\"\n    data-testid=\"token-info-container\"\n  ><Flex row alignItems=\"center\" $sm={{ alignItems: \"flex-start\", flexDirection: \"column\" }} gap=\"$gap12\"><PortfolioLogo currencies={[currency]} chainId={currency.chainId} size={32} /><Flex row gap=\"$gap8\" alignItems=\"center\"><Text variant=\"heading3\" minWidth={40} {...EllipsisTamaguiStyle}>{currency.name ?? t(\"tdp.nameNotFound\")}</Text><Text variant=\"heading3\" textTransform=\"uppercase\" color=\"$neutral2\" $sm={{ display: \"none\" }}>{tokenSymbolName}</Text></Flex></Flex>{isMobileScreen ? <MobileTokenActions\n    mobileSheetOpen={mobileSheetOpen}\n    toggleMobileSheet={toggleMobileSheet}\n    HeaderActions={HeaderActions}\n  /> : <DesktopTokenActions HeaderActions={HeaderActions} twitterShareName={twitterShareName} />}</Flex>;\n};\nfunction MobileTokenActions({ mobileSheetOpen, toggleMobileSheet, HeaderActions }) {\n  const colors = useSporeColors();\n  return <Flex><TouchableArea height={32} onPress={() => toggleMobileSheet(true)} {...ActionButtonStyle}><MoreHorizontal size={iconSizes.icon20} color={colors.neutral2.val} /></TouchableArea><WebBottomSheet isOpen={mobileSheetOpen} onClose={() => toggleMobileSheet(false)}><Flex gap=\"$spacing8\" mb=\"$spacing16\">{HeaderActions.map(\n    (action) => action.show && <Flex\n      row\n      key={action.title}\n      width=\"100%\"\n      gap=\"$spacing12\"\n      px=\"$spacing8\"\n      py={10}\n      alignItems=\"center\"\n      hoverStyle={{ backgroundColor: \"$surface3\" }}\n      cursor=\"pointer\"\n      borderRadius=\"$rounded8\"\n      onPress={() => {\n        toggleMobileSheet(false);\n        action.onPress();\n      }}\n    >{action.icon}<Text variant=\"body2\">{action.title}</Text></Flex>\n  )}</Flex></WebBottomSheet></Flex>;\n}\nfunction DesktopTokenActions({ HeaderActions, twitterShareName }) {\n  return <Flex row gap=\"$gap8\" alignItems=\"center\">{HeaderActions.map(\n    (action) => action.show && <MouseoverTooltip key={action.title} text={action.title} placement=\"top\" size={TooltipSize.Max}><Text onPress={action.onPress} {...ActionButtonStyle}>{action.icon}</Text></MouseoverTooltip>\n  )}<ShareButton name={twitterShareName} utmSource=\"share-tdp\" /></Flex>;\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { MobileBottomBar, TDPActionTabs } from \"components/NavBar/MobileBottomBar\";\nimport { ActivitySection } from \"components/Tokens/TokenDetails/ActivitySection\";\nimport BalanceSummary, { PageChainBalanceSummary } from \"components/Tokens/TokenDetails/BalanceSummary\";\nimport ChartSection from \"components/Tokens/TokenDetails/ChartSection\";\nimport { LeftPanel, RightPanel, TokenDetailsLayout } from \"components/Tokens/TokenDetails/Skeleton\";\nimport StatsSection from \"components/Tokens/TokenDetails/StatsSection\";\nimport { TokenDescription } from \"components/Tokens/TokenDetails/TokenDescription\";\nimport { TokenDetailsHeader } from \"components/Tokens/TokenDetails/TokenDetailsHeader\";\nimport { Hr } from \"components/Tokens/TokenDetails/shared\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { ScrollDirection, useScroll } from \"hooks/useScroll\";\nimport deprecatedStyled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Flex, useIsTouchDevice, useMedia } from \"ui/src\";\nimport { getNativeAddress } from \"uniswap/src/constants/addresses\";\nimport { useUrlContext } from \"uniswap/src/contexts/UrlContext\";\nimport { isUniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { TokenWarningCard } from \"uniswap/src/features/tokens/TokenWarningCard\";\nimport TokenWarningModal from \"uniswap/src/features/tokens/TokenWarningModal\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { areCurrenciesEqual, currencyId } from \"uniswap/src/utils/currencyId\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { getInitialLogoUrl } from \"utils/getInitialLogoURL\";\nconst DividerLine = deprecatedStyled(Hr)`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    opacity: 0;\n    margin-bottom: 0;\n  }\n`;\nfunction TDPBreadcrumb() {\n  const { address, currency, currencyChain } = useTDPContext();\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to={`/explore/${currencyChain.toLowerCase()}`}><Trans i18nKey=\"common.explore\" /> <ChevronRight size={14} /></BreadcrumbNavLink><BreadcrumbNavLink to={`/explore/tokens/${currencyChain.toLowerCase()}`}><Trans i18nKey=\"common.tokens\" /> <ChevronRight size={14} /></BreadcrumbNavLink><CurrentPageBreadcrumb address={address} currency={currency} /></BreadcrumbNavContainer>;\n}\nfunction getCurrencyURLAddress(currency) {\n  if (!currency) {\n    return \"\";\n  }\n  if (currency.isToken) {\n    return currency.address;\n  }\n  return NATIVE_CHAIN_ID;\n}\nfunction useSwapInitialInputCurrency() {\n  const { currency } = useTDPContext();\n  const { useParsedQueryString } = useUrlContext();\n  const parsedQs = useParsedQueryString();\n  const inputTokenAddress = useMemo(() => {\n    return typeof parsedQs.inputCurrency === \"string\" ? parsedQs.inputCurrency : currency.isNative ? void 0 : getNativeAddress(currency.chainId);\n  }, [currency.chainId, currency.isNative, parsedQs.inputCurrency]);\n  return useCurrency(inputTokenAddress, currency.chainId);\n}\nfunction TDPSwapComponent() {\n  const { address, currency, currencyChainId, tokenColor } = useTDPContext();\n  const navigate = useNavigate();\n  const currencyInfo = useCurrencyInfo(currencyId(currency));\n  const handleCurrencyChange = useCallback(\n    (tokens, isBridgePair) => {\n      const inputCurrencyURLAddress = getCurrencyURLAddress(tokens.inputCurrency);\n      const outputCurrencyURLAddress = getCurrencyURLAddress(tokens.outputCurrency);\n      const inputEquivalent = addressesAreEquivalent(inputCurrencyURLAddress, address) && tokens.inputCurrency?.chainId === currencyChainId;\n      const outputEquivalent = addressesAreEquivalent(outputCurrencyURLAddress, address) && tokens.outputCurrency?.chainId === currencyChainId;\n      if (inputEquivalent || outputEquivalent || isBridgePair) {\n        return;\n      }\n      const newDefaultToken = tokens.outputCurrency ?? tokens.inputCurrency;\n      if (!newDefaultToken) {\n        return;\n      }\n      const preloadedLogoSrc = getInitialLogoUrl(newDefaultToken.wrapped.address, newDefaultToken.chainId);\n      const url = getTokenDetailsURL({\n        // The function falls back to \"NATIVE\" if the address is null\n        address: newDefaultToken.isNative ? null : newDefaultToken.address,\n        chain: toGraphQLChain(isUniverseChainId(newDefaultToken.chainId) ? newDefaultToken.chainId : currencyChainId),\n        inputAddress: (\n          // If only one token was selected before we navigate, then it was the default token and it's being replaced.\n          // On the new page, the *new* default token becomes the output, and we don't have another option to set as the input token.\n          tokens.inputCurrency && tokens.inputCurrency !== newDefaultToken ? inputCurrencyURLAddress : null\n        )\n      });\n      navigate(url, { state: { preloadedLogoSrc } });\n    },\n    [address, currencyChainId, navigate]\n  );\n  const initialInputCurrency = useSwapInitialInputCurrency();\n  const isSell = areCurrenciesEqual(initialInputCurrency, currency);\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const closeWarningModal = useCallback(() => setShowWarningModal(false), []);\n  return <Flex gap=\"$gap12\"><Swap\n    syncTabToUrl={false}\n    chainId={currency.chainId}\n    initialInputCurrency={initialInputCurrency}\n    initialOutputCurrency={isSell ? void 0 : currency}\n    onCurrencyChange={handleCurrencyChange}\n    tokenColor={tokenColor}\n  /><TokenWarningCard currencyInfo={currencyInfo} onPress={() => setShowWarningModal(true)} />{currencyInfo && // Intentionally duplicative with the TokenWarningModal in the swap component; this one only displays when user clicks \"i\" Info button on the TokenWarningCard\n  <TokenWarningModal\n    currencyInfo0={currencyInfo}\n    isInfoOnlyWarning\n    isVisible={showWarningModal}\n    closeModalOnly={closeWarningModal}\n    onAcknowledge={closeWarningModal}\n  />}</Flex>;\n}\nfunction TDPAnalytics({ children }) {\n  const { address, currency } = useTDPContext();\n  return <Trace\n    logImpression\n    page={InterfacePageName.TOKEN_DETAILS_PAGE}\n    properties={{\n      tokenAddress: address,\n      tokenSymbol: currency.symbol,\n      tokenName: currency.name,\n      chainId: currency.chainId\n    }}\n  >{children}</Trace>;\n}\nexport default function TokenDetails() {\n  const { address, currency, tokenQuery, currencyChain, multiChainMap } = useTDPContext();\n  const tokenQueryData = tokenQuery.data?.token;\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const media = useMedia();\n  const showRightPanel = !media.xl;\n  const { direction: scrollDirection } = useScroll();\n  const isTouchDevice = useIsTouchDevice();\n  return <TDPAnalytics><TokenDetailsLayout><LeftPanel><TDPBreadcrumb /><TokenDetailsHeader /><ChartSection />{!showRightPanel && !!pageChainBalance && <Flex mt=\"$spacing40\"><PageChainBalanceSummary pageChainBalance={pageChainBalance} alignLeft /></Flex>}<StatsSection chainId={currency.chainId} address={address} tokenQueryData={tokenQueryData} /><DividerLine /><ActivitySection /></LeftPanel><RightPanel>{showRightPanel && <><TDPSwapComponent /><BalanceSummary /></>}<TokenDescription /></RightPanel><MobileBottomBar hide={isTouchDevice && scrollDirection === ScrollDirection.DOWN}>{\n    /* TODO(WEB-4800): data-testid is not passed to ui/src elements when animation is set */\n  }{\n    /* Remove this extra div when WEB-4800 is fixed */\n  }<Flex data-testid=\"tdp-mobile-bottom-bar\"><TDPActionTabs /></Flex></MobileBottomBar></TokenDetailsLayout></TDPAnalytics>;\n}\n","\"use strict\";\nimport { CELO_LOGO } from \"ui/src/assets\";\nimport { isCelo, nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { isUniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { isAddress } from \"utilities/src/addresses\";\nexport function getInitialLogoUrl(address, chainId, backupImg) {\n  const networkName = isUniverseChainId(chainId) ? getChainInfo(chainId).assetRepoNetworkName ?? \"ethereum\" : \"ethereum\";\n  const checksummedAddress = isAddress(address);\n  if (chainId && isCelo(chainId) && address === nativeOnChain(chainId).wrapped.address) {\n    return CELO_LOGO;\n  }\n  if (checksummedAddress) {\n    return `https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/${networkName}/assets/${checksummedAddress}/logo.png`;\n  } else {\n    return backupImg ?? void 0;\n  }\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgEye(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.75 12C14.75 13.517 13.517 14.75 12 14.75C10.483 14.75 9.25004 13.517 9.25004 12C9.25004 11.651 9.32196 11.32 9.44096 11.012C9.63496 11.166 9.86903 11.272 10.136 11.272C10.763 11.272 11.272 10.763 11.272 10.136C11.272 9.86899 11.166 9.63492 11.012 9.44092C11.32 9.32192 11.651 9.25 12 9.25C13.517 9.25 14.75 10.483 14.75 12ZM20.5921 13.4771C19.3651 15.5311 16.609 19 12 19C7.39104 19 4.635 15.5311 3.408 13.4771C2.864 12.5671 2.864 11.4329 3.408 10.5229C4.635 8.46895 7.39104 5 12 5C16.609 5 19.3651 8.46895 20.5921 10.5229C21.1361 11.4329 21.1361 12.5671 20.5921 13.4771ZM16.25 12C16.25 9.657 14.344 7.75 12 7.75C9.65604 7.75 7.75004 9.657 7.75004 12C7.75004 14.343 9.65604 16.25 12 16.25C14.344 16.25 16.25 14.343 16.25 12Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.d5b29450daf2ca02a561a18c589c4ccb.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\nimport { ReactComponent as EyeIcon } from \"assets/svg/eye.svg\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport styled from \"lib/styled-components\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { Button } from \"ui/src\";\nimport { opacify } from \"ui/src/theme\";\nimport { useIsSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { getChainLabel } from \"uniswap/src/features/chains/utils\";\nconst InvalidDetailsContainer = styled.div`\n  padding-top: 128px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst InvalidDetailsText = styled.span`\n  margin-top: 28px;\n  margin-bottom: 20px;\n\n  text-align: center;\n\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 20px;\n  font-weight: 535;\n  line-height: 28px;\n`;\nexport default function InvalidTokenDetails({\n  tokenColor,\n  pageChainId,\n  isInvalidAddress\n}) {\n  const { chainId } = useAccount();\n  const { t } = useTranslation();\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  const pageChainIsSupported = useIsSupportedChainId(pageChainId);\n  const navigate = useNavigate();\n  const selectChain = useSelectChain();\n  const isNonExistentToken = !isInvalidAddress && pageChainId === chainId;\n  const connectedChainLabel = isSupportedChain ? getChainLabel(chainId) : void 0;\n  return <InvalidDetailsContainer><EyeIcon />{isInvalidAddress || isNonExistentToken ? <><InvalidDetailsText><Trans i18nKey=\"tdp.invalidTokenPage.title\" /></InvalidDetailsText><Button\n    hoverStyle={{ backgroundColor: opacify(90, tokenColor ?? \"\") }}\n    backgroundColor={tokenColor}\n    onPress={() => navigate(\"/tokens\")}\n  >{t(\"common.exploreTokens\")}</Button></> : <>{connectedChainLabel && <InvalidDetailsText><Trans i18nKey=\"tdp.invalidTokenPage.titleWithChain\" values={{ network: connectedChainLabel }} /></InvalidDetailsText>}<Button\n    hoverStyle={{ backgroundColor: opacify(90, tokenColor ?? \"\") }}\n    backgroundColor={tokenColor}\n    onPress={() => selectChain(pageChainId)}\n  ><ThemedText.SubHeader><Trans\n    i18nKey=\"tdp.invalidTokenPage.switchChainPrompt\"\n    values={{ network: pageChainIsSupported ? getChainLabel(pageChainId) : \"\" }}\n  /></ThemedText.SubHeader></Button></>}</InvalidDetailsContainer>;\n}\n","\"use strict\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { getChainLabel } from \"uniswap/src/features/chains/utils\";\nexport function getTokenPageTitle(t, currency, chainId) {\n  const tokenName = currency?.name;\n  const tokenSymbol = currency?.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!tokenName && !tokenSymbol) {\n    return baseTitle;\n  }\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${getChainLabel(chainId)}` : \"\";\n  if (!tokenName && tokenSymbol) {\n    return `${tokenSymbol}${chainSuffix}: ${baseTitle}`;\n  }\n  if (tokenName && !tokenSymbol) {\n    return `${tokenName}${chainSuffix}: ${baseTitle}`;\n  }\n  return `${tokenName} (${tokenSymbol})${chainSuffix}: ${baseTitle}`;\n}\nexport const getTokenPageDescription = (currency, chainId) => {\n  const tokenPageName = currency?.name && currency?.symbol ? `${currency?.name} (${currency?.symbol})` : currency?.name ?? currency?.symbol ?? \"tokens\";\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${getChainLabel(chainId)}` : \"\";\n  return `Buy, sell, and swap ${tokenPageName}${chainSuffix}. Real-time prices, charts, transaction data, and more.`;\n};\n","\"use strict\";\nimport TokenDetails from \"components/Tokens/TokenDetails\";\nimport { useCreateTDPChartState } from \"components/Tokens/TokenDetails/ChartSection\";\nimport InvalidTokenDetails from \"components/Tokens/TokenDetails/InvalidTokenDetails\";\nimport { TokenDetailsPageSkeleton } from \"components/Tokens/TokenDetails/Skeleton\";\nimport { NATIVE_CHAIN_ID, UNKNOWN_TOKEN_SYMBOL } from \"constants/tokens\";\nimport { useTokenBalancesQuery } from \"graphql/data/apollo/AdaptiveTokenBalancesProvider\";\nimport { gqlToCurrency } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSrcColor } from \"hooks/useColor\";\nimport { TDPProvider } from \"pages/TokenDetails/TDPContext\";\nimport { getTokenPageDescription, getTokenPageTitle } from \"pages/TokenDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useMemo } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { formatTokenMetatagTitleName } from \"shared-cloud/metatags\";\nimport { useSporeColors } from \"ui/src\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useTokenWebQuery } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useIsSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { isAddress } from \"utilities/src/addresses\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { getNativeTokenDBAddress } from \"utils/nativeTokens\";\nfunction useOnChainToken(address, chainId, skip) {\n  const token = useCurrency(!skip ? address : void 0, chainId);\n  if (skip || !address || token && token?.symbol === UNKNOWN_TOKEN_SYMBOL) {\n    return void 0;\n  } else {\n    return token;\n  }\n}\nfunction useTDPCurrency(tokenQuery, tokenAddress, currencyChainId, isNative) {\n  const { chainId } = useAccount();\n  const appChainId = chainId ?? UniverseChainId.Mainnet;\n  const queryCurrency = useMemo(() => {\n    if (isNative) {\n      return nativeOnChain(currencyChainId);\n    }\n    if (tokenQuery.data?.token) {\n      return gqlToCurrency(tokenQuery.data.token);\n    }\n    return void 0;\n  }, [isNative, currencyChainId, tokenQuery.data?.token]);\n  const skipOnChainFetch = Boolean(queryCurrency) || currencyChainId !== appChainId;\n  const onChainToken = useOnChainToken(tokenAddress, currencyChainId, skipOnChainFetch);\n  const currency = queryCurrency ?? onChainToken;\n  const currencyWasFetchedOnChain = !queryCurrency;\n  return { currency, currencyWasFetchedOnChain };\n}\nfunction useMultiChainMap(tokenQuery) {\n  const { data: balanceQuery } = useTokenBalancesQuery();\n  return useMemo(() => {\n    const tokenBalances = balanceQuery?.portfolios?.[0]?.tokenBalances;\n    const tokensAcrossChains = tokenQuery.data?.token?.project?.tokens;\n    if (!tokensAcrossChains) {\n      return {};\n    }\n    return tokensAcrossChains.reduce((map, current) => {\n      if (current) {\n        if (!map[current.chain]) {\n          map[current.chain] = {};\n        }\n        const update = map[current.chain] ?? {};\n        update.address = current.address;\n        update.balance = tokenBalances?.find((tokenBalance) => tokenBalance?.token?.id === current.id);\n        map[current.chain] = update;\n      }\n      return map;\n    }, {});\n  }, [balanceQuery?.portfolios, tokenQuery.data?.token?.project?.tokens]);\n}\nfunction useCreateTDPContext() {\n  const { tokenAddress } = useParams();\n  if (!tokenAddress) {\n    throw new Error(\"Invalid token details route: token address URL param is undefined\");\n  }\n  const currencyChainInfo = getChainInfo(useChainIdFromUrlParam() ?? UniverseChainId.Mainnet);\n  const isNative = tokenAddress === NATIVE_CHAIN_ID;\n  const tokenDBAddress = isNative ? getNativeTokenDBAddress(currencyChainInfo.backendChain.chain) : tokenAddress;\n  const tokenQuery = useTokenWebQuery({\n    variables: { address: tokenDBAddress, chain: currencyChainInfo.backendChain.chain },\n    errorPolicy: \"all\"\n  });\n  const chartState = useCreateTDPChartState(tokenDBAddress, currencyChainInfo.backendChain.chain);\n  const multiChainMap = useMultiChainMap(tokenQuery);\n  const { currency, currencyWasFetchedOnChain } = useTDPCurrency(\n    tokenQuery,\n    tokenAddress,\n    currencyChainInfo.id,\n    isNative\n  );\n  const colors = useSporeColors();\n  const { preloadedLogoSrc } = useLocation().state ?? {};\n  const extractedColorSrc = tokenQuery.data?.token?.project?.logoUrl ?? preloadedLogoSrc;\n  const tokenColor = useSrcColor(\n    extractedColorSrc,\n    tokenQuery.data?.token?.name ?? tokenQuery.data?.token?.project?.name,\n    colors.surface2.val\n  ).tokenColor ?? void 0;\n  return useMemo(() => {\n    return {\n      currency,\n      currencyChain: currencyChainInfo.backendChain.chain,\n      currencyChainId: currencyChainInfo.id,\n      // `currency.address` is checksummed, whereas the `tokenAddress` url param may not be\n      address: (currency?.isNative ? NATIVE_CHAIN_ID : currency?.address) ?? tokenAddress,\n      currencyWasFetchedOnChain,\n      tokenQuery,\n      chartState,\n      multiChainMap,\n      tokenColor\n    };\n  }, [\n    currency,\n    currencyChainInfo.backendChain.chain,\n    currencyChainInfo.id,\n    tokenAddress,\n    currencyWasFetchedOnChain,\n    tokenQuery,\n    chartState,\n    multiChainMap,\n    tokenColor\n  ]);\n}\nexport default function TokenDetailsPage() {\n  const { t } = useTranslation();\n  const account = useAccount();\n  const pageChainId = account.chainId ?? UniverseChainId.Mainnet;\n  const contextValue = useCreateTDPContext();\n  const { tokenColor, address, currency, currencyChain, currencyChainId, tokenQuery } = contextValue;\n  const isSupportedChain = useIsSupportedChainId(currencyChainId);\n  const tokenQueryData = tokenQuery.data?.token;\n  const metatagProperties = useMemo(() => {\n    return {\n      title: formatTokenMetatagTitleName(tokenQueryData?.symbol, tokenQueryData?.name),\n      image: window.location.origin + \"/api/image/tokens/\" + currencyChain.toLowerCase() + \"/\" + (currency?.isNative ? getNativeTokenDBAddress(currencyChain) : address),\n      url: window.location.href,\n      description: getTokenPageDescription(currency, currencyChainId)\n    };\n  }, [address, currency, currencyChain, currencyChainId, tokenQueryData?.name, tokenQueryData?.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  return <><Helmet><title>{getTokenPageTitle(t, currency, currencyChainId)}</title>{metatags.map((tag, index) => <meta key={index} {...tag} />)}</Helmet>{(() => {\n    if (currency && isSupportedChain) {\n      return <TDPProvider contextValue={contextValue}><TokenDetails /></TDPProvider>;\n    }\n    if (tokenQuery.loading) {\n      return <TokenDetailsPageSkeleton />;\n    } else {\n      return <InvalidTokenDetails\n        tokenColor={tokenColor}\n        pageChainId={pageChainId}\n        isInvalidAddress={!isAddress(address)}\n      />;\n    }\n  })()}</>;\n}\n","\"use strict\";\nexport function formatTokenMetatagTitleName(symbol, name) {\n  if (symbol) {\n    return \"Get \" + symbol + \" on Uniswap\";\n  }\n  if (name) {\n    return \"Get \" + name + \" on Uniswap\";\n  }\n  return \"View Token on Uniswap\";\n}\n"],"names":["getFeeOnTransferAddress","chainId","UniverseChainId","Mainnet","Optimism","Bnb","Polygon","Base","ArbitrumOne","Celo","Avalanche","FEE_CACHE","getSwapTaxes","fotDetector","inputTokenAddress","outputTokenAddress","addresses","push","length","data","callStatic","batchValidate","getWethAddress","forEach","address","index","sellFeeBps","buyFeeBps","sellTax","Percent","toNumber","BIPS_BASE","buyTax","e","logger","warn","inputTax","ZERO_PERCENT","outputTax","useSwapTaxes","tokenChainId","account","useAccount","contract","useContract","FOT_DETECTOR_ABI","useEffect","sendAnalyticsEvent","InterfaceEventName","WALLET_PROVIDER_USED","source","name","useFeeOnTransferDetectorContract","setTaxes","useState","then","CreditCardIcon","props","svg","xmlns","width","height","viewBox","fill","path","d","Sell","fillRule","clipRule","_cn","TDPActionTabs","t","useTranslation","currencyChain","currencyChainId","tokenColor","useTDPContext","switchChain","useSwitchChain","navigate","useNavigate","chainUrlParam","toLowerCase","addressUrlParam","NATIVE_CHAIN_ID","showIcons","useMedia","xs","toActionLink","useCallback","href","tabs","label","icon","Send","div","className","map","tab","Button","onPress","backgroundColor","size","DEFAULT_QUERY_SIZE","HIDDEN_COLUMNS","PoolSortFields","VolOverTvl","RewardApr","TokenDetailsPoolsTable","referenceToken","sortMethod","useAtomValue","sortMethodAtom","sortAscending","sortAscendingAtom","sortState","useMemo","sortBy","sortDirection","OrderDirection","Asc","Desc","pools","loading","errorV2","errorV3","loadMore","tokenAddress","dataV2","dataV3","dataV4","defaultChainId","useEnabledChains","chain","toGraphQLChain","loadingV4","error","errorV4","fetchMore","fetchMoreV4","useTopV4PoolsQuery","variables","first","loadingV3","fetchMoreV3","useTopV3PoolsQuery","loadingV2","fetchMoreV2","useTopV2PairsQuery","skip","loadingMoreV4","useRef","loadingMoreV3","loadingMoreV2","sizeRef","onComplete","current","cursor","topV4Pools","totalLiquidity","value","updateQuery","prev","fetchMoreResult","Object","keys","mergedData","slice","topV3Pools","topV2Pairs","pool","hash","poolId","token0","token1","tvl","volume24h","volume30d","volOverTvl","calculate1DVolOverTvl","apr","calculateApr","feeTier","protocolVersion","hookAddress","hook","V2_BIPS","sortPools","usePoolsFromTokenAddress","combinedError","ApolloError","errorMessage","allDataStillLoading","useUpdateManualOutage","resetSortMethod","useResetAtom","resetSortAscending","data-testid","PoolsTable","maxHeight","hiddenColumns","forcePinning","TokenTransactionType","TokenTransactionType2","TokenTransactionDefaultQuerySize","_cn3","_cn2","TableWrapper","styled","Flex","position","minHeight","TransactionsTable","activeLocalCurrency","useAppFiatCurrency","formatNumber","formatFiatPrice","useFormatter","filterModalIsOpen","toggleFilterModal","useReducer","s","filterAnchorRef","filter","setFilters","BUY","SELL","transactions","useV4TokenTransactionsQuery","useV3TokenTransactionsQuery","useV2TokenTransactionsQuery","querySizeRef","token","v4Transactions","timestamp","id","Chain","Ethereum","v3Transactions","v2Transactions","filterTransaction","tx","tokenBeingSold","isSell","parseFloat","token0Quantity","type","PoolTransactionType","Swap","includes","sort","a","b","useTokenTransactions","unwrappedReferenceToken","unwrapToken","transaction","swapLeg0","symbol","amount","swapLeg1","token1Quantity","token0IsBeingSold","input","output","usdValue","makerAddress","media","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","row","maxSize","header","HeaderCell","justifyContent","grow","Text","variant","color","Trans","i18nKey","cell","Cell","TimestampCell","Number","getValue","link","getExplorerLink","ExplorerDataType","TRANSACTION","FilterHeaderRow","clickable","alignItems","ref","Filter","allFilters","values","activeFilter","isOpen","anchorRef","isBuy","String","TableText","inputTokenAmount","Math","abs","nonReferenceSwapLeg","EllipsisText","maxWidth","NumberType","TokenQuantityStats","TokenLinkCell","swapOutput","HeaderSortText","fiat","price","StyledExternalLink","ADDRESS","shortenAddress","Table","defaultPinnedColumns","xxl","Container","Tab","ClickableTamaguiStyle","ActivitySection","wrapped","currency","activityInView","setActivityInView","gap","mb","BalancesCard","theme","neutral1","breakpoints","lg","BalanceSection","BalanceRow","BalanceItem","BalanceAmountsContainer","$alignLeft","Balance","gqlBalance","alignLeft","onClick","currencies","formattedGqlBalance","quantity","TokenNonTx","formattedUsdGqlValue","denominatedValue","PortfolioBalance","PortfolioLogo","images","project","logoUrl","ThemedText","BodyPrimary","BodySecondary","PageChainBalanceSummary","pageChainBalance","gqlToCurrency","HeadlineSmall","OtherChainsBalanceSummary","otherChainBalances","hasPageChainBalance","SubHeaderSmall","balance","supportedChainIdFromGQLChain","getTokenDetailsURL","BalanceSummary","multiChainMap","key","entries","hasBalances","Boolean","isConnected","Globe","stroke","TokenInfoSection","$xl","TokenNameRow","TokenButtonRow","flexWrap","TokenInfoButton","display","flexDirection","py","px","borderRadius","TokenDescriptionContainer","EllipsisTamaguiStyle","whiteSpace","lineHeight","DescriptionVisibilityWrapper","Paragraph","fontWeight","variants","visible","true","false","TRUNCATE_CHARACTER_COUNT","TokenDescription","tokenQuery","useTheme","description","homepageUrl","twitterName","explorerUrl","isNative","NATIVE","TOKEN","isCopied","setCopied","useCopyClipboard","copy","isDescriptionTruncated","toggleIsDescriptionTruncated","x","truncatedDescription","truncateDescription","shouldTruncate","showTruncatedDescription","sellFee","buyFee","formatPercent","sellFeeString","buyFeeString","hasFee","toFixed","sameFee","MouseoverTooltip","disabled","placement","TooltipSize","Max","forceShow","text","Copy","ExternalLink","EtherscanLogo","TwitterXLogo","NoInfoAvailable","pt","$sm","Small","Caption","FOTTooltipContent","_extends","assign","target","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","MoreHorizontal","forwardRef","_ref","_ref$color","_ref$size","rest","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","propTypes","displayName","TokenDetailsHeader","colors","useSporeColors","isMobileScreen","sm","mobileSheetOpen","toggleMobileSheet","tokenSymbolName","twitterUrl","searchParams","useSearchParams","utmTag","currentLocation","window","location","twitterShareName","HeaderActions","title","val","ExplorerIcon","open","show","Check","p","statusSuccess","Link","ShareIcon","openShareTweetWindow","animation","minWidth","textTransform","MobileTokenActions","DesktopTokenActions","TouchableArea","ActionButtonStyle","iconSizes","icon20","neutral2","WebBottomSheet","onClose","action","ShareButton","utmSource","DividerLine","deprecatedStyled","Hr","breakpoint","md","TDPBreadcrumb","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","CurrentPageBreadcrumb","getCurrencyURLAddress","isToken","TDPSwapComponent","currencyInfo","useCurrencyInfo","currencyId","handleCurrencyChange","tokens","isBridgePair","inputCurrencyURLAddress","inputCurrency","outputCurrencyURLAddress","outputCurrency","inputEquivalent","addressesAreEquivalent","outputEquivalent","newDefaultToken","preloadedLogoSrc","backupImg","networkName","isUniverseChainId","getChainInfo","assetRepoNetworkName","checksummedAddress","isAddress","isCelo","nativeOnChain","CELO_LOGO","getInitialLogoUrl","url","inputAddress","state","initialInputCurrency","useParsedQueryString","useUrlContext","parsedQs","getNativeAddress","useCurrency","useSwapInitialInputCurrency","areCurrenciesEqual","showWarningModal","setShowWarningModal","closeWarningModal","syncTabToUrl","initialOutputCurrency","onCurrencyChange","TokenWarningCard","TokenWarningModal","currencyInfo0","isInfoOnlyWarning","isVisible","closeModalOnly","onAcknowledge","TDPAnalytics","children","Trace","logImpression","page","InterfacePageName","TOKEN_DETAILS_PAGE","properties","tokenSymbol","tokenName","TokenDetails","tokenQueryData","showRightPanel","xl","direction","scrollDirection","useScroll","isTouchDevice","useIsTouchDevice","TokenDetailsLayout","LeftPanel","ChartSection","StatsSection","RightPanel","MobileBottomBar","hide","ScrollDirection","DOWN","_path","bind","n","SvgEye","svgRef","titleId","ForwardRef","InvalidDetailsContainer","InvalidDetailsText","span","InvalidTokenDetails","pageChainId","isInvalidAddress","isSupportedChain","useIsSupportedChainId","pageChainIsSupported","selectChain","useSelectChain","isNonExistentToken","connectedChainLabel","getChainLabel","EyeIcon","hoverStyle","opacify","network","SubHeader","getTokenPageTitle","baseTitle","chainSuffix","getTokenPageDescription","useTDPCurrency","appChainId","queryCurrency","skipOnChainFetch","onChainToken","UNKNOWN_TOKEN_SYMBOL","useOnChainToken","currencyWasFetchedOnChain","useCreateTDPContext","useParams","Error","currencyChainInfo","useChainIdFromUrlParam","tokenDBAddress","getNativeTokenDBAddress","backendChain","useTokenWebQuery","errorPolicy","chartState","useCreateTDPChartState","balanceQuery","useTokenBalancesQuery","tokenBalances","portfolios","tokensAcrossChains","reduce","update","find","tokenBalance","useMultiChainMap","useLocation","extractedColorSrc","useSrcColor","surface2","TokenDetailsPage","contextValue","metatagProperties","image","origin","metatags","useDynamicMetatags","Helmet","tag","meta","TDPProvider","TokenDetailsPageSkeleton"],"sourceRoot":""}