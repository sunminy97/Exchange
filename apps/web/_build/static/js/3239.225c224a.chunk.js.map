{"version":3,"file":"static/js/3239.225c224a.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/Pool/Positions/LegacyPositionPage.tsx?926a","webpack://@uniswap/interface/./src/pages/Pool/Positions/PositionPage.tsx?861c","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionAmountsTile.tsx?2cce","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionPriceRangeTile.tsx?defe","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionAmountRows.tsx?d877","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionStackedBars.tsx?2a88","webpack://@uniswap/interface/./src/pages/NotFound/index.tsx?8065","components/BreadcrumbNav/index.tsx","webpack://@uniswap/interface/./src/pages/NotFound/index.tsx?7fe7","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionAmountRows.tsx?e272","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionStackedBars.tsx?53b7","components/Liquidity/PositionNFT.tsx","hooks/usePositionTokenURI.ts","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionAmountsTile.tsx?b0c4","components/Liquidity/LiquidityPositionPriceRangeTile.tsx","webpack://@uniswap/interface/./src/pages/Pool/Positions/LegacyPositionPage.tsx?8b5f","../../../packages/ui/src/components/icons/ExchangeHorizontal.tsx","webpack://@uniswap/interface/./src/pages/Pool/Positions/PositionPage.tsx?c6a6","pages/Pool/Positions/create/BaseQuoteFiatAmount.tsx","../../../packages/uniswap/src/data/rest/getPosition.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ClickableStyle } from \"theme/components/styles\";\nimport { useMedia } from \"ui/src\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nexport const BreadcrumbNavContainer = styled.nav`\n  display: flex;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 16px;\n  line-height: 24px;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n  width: fit-content;\n`;\nexport const BreadcrumbNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral2};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  text-decoration: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.neutral3};\n  }\n`;\nconst CurrentPageBreadcrumbContainer = styled(Row)`\n  gap: 6px;\n`;\nconst PageTitleText = styled.h1`\n  font-weight: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: ${({ theme }) => theme.neutral1};\n  white-space: nowrap;\n  margin: 0;\n`;\nconst TokenAddressHoverContainer = styled(Row)`\n  cursor: ${({ isDisabled }) => isDisabled ? \"default\" : \"pointer\"};\n  gap: 10px;\n  white-space: nowrap;\n`;\nconst CopyIcon = styled(Copy)`\n  ${ClickableStyle}\n`;\nexport const CurrentPageBreadcrumb = ({\n  address,\n  currency,\n  poolName\n}) => {\n  const { t } = useTranslation();\n  const { neutral2 } = useTheme();\n  const [hover, setHover] = useState(false);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const isNative = currency?.isNative;\n  const tokenSymbolName = currency?.symbol ?? t(\"tdp.symbolNotFound\");\n  const media = useMedia();\n  const shouldEnableCopy = !media.md;\n  const shouldShowActions = shouldEnableCopy && hover && !isCopied;\n  return <CurrentPageBreadcrumbContainer\n    aria-current=\"page\"\n    data-testid=\"current-breadcrumb\"\n    onMouseEnter={() => setHover(true)}\n    onMouseLeave={() => setHover(false)}\n  ><PageTitleText>{currency ? tokenSymbolName : poolName}</PageTitleText>{\" \"}{(!currency || currency && !isNative) && <TokenAddressHoverContainer\n    data-testid=\"breadcrumb-token-address\"\n    isDisabled={!shouldEnableCopy}\n    onClick={shouldEnableCopy ? copy : void 0}\n  ><MouseoverTooltip\n    placement=\"bottom\"\n    size={TooltipSize.Max}\n    forceShow={isCopied}\n    text={t(\"common.copied\")}\n    disabled\n  >{shortenAddress(address)}</MouseoverTooltip>{shouldShowActions && <CopyIcon data-testid=\"breadcrumb-hover-copy\" width={16} height={16} color={neutral2} />}</TokenAddressHoverContainer>}</CurrentPageBreadcrumbContainer>;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport darkImage from \"assets/images/404-page-dark.png\";\nimport lightImage from \"assets/images/404-page-light.png\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsDarkMode } from \"theme/components/ThemeToggle\";\nimport { Button, Flex } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled(Container)`\n  gap: 30px;\n`;\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`;\nexport default function NotFound({ title, subtitle, actionButton }) {\n  const isDarkMode = useIsDarkMode();\n  const isMobile = useIsMobile();\n  const navigate = useNavigate();\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero;\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge;\n  return <PageWrapper><Trace logImpression page={InterfacePageName.NOT_FOUND}><Header><Container>{title ?? <Title>404</Title>}{subtitle ?? <Paragraph color=\"neutral2\"><Trans i18nKey=\"common.pageNotFound\" /></Paragraph>}</Container><Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" /></Header>{actionButton ?? <Flex row alignSelf=\"stretch\"><Button onPress={() => navigate(\"/\")} variant=\"branded\"><Trans i18nKey=\"notFound.oops\" /></Button></Flex>}</Trace></PageWrapper>;\n}\n","\"use strict\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, TouchableArea } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nexport function LiquidityPositionAmountRows({ rows }) {\n  const navigate = useNavigate();\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const chainUrlParam = getChainUrlParam(rows[0].currencyInfo.currency.chainId || UniverseChainId.Mainnet);\n  const getLink = useCallback(\n    (currencyInfo) => {\n      return getTokenDetailsURL({\n        address: currencyInfo.currency.isToken ? currencyInfo.currency.address : void 0,\n        // util handles native addresses\n        chainUrlParam\n      });\n    },\n    [chainUrlParam]\n  );\n  return <Flex gap=\"$gap16\">{rows.map((row) => <Flex row alignItems=\"center\" justifyContent=\"space-between\" key={row.currencyInfo.currencyId}><TouchableArea onPress={() => navigate(getLink(row.currencyInfo))} {...ClickableTamaguiStyle}><Flex row alignItems=\"center\" gap=\"$gap12\" maxWidth={160}><CurrencyLogo currencyInfo={row.currencyInfo} size={24} /><Text variant=\"subheading1\" color=\"neutral1\" $lg={{ variant: \"subheading2\" }} numberOfLines={1}>{formatCurrencyAmount({ value: row.fiatValue, type: NumberType.FiatTokenPrice })}</Text></Flex></TouchableArea><Flex alignItems=\"flex-end\" gap=\"$gap4\"><Flex row alignItems=\"center\" justifyContent=\"flex-end\" gap=\"$gap4\"><Text variant=\"body2\" color=\"$neutral2\">{formatCurrencyAmount({ value: row.currencyAmount, type: NumberType.TokenNonTx })}{\" \"}{row.currencyAmount.currency.symbol}</Text></Flex></Flex></Flex>)}</Flex>;\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { scaleLinear } from \"d3\";\nimport { useMemo } from \"react\";\nimport { Flex, Text } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nexport const LiquidityPositionStackedBars = ({ bars }) => {\n  const { formatPercent } = useLocalizationContext();\n  const scale = useMemo(() => {\n    const sum = bars.reduce((acc, bar) => acc.add(bar.value), new Percent(0, 100));\n    const sumValue = sum.equalTo(new Percent(0, 100)) ? 1 : Number(sum.toFixed(2));\n    return scaleLinear().domain([0, sumValue]).range([0, 100]);\n  }, [bars]);\n  const safePercentToNumber = (percent) => {\n    return percent.equalTo(new Percent(0, 100)) ? 0 : Number(percent.toFixed(2));\n  };\n  return <Flex gap=\"$gap8\"><Flex row borderRadius=\"$roundedFull\" gap=\"$spacing2\" height={4}>{bars.map((bar, i) => <Flex\n    key={i}\n    height={4}\n    borderRadius=\"$roundedFull\"\n    backgroundColor={bar.color}\n    width={`${scale(safePercentToNumber(bar.value))}%`}\n  />)}</Flex><Flex row gap=\"$gap12\">{bars.map((bar, i) => <Flex row alignItems=\"center\" gap=\"$spacing6\" key={i}><CurrencyLogo currencyInfo={bar.currencyInfo} size={16} /><Text variant=\"body3\" color=\"$neutral1\">{bar.value.equalTo(new Percent(0, 100)) ? \"0%\" : formatPercent(scale(safePercentToNumber(bar.value)))}</Text></Flex>)}</Flex></Flex>;\n};\n","\"use strict\";\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nfunction getSnapshot(src, canvas, targetHeight) {\n  const context = canvas.getContext(\"2d\");\n  if (context) {\n    let { width, height } = src;\n    const ratio = width / height;\n    height = targetHeight;\n    width = Math.round(ratio * targetHeight);\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n    context.scale(devicePixelRatio, devicePixelRatio);\n    context.clearRect(0, 0, width, height);\n    context.drawImage(src, 0, 0, width, height);\n  }\n}\nconst NFTGrid = styled.div`\n  display: grid;\n  grid-template: 'overlap';\n  min-height: 400px;\n`;\nconst NFTCanvas = styled.canvas`\n  grid-area: overlap;\n`;\nconst NFTImage = styled.img`\n  grid-area: overlap;\n  height: 400px;\n  /* Ensures SVG appears on top of canvas. */\n  z-index: 1;\n`;\nexport function PositionNFT({ image, height: targetHeight }) {\n  const [animate, setAnimate] = useState(false);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  return <NFTGrid\n    onMouseEnter={() => {\n      setAnimate(true);\n    }}\n    onMouseLeave={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n      setAnimate(false);\n    }}\n  ><NFTCanvas ref={canvasRef} /><NFTImage\n    ref={imageRef}\n    src={image}\n    hidden={!animate}\n    onLoad={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n    }}\n  /></NFTGrid>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useV3NFTPositionManagerContract, useV4NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useMemo } from \"react\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nconst STARTS_WITH = \"data:application/json;base64,\";\nfunction useNFTPositionManagerContract(version, chainId) {\n  const v3Contract = useV3NFTPositionManagerContract(false, chainId);\n  const v4Contract = useV4NFTPositionManagerContract(false, chainId);\n  return version === ProtocolVersion.V3 ? v3Contract : v4Contract;\n}\nexport function usePositionTokenURI(tokenId, chainId, version) {\n  const contract = useNFTPositionManagerContract(version ?? ProtocolVersion.V3, chainId);\n  const { data, isLoading, error } = useQuery({\n    queryKey: [ReactQueryCacheKey.PositionTokenURI, tokenId, chainId, version],\n    queryFn: async () => {\n      const input = tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16);\n      if (!input) {\n        return null;\n      }\n      return await contract?.tokenURI(input);\n    }\n  });\n  return useMemo(() => {\n    if (error || !tokenId) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (isLoading) {\n      return {\n        valid: true,\n        loading: true\n      };\n    }\n    if (!data) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (!data || !data.startsWith(STARTS_WITH)) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    try {\n      const json = JSON.parse(atob(data.slice(STARTS_WITH.length)));\n      return {\n        valid: true,\n        loading: false,\n        result: json\n      };\n    } catch (error2) {\n      return { valid: false, loading: false };\n    }\n  }, [error, isLoading, data, tokenId]);\n}\n","\"use strict\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, TouchableArea } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function LiquidityPositionAmountsTile({\n  currency0Amount,\n  currency1Amount,\n  fiatValue0,\n  fiatValue1\n}) {\n  const navigate = useNavigate();\n  const currencyInfo0 = useCurrencyInfo(currency0Amount.currency);\n  const currencyInfo1 = useCurrencyInfo(currency1Amount.currency);\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const totalFiatValue = fiatValue0?.add(fiatValue1 ?? CurrencyAmount.fromRawAmount(fiatValue0.currency, 0));\n  const chainUrlParam = getChainInfo(currencyInfo0?.currency.chainId || UniverseChainId.Mainnet).urlParam;\n  const currency0Link = getTokenDetailsURL({\n    address: currencyInfo0?.currency.isToken ? currencyInfo0?.currency.address : void 0,\n    // util handles native addresses\n    chainUrlParam\n  });\n  const currency1Link = getTokenDetailsURL({\n    address: currencyInfo1?.currency.isToken ? currencyInfo1?.currency.address : void 0,\n    // util handles native addresses\n    chainUrlParam\n  });\n  return <Flex borderRadius=\"$rounded12\" gap=\"$gap12\" backgroundColor=\"$surface3\" p=\"$padding16\"><Flex row alignItems=\"center\" justifyContent=\"space-between\"><TouchableArea onPress={() => navigate(currency0Link)} {...ClickableTamaguiStyle}><Flex row alignItems=\"center\" gap=\"$gap16\"><CurrencyLogo currencyInfo={currencyInfo0} size={20} /><Text variant=\"body2\" color=\"neutral1\">{currency0Amount.currency.symbol}</Text></Flex></TouchableArea><Flex row alignItems=\"center\" gap=\"$gap8\"><Text variant=\"body2\" color=\"$neutral1\">{formatCurrencyAmount({ value: currency0Amount })}</Text>{fiatValue0?.greaterThan(0) && <Text variant=\"body2\" color=\"$neutral2\">\r\n              ({formatCurrencyAmount({ value: fiatValue0, type: NumberType.FiatTokenPrice })})\r\n            </Text>}{totalFiatValue && totalFiatValue?.toExact() !== \"0\" && fiatValue0 && <Text variant=\"body2\" color=\"$neutral1\">{formatPercent(new Percent(fiatValue0.quotient, totalFiatValue.quotient).toFixed(6))}</Text>}</Flex></Flex><Flex row alignItems=\"center\" justifyContent=\"space-between\"><TouchableArea onPress={() => navigate(currency1Link)} {...ClickableTamaguiStyle}><Flex row alignItems=\"center\" gap=\"$gap16\"><CurrencyLogo currencyInfo={currencyInfo1} size={20} /><Text variant=\"body2\" color=\"$neutral1\">{currency1Amount.currency.symbol}</Text></Flex></TouchableArea><Flex row alignItems=\"center\" gap=\"$gap8\"><Text variant=\"body2\" color=\"neutral1\">{formatCurrencyAmount({ value: currency1Amount })}</Text>{fiatValue1?.greaterThan(0) && <Text variant=\"body2\" color=\"$neutral2\">\r\n              ({formatCurrencyAmount({ value: fiatValue1, type: NumberType.FiatTokenPrice })})\r\n            </Text>}{totalFiatValue && totalFiatValue?.toExact() !== \"0\" && fiatValue1 && <Text variant=\"body2\" color=\"$neutral1\">{formatPercent(new Percent(fiatValue1.quotient, totalFiatValue.quotient).toFixed(6))}</Text>}</Flex></Flex></Flex>;\n}\n","\"use strict\";\nimport { useGetRangeDisplay } from \"components/Liquidity/hooks\";\nimport { useMemo, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, SegmentedControl, Text, styled } from \"ui/src\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst InnerTile = styled(Flex, {\n  grow: true,\n  alignItems: \"center\",\n  gap: \"$gap8\",\n  borderRadius: \"$rounded12\",\n  backgroundColor: \"$surface3\",\n  p: \"$padding16\"\n});\nexport function LiquidityPositionPriceRangeTile({\n  token1,\n  priceOrdering,\n  token0CurrentPrice,\n  token1CurrentPrice,\n  tickSpacing,\n  tickLower,\n  tickUpper\n}) {\n  const { formatPrice } = useFormatter();\n  const [pricesInverted, setPricesInverted] = useState(false);\n  const currencyASymbol = token0CurrentPrice.baseCurrency.symbol;\n  const currencyBSymbol = token0CurrentPrice.quoteCurrency.symbol;\n  const controlOptions = useMemo(() => {\n    return [\n      {\n        value: currencyASymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyASymbol}</Text>\n      },\n      {\n        value: currencyBSymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyBSymbol}</Text>\n      }\n    ];\n  }, [currencyASymbol, currencyBSymbol]);\n  if (!currencyASymbol || !currencyBSymbol) {\n    throw new Error(\"LiquidityPositionPriceRangeTile: Currency symbols are required\");\n  }\n  const { minPrice, maxPrice, tokenASymbol, tokenBSymbol } = useGetRangeDisplay({\n    priceOrdering,\n    tickSpacing,\n    tickLower,\n    tickUpper,\n    pricesInverted\n  });\n  const currentPrice = useMemo(() => {\n    const { base } = priceOrdering;\n    if (!base) {\n      return void 0;\n    }\n    if (!pricesInverted) {\n      return base?.equals(token1) ? token1CurrentPrice : token0CurrentPrice;\n    }\n    return base?.equals(token1) ? token0CurrentPrice : token1CurrentPrice;\n  }, [priceOrdering, token0CurrentPrice, token1CurrentPrice, token1, pricesInverted]);\n  return <Flex backgroundColor=\"$surface2\" borderRadius=\"$rounded12\" p=\"$padding12\" width=\"100%\" gap=\"$gap12\"><Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\"><Flex row alignItems=\"center\" gap=\"$gap12\"><Text variant=\"subheading1\"><Trans i18nKey=\"pool.priceRange\" /></Text></Flex><SegmentedControl\n    size=\"large\"\n    options={controlOptions}\n    selectedOption={pricesInverted ? currencyBSymbol : currencyASymbol}\n    onSelectOption={(selected) => {\n      setPricesInverted(selected !== currencyASymbol);\n    }}\n  /></Flex><Flex row width=\"100%\" gap=\"$gap12\" $lg={{ row: false }}><InnerTile><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.minPrice\" /></Text><Text variant=\"heading2\" color=\"$neutral1\">{minPrice}</Text><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  /></Text></InnerTile><InnerTile><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.maxPrice\" /></Text><Text variant=\"heading2\" color=\"$neutral1\">{maxPrice}</Text><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  /></Text></InnerTile></Flex><InnerTile><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"common.marketPrice\" /></Text><Text variant=\"heading2\" color=\"$neutral1\">{formatPrice({ price: currentPrice, type: NumberType.TokenTx })}</Text><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  /></Text></InnerTile></Flex>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { LiquidityPositionAmountsTile } from \"components/Liquidity/LiquidityPositionAmountsTile\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { LiquidityPositionPriceRangeTile } from \"components/Liquidity/LiquidityPositionPriceRangeTile\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { useV3OrV4PositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { LoadingFullscreen, LoadingRows } from \"components/Loader/styled\";\nimport { MouseoverTooltip } from \"components/Tooltip\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport NotFound from \"pages/NotFound\";\nimport { LoadingRow } from \"pages/Pool/Positions/shared\";\nimport { useMemo } from \"react\";\nimport { ArrowLeft } from \"react-feather\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { usePendingLPTransactionsChangeListener } from \"state/transactions/hooks\";\nimport { Button, Flex, Main, Text, styled } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { useGetPositionQuery } from \"uniswap/src/data/rest/getPosition\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal, ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { currencyId, currencyIdToAddress } from \"uniswap/src/utils/currencyId\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { isV4UnsupportedChain } from \"utils/networkSupportsV4\";\nimport { useAccount } from \"wagmi\";\nconst BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"$spacing32\",\n  width: \"100%\",\n  maxWidth: 1200,\n  zIndex: \"$default\",\n  py: \"$spacing24\",\n  px: \"$spacing40\",\n  $lg: {\n    px: \"$padding20\"\n  }\n});\nfunction parseTokenId(tokenId) {\n  if (!tokenId) {\n    return void 0;\n  }\n  try {\n    return BigNumber.from(tokenId);\n  } catch (error) {\n    return void 0;\n  }\n}\nexport function LegacyPositionPage() {\n  const { tokenId: tokenIdFromUrl } = useParams();\n  const tokenId = parseTokenId(tokenIdFromUrl);\n  const chainId = useChainIdFromUrlParam();\n  const chainInfo = chainId ? getChainInfo(chainId) : void 0;\n  const account = useAccount();\n  const supportedAccountChainId = useSupportedChainId(account.chainId);\n  const { pathname } = useLocation();\n  const {\n    data,\n    isLoading: positionLoading,\n    refetch\n  } = useGetPositionQuery({\n    owner: account?.address ?? ZERO_ADDRESS,\n    protocolVersion: pathname.includes(\"v3\") ? ProtocolVersion.V3 : pathname.includes(\"v4\") ? ProtocolVersion.V4 : ProtocolVersion.UNSPECIFIED,\n    tokenId: tokenIdFromUrl,\n    chainId: chainId ?? supportedAccountChainId\n  });\n  const position = data?.position;\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const metadata = usePositionTokenURI(tokenId, chainInfo?.id, positionInfo?.version);\n  usePendingLPTransactionsChangeListener(refetch);\n  const dispatch = useAppDispatch();\n  const isMigrateToV4Enabled = useFeatureFlag(FeatureFlags.MigrateV3ToV4);\n  const { formatCurrencyAmount } = useFormatter();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { currency0Amount, currency1Amount, status } = positionInfo ?? {};\n  const {\n    feeValue0,\n    feeValue1,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    token0CurrentPrice,\n    token1CurrentPrice,\n    fiatValue0,\n    fiatValue1,\n    priceOrdering\n  } = useV3OrV4PositionDerivedInfo(positionInfo);\n  if (positionLoading) {\n    return <BodyWrapper><LoadingRows><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /></LoadingRows></BodyWrapper>;\n  }\n  if (!position || !positionInfo || !currency0Amount || !currency1Amount) {\n    return <NotFound\n      title={<Text variant=\"heading2\">{t(\"position.notFound\")}</Text>}\n      subtitle={<Flex centered maxWidth=\"75%\" mt=\"$spacing20\"><Text color=\"$neutral2\" variant=\"heading3\" textAlign=\"center\">{t(\"position.notFound.description\")}</Text></Flex>}\n      actionButton={<Button onPress={() => navigate(\"/positions\")}>{t(\"common.backToPositions\")}</Button>}\n    />;\n  }\n  const hasFees = feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || false;\n  const isOwner = addressesAreEquivalent(positionInfo.owner, account?.address);\n  const showV4UnsupportedTooltip = isV4UnsupportedChain(positionInfo.chainId);\n  return <Trace\n    logImpression\n    page={InterfacePageNameLocal.PositionDetails}\n    properties={{\n      pool_address: positionInfo.poolId,\n      label: [currency0Amount.currency.symbol, currency1Amount.currency.symbol].join(\"/\"),\n      type: positionInfo.version,\n      fee_tier: typeof positionInfo.feeTier === \"string\" ? parseInt(positionInfo.feeTier) : positionInfo.feeTier,\n      baseCurrencyId: currencyIdToAddress(currencyId(currency0Amount.currency)),\n      quoteCurrencyId: currencyIdToAddress(currencyId(currency1Amount.currency))\n    }}\n  ><Helmet><title>{t(`liquidityPool.positions.page.title`, {\n    quoteSymbol: currency1Amount.currency.symbol,\n    baseSymbol: currency0Amount.currency.symbol\n  })}</title></Helmet><BodyWrapper><Flex gap=\"$gap20\"><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink style={{ gap: \"8px\" }} to=\"/positions\"><ArrowLeft size={14} /> <Trans i18nKey=\"pool.positions.title\" /></BreadcrumbNavLink></BreadcrumbNavContainer><Flex\n    row\n    $lg={{ row: false, alignItems: \"flex-start\", gap: \"$gap16\" }}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  ><LiquidityPositionInfo positionInfo={positionInfo} linkToPool />{isOwner && <Flex row gap=\"$gap12\" alignItems=\"center\" flexWrap=\"wrap\">{positionInfo.version === ProtocolVersion.V3 && status !== PositionStatus.CLOSED && isMigrateToV4Enabled && <MouseoverTooltip\n    text={t(\"pool.migrateLiquidityDisabledTooltip\")}\n    disabled={!showV4UnsupportedTooltip}\n  ><Flex row><Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    isDisabled={showV4UnsupportedTooltip}\n    opacity={showV4UnsupportedTooltip ? 0.5 : 1}\n    onPress={() => {\n      navigate(`/migrate/v3/${chainInfo?.urlParam}/${tokenIdFromUrl}`);\n    }}\n  ><Trans i18nKey=\"pool.migrateToV4\" /></Button></Flex></MouseoverTooltip>}<Flex row><Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.AddLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  ><Trans i18nKey=\"common.addLiquidity\" /></Button></Flex>{status !== PositionStatus.CLOSED && <Flex row><Button\n    size=\"small\"\n    emphasis=\"primary\"\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.RemoveLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  ><Trans i18nKey=\"pool.removeLiquidity\" /></Button></Flex>}</Flex>}</Flex></Flex><Flex row $lg={{ row: false }} width=\"100%\" gap=\"$gap16\"><Flex\n    grow\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded12\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    flexBasis=\"50%\"\n  >{\"result\" in metadata ? <PositionNFT image={metadata.result.image} height={400} /> : <LoadingFullscreen style={{ borderRadius: 12, backgroundColor: \"transparent\" }} />}</Flex><Flex grow gap=\"$gap12\" flexBasis=\"50%\"><Flex borderRadius=\"$rounded16\" backgroundColor=\"$surface2\" p=\"$padding12\" gap=\"$gap16\"><Flex gap=\"$gap8\"><Text variant=\"subheading1\"><Trans i18nKey=\"common.liquidity\" /></Text><Text variant=\"heading2\">{fiatValue0 && fiatValue1 ? formatCurrencyAmount({\n    amount: fiatValue0.add(fiatValue1),\n    type: NumberType.FiatTokenPrice\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\"><Flex alignItems=\"center\" row gap=\"$gap8\"><Text variant=\"body1\" color=\"$neutral2\">{t(\"pool.positions.usdValueUnavailable\")}</Text><InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" /></Flex></MouseoverTooltip>}</Text></Flex><LiquidityPositionAmountsTile\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    fiatValue0={fiatValue0}\n    fiatValue1={fiatValue1}\n  /></Flex><Flex p=\"$padding12\" backgroundColor=\"$surface2\" borderRadius=\"$rounded16\"><Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\"><Text variant=\"subheading1\"><Trans i18nKey=\"pool.uncollectedFees\" /></Text>{hasFees && isOwner && <Flex row><Button\n    size=\"xsmall\"\n    emphasis=\"primary\"\n    onPress={() => {\n      if (hasFees) {\n        dispatch(\n          setOpenModal({\n            name: ModalName.ClaimFee,\n            initialState: positionInfo\n          })\n        );\n      }\n    }}\n  ><Trans i18nKey=\"pool.collectFees\" /></Button></Flex>}</Flex><Text variant=\"heading2\" mt=\"$spacing8\" mb=\"$spacing16\">{fiatFeeValue0 && fiatFeeValue1 ? formatCurrencyAmount({\n    amount: fiatFeeValue0.add(fiatFeeValue1),\n    type: NumberType.FiatTokenPrice\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\"><Flex alignItems=\"center\" row gap=\"$gap8\"><Text variant=\"body1\" color=\"$neutral2\">{t(\"pool.positions.usdValueUnavailable\")}</Text><InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" /></Flex></MouseoverTooltip>}</Text>{feeValue0 && feeValue1 && <LiquidityPositionAmountsTile\n    currency0Amount={feeValue0}\n    currency1Amount={feeValue1}\n    fiatValue0={fiatFeeValue0}\n    fiatValue1={fiatFeeValue1}\n  />}</Flex></Flex></Flex>{priceOrdering && token0CurrentPrice && token1CurrentPrice && <LiquidityPositionPriceRangeTile\n    token1={positionInfo.currency1Amount.currency}\n    priceOrdering={priceOrdering}\n    tickSpacing={positionInfo.tickSpacing}\n    tickLower={positionInfo.tickLower}\n    tickUpper={positionInfo.tickUpper}\n    token0CurrentPrice={token0CurrentPrice}\n    token1CurrentPrice={token1CurrentPrice}\n  />}</BodyWrapper></Trace>;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [ExchangeHorizontal, AnimatedExchangeHorizontal] = createIcon({\n  name: \"ExchangeHorizontal\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}><Path\n    d=\"M14.3532 9.68654L11.0198 13.0199C10.9225 13.1172 10.7945 13.1665 10.6665 13.1665C10.5385 13.1665 10.4105 13.1179 10.3131 13.0199C10.1178 12.8245 10.1178 12.5078 10.3131 12.3125L12.7931 9.83254H3.99982C3.72382 9.83254 3.49982 9.60854 3.49982 9.33254C3.49982 9.05654 3.72382 8.83254 3.99982 8.83254H13.9998C14.2025 8.83254 14.3846 8.95446 14.4619 9.14113C14.5392 9.32846 14.4965 9.54387 14.3532 9.68654ZM12.4998 5.99985C12.4998 5.72385 12.2758 5.49985 11.9998 5.49985H3.20717L5.68715 3.01987C5.88249 2.82454 5.88249 2.50785 5.68715 2.31252C5.49182 2.11718 5.17513 2.11718 4.9798 2.31252L1.64646 5.64585C1.50313 5.78852 1.46107 6.00378 1.53774 6.19045C1.61507 6.37711 1.79782 6.4992 1.99982 6.4992H11.9998C12.2758 6.49987 12.4998 6.27585 12.4998 5.99985Z\"\n    fill={\"currentColor\"}\n  /></Svg>,\n  defaultFill: \"#9B9B9B\"\n});\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { WrappedLiquidityPositionRangeChart } from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { LiquidityPositionAmountRows } from \"components/Liquidity/LiquidityPositionAmountRows\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { LiquidityPositionStackedBars } from \"components/Liquidity/LiquidityPositionStackedBars\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { useV3OrV4PositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { LoadingFullscreen, LoadingRows } from \"components/Loader/styled\";\nimport { LP_INCENTIVES_REWARD_TOKEN } from \"components/LpIncentives/constants\";\nimport { MouseoverTooltip } from \"components/Tooltip\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useSrcColor } from \"hooks/useColor\";\nimport { useLpIncentivesFormattedEarnings } from \"hooks/useLpIncentivesFormattedEarnings\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport NotFound from \"pages/NotFound\";\nimport { LegacyPositionPage } from \"pages/Pool/Positions/LegacyPositionPage\";\nimport { BaseQuoteFiatAmount } from \"pages/Pool/Positions/create/BaseQuoteFiatAmount\";\nimport { getInvertedTuple } from \"pages/Pool/Positions/create/utils\";\nimport { BodyWrapper, LoadingRow } from \"pages/Pool/Positions/shared\";\nimport { useMemo, useState } from \"react\";\nimport { ArrowLeft } from \"react-feather\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { MultichainContextProvider } from \"state/multichain/MultichainContext\";\nimport { usePendingLPTransactionsChangeListener } from \"state/transactions/hooks\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport {\n  Button,\n  Flex,\n  SegmentedControl,\n  Text,\n  TouchableArea,\n  useMedia,\n  useSporeColors\n} from \"ui/src\";\nimport { ExchangeHorizontal } from \"ui/src/components/icons/ExchangeHorizontal\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { RotatableChevron } from \"ui/src/components/icons/RotatableChevron\";\nimport { useDeviceDimensions } from \"ui/src/hooks/useDeviceDimensions\";\nimport { breakpoints } from \"ui/src/theme/breakpoints\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { HistoryDuration } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useGetPositionQuery } from \"uniswap/src/data/rest/getPosition\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal, ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useCurrencyInfos } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { buildCurrencyId, currencyId, currencyIdToAddress } from \"uniswap/src/utils/currencyId\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { isV4UnsupportedChain } from \"utils/networkSupportsV4\";\nimport { useAccount } from \"wagmi\";\nfunction parseTokenId(tokenId) {\n  if (!tokenId) {\n    return void 0;\n  }\n  try {\n    return BigNumber.from(tokenId);\n  } catch (error) {\n    return void 0;\n  }\n}\nexport default function PositionPageWrapper() {\n  const chainId = useChainIdFromUrlParam();\n  const isNewPositionPageEnabled = useFeatureFlag(FeatureFlags.PositionPageV2);\n  return <MultichainContextProvider initialChainId={chainId}>{isNewPositionPageEnabled ? <PositionPage /> : <LegacyPositionPage />}</MultichainContextProvider>;\n}\nfunction PositionPage() {\n  const { tokenId: tokenIdFromUrl } = useParams();\n  const tokenId = parseTokenId(tokenIdFromUrl);\n  const chainId = useChainIdFromUrlParam();\n  const chainInfo = chainId ? getChainInfo(chainId) : void 0;\n  const account = useAccount();\n  const supportedAccountChainId = useSupportedChainId(account.chainId);\n  const { pathname } = useLocation();\n  const {\n    data,\n    isLoading: positionLoading,\n    refetch\n  } = useGetPositionQuery({\n    owner: account?.address ?? ZERO_ADDRESS,\n    protocolVersion: pathname.includes(\"v3\") ? ProtocolVersion.V3 : pathname.includes(\"v4\") ? ProtocolVersion.V4 : ProtocolVersion.UNSPECIFIED,\n    tokenId: tokenIdFromUrl,\n    chainId: chainId ?? supportedAccountChainId\n  });\n  const position = data?.position;\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const metadata = usePositionTokenURI(tokenId, chainInfo?.id, positionInfo?.version);\n  usePendingLPTransactionsChangeListener(refetch);\n  const dispatch = useAppDispatch();\n  const isMigrateToV4Enabled = useFeatureFlag(FeatureFlags.MigrateV3ToV4);\n  const isLpIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const media = useMedia();\n  const { currency0Amount, currency1Amount, status } = positionInfo ?? {};\n  const {\n    feeValue0,\n    feeValue1,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    token0CurrentPrice,\n    token1CurrentPrice,\n    fiatValue0,\n    fiatValue1,\n    priceOrdering\n  } = useV3OrV4PositionDerivedInfo(positionInfo);\n  const [priceInverted, setPriceInverted] = useState(false);\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(\n    [currency0Amount?.currency, currency1Amount?.currency],\n    priceInverted\n  );\n  const [selectedHistoryDuration, setSelectedHistoryDuration] = useState(HistoryDuration.Month);\n  const [timePeriodDropdownOpen, setTimePeriodDropdownOpen] = useState(false);\n  const [mainViewDropdownOpen, setMainViewDropdownOpen] = useState(false);\n  const timePeriodOptions = useMemo(() => {\n    const options = [\n      [\n        HistoryDuration.Day,\n        t(\"token.priceExplorer.timeRangeLabel.day\"),\n        t(\"token.priceExplorer.timeRangeLabel.day.verbose\")\n      ],\n      [\n        HistoryDuration.Week,\n        t(\"token.priceExplorer.timeRangeLabel.week\"),\n        t(\"token.priceExplorer.timeRangeLabel.week.verbose\")\n      ],\n      [\n        HistoryDuration.Month,\n        t(\"token.priceExplorer.timeRangeLabel.month\"),\n        t(\"token.priceExplorer.timeRangeLabel.month.verbose\")\n      ],\n      [\n        HistoryDuration.Year,\n        t(\"token.priceExplorer.timeRangeLabel.year\"),\n        t(\"token.priceExplorer.timeRangeLabel.year.verbose\")\n      ],\n      [HistoryDuration.Max, t(\"token.priceExplorer.timeRangeLabel.all\")]\n    ].map((timePeriod) => ({\n      value: timePeriod[0],\n      display: <Text variant=\"buttonLabel3\">{timePeriod[1]}</Text>,\n      verboseDisplay: <Text variant=\"buttonLabel3\">{timePeriod[2] ?? timePeriod[1]}</Text>\n    }));\n    return {\n      options,\n      selected: selectedHistoryDuration\n    };\n  }, [selectedHistoryDuration, t]);\n  const [mainView, setMainView] = useState(\"chart\");\n  const mainViewOptions = useMemo(() => {\n    return [\n      {\n        value: \"chart\",\n        display: <Text variant=\"buttonLabel3\">{t(\"common.chart\")}</Text>\n      },\n      {\n        value: \"nft\",\n        display: <Text variant=\"buttonLabel3\">{t(\"common.nft\")}</Text>\n      }\n    ];\n  }, [t]);\n  const { fullWidth: screenWidth } = useDeviceDimensions();\n  const chartWidth = useMemo(() => {\n    if (screenWidth && screenWidth < breakpoints.lg) {\n      return screenWidth - 64;\n    }\n    if (screenWidth && screenWidth < breakpoints.xxl) {\n      return Math.min((screenWidth - 32) / 2, 620);\n    }\n    return 620;\n  }, [screenWidth]);\n  if (positionLoading) {\n    return <BodyWrapper><LoadingRows><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /></LoadingRows></BodyWrapper>;\n  }\n  if (!position || !positionInfo || !currency0Amount || !currency1Amount || !baseCurrency || !quoteCurrency) {\n    return <NotFound\n      title={<Text variant=\"heading2\">{t(\"position.notFound\")}</Text>}\n      subtitle={<Flex centered maxWidth=\"75%\" mt=\"$spacing20\"><Text color=\"$neutral2\" variant=\"heading3\" textAlign=\"center\">{t(\"position.notFound.description\")}</Text></Flex>}\n      actionButton={<Flex row centered><Button width=\"fit-content\" variant=\"branded\" onPress={() => navigate(\"/positions\")}>{t(\"common.backToPositions\")}</Button></Flex>}\n    />;\n  }\n  const hasFees = feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || false;\n  const isOwner = addressesAreEquivalent(positionInfo.owner, account?.address);\n  const showV4UnsupportedTooltip = isV4UnsupportedChain(positionInfo.chainId);\n  return <Trace\n    logImpression\n    page={InterfacePageNameLocal.PositionDetails}\n    properties={{\n      pool_address: positionInfo.poolId,\n      label: [currency0Amount.currency.symbol, currency1Amount.currency.symbol].join(\"/\"),\n      type: positionInfo.version,\n      fee_tier: typeof positionInfo.feeTier === \"string\" ? parseInt(positionInfo.feeTier) : positionInfo.feeTier,\n      baseCurrencyId: currencyIdToAddress(currencyId(currency0Amount.currency)),\n      quoteCurrencyId: currencyIdToAddress(currencyId(currency1Amount.currency))\n    }}\n  ><Helmet><title>{t(`liquidityPool.positions.page.title`, {\n    quoteSymbol: currency1Amount.currency.symbol,\n    baseSymbol: currency0Amount.currency.symbol\n  })}</title></Helmet><BodyWrapper mb={100}><Flex gap=\"$gap20\"><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink style={{ gap: \"8px\" }} to=\"/positions\"><ArrowLeft size={14} /> <Trans i18nKey=\"pool.positions.title\" /></BreadcrumbNavLink></BreadcrumbNavContainer><Flex\n    row\n    $lg={{ row: false, alignItems: \"flex-start\", gap: \"$gap16\" }}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n    borderBottomWidth={1}\n    borderColor=\"$surface3\"\n    pb=\"$padding16\"\n  ><LiquidityPositionInfo\n    positionInfo={positionInfo}\n    linkToPool\n    includeNetwork\n    includeLpIncentives={isLpIncentivesEnabled}\n  />{isOwner && <Flex row gap=\"$gap12\" alignItems=\"center\" flexWrap=\"wrap\">{positionInfo.version === ProtocolVersion.V3 && status !== PositionStatus.CLOSED && isMigrateToV4Enabled && <MouseoverTooltip\n    text={t(\"pool.migrateLiquidityDisabledTooltip\")}\n    disabled={!showV4UnsupportedTooltip}\n    style={media.sm ? { width: \"100%\", display: \"block\" } : {}}\n  ><Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    $sm={{ width: \"100%\" }}\n    fill={false}\n    isDisabled={showV4UnsupportedTooltip}\n    opacity={showV4UnsupportedTooltip ? 0.5 : 1}\n    onPress={() => {\n      navigate(`/migrate/v3/${chainInfo?.urlParam}/${tokenIdFromUrl}`);\n    }}\n  >{t(\"pool.migrateToV4\")}</Button></MouseoverTooltip>}<Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    $sm={{ width: \"100%\" }}\n    fill={false}\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.AddLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  >{t(\"common.addLiquidity\")}</Button>{status !== PositionStatus.CLOSED && <Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    fill={false}\n    $sm={{ width: \"100%\" }}\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.RemoveLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  >{t(\"pool.removeLiquidity\")}</Button>}{hasFees && isOwner && <Button\n    size=\"small\"\n    maxWidth=\"fit-content\"\n    fill={false}\n    onPress={() => {\n      if (hasFees) {\n        dispatch(\n          setOpenModal({\n            name: ModalName.ClaimFee,\n            initialState: positionInfo\n          })\n        );\n      }\n    }}\n  >{t(\"pool.collectFees\")}</Button>}</Flex>}</Flex></Flex><Flex row justifyContent=\"space-between\" pt=\"$padding20\" $lg={{ row: false, gap: \"$gap24\" }}><Flex gap=\"$gap12\" width={chartWidth}><Flex row gap=\"$gap8\" alignItems=\"center\"><BaseQuoteFiatAmount\n    price={priceInverted ? token1CurrentPrice : token0CurrentPrice}\n    base={priceInverted ? currency1Amount.currency : currency0Amount.currency}\n    quote={priceInverted ? currency0Amount.currency : currency1Amount.currency}\n    variant=\"heading3\"\n  /><TouchableArea\n    onPress={() => {\n      setPriceInverted((prev) => !prev);\n    }}\n  ><ExchangeHorizontal size=\"$icon.16\" /></TouchableArea></Flex><Flex\n    animation=\"fast\"\n    height=\"auto\"\n    width=\"100%\"\n    $lg={{ width: \"100%\" }}\n    borderWidth={0}\n    borderColor=\"$surface3\"\n    pb=\"$padding12\"\n  >{mainView === \"chart\" ? <WrappedLiquidityPositionRangeChart\n    version={positionInfo.version}\n    quoteCurrency={quoteCurrency}\n    baseCurrency={baseCurrency}\n    poolAddressOrId={positionInfo.poolId}\n    chainId={positionInfo.chainId}\n    tickSpacing={positionInfo.tickSpacing}\n    feeTier={positionInfo.feeTier}\n    hook={positionInfo.v4hook}\n    positionStatus={status}\n    priceOrdering={priceInverted ? {\n      base: priceOrdering.quote,\n      priceLower: priceOrdering.priceUpper?.invert(),\n      priceUpper: priceOrdering.priceLower?.invert()\n    } : priceOrdering}\n    duration={selectedHistoryDuration}\n    width={chartWidth}\n    height={440}\n    showXAxis\n    showYAxis\n    showLiquidityBars\n    showChartBorder\n    crosshairEnabled={false}\n  /> : <Flex\n    width=\"100%\"\n    height=\"100%\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    py=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded20\"\n  >{\"result\" in metadata ? <PositionNFT image={metadata.result.image} height={400} /> : <LoadingFullscreen style={{ borderRadius: 12, backgroundColor: \"transparent\" }} />}</Flex>}</Flex><Flex row alignItems=\"center\" justifyContent=\"space-between\" flexDirection=\"row-reverse\" width=\"100%\">{isMobileWeb ? <DropdownSelector\n    containerStyle={{ width: \"auto\" }}\n    menuLabel={<Flex\n      borderRadius=\"$rounded16\"\n      backgroundColor=\"transparent\"\n      row\n      centered\n      p=\"$padding8\"\n      pl=\"$padding12\"\n      borderColor=\"$surface3\"\n      borderWidth=\"$spacing1\"\n      gap=\"$gap6\"\n      {...ClickableTamaguiStyle}\n    >{mainViewOptions.find((p) => p.value === mainView)?.display}<RotatableChevron direction=\"down\" height={16} width={16} color=\"$neutral2\" /></Flex>}\n    buttonStyle={{\n      borderWidth: 0,\n      p: 0\n    }}\n    dropdownStyle={{\n      width: 160\n    }}\n    hideChevron\n    isOpen={mainViewDropdownOpen}\n    toggleOpen={() => {\n      setMainViewDropdownOpen((prev) => !prev);\n    }}\n  >{mainViewOptions.map((p) => <Flex\n    key={p.value}\n    width=\"100%\"\n    height={32}\n    row\n    alignItems=\"center\"\n    justifyContent=\"flex-start\"\n    p=\"$padding12\"\n    onPress={() => {\n      setMainView(p.value);\n    }}\n  >{p.display}</Flex>)}</DropdownSelector> : <SegmentedControl\n    options={mainViewOptions}\n    selectedOption={mainView}\n    onSelectOption={(option) => {\n      setMainView(option);\n    }}\n  />}{mainView === \"chart\" && (isMobileWeb ? <DropdownSelector\n    containerStyle={{ width: \"auto\" }}\n    menuLabel={<Flex\n      borderRadius=\"$rounded16\"\n      backgroundColor=\"transparent\"\n      row\n      centered\n      p=\"$padding8\"\n      pl=\"$padding12\"\n      borderColor=\"$surface3\"\n      borderWidth=\"$spacing1\"\n      gap=\"$gap6\"\n      {...ClickableTamaguiStyle}\n    >{timePeriodOptions.options.find((p) => p.value === timePeriodOptions.selected)?.display}<RotatableChevron direction=\"down\" height={16} width={16} color=\"$neutral2\" /></Flex>}\n    buttonStyle={{\n      borderWidth: 0,\n      p: 0\n    }}\n    dropdownStyle={{\n      width: 160,\n      left: 0\n    }}\n    hideChevron\n    isOpen={timePeriodDropdownOpen}\n    toggleOpen={() => {\n      setTimePeriodDropdownOpen((prev) => !prev);\n    }}\n  >{timePeriodOptions.options.map((p) => <Flex\n    key={p.value}\n    width=\"100%\"\n    height={32}\n    row\n    alignItems=\"center\"\n    justifyContent=\"flex-start\"\n    p=\"$padding12\"\n    onPress={() => {\n      setSelectedHistoryDuration(p.value);\n    }}\n  >{p.verboseDisplay}</Flex>)}</DropdownSelector> : <SegmentedControl\n    options={timePeriodOptions.options}\n    selectedOption={timePeriodOptions.selected}\n    onSelectOption={(option) => {\n      setSelectedHistoryDuration(option);\n    }}\n  />)}</Flex></Flex><Flex gap=\"$spacing20\"><PositionSection\n    position={position}\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    fiatValue0={fiatValue0}\n    fiatValue1={fiatValue1}\n  /><EarningsSection\n    positionInfo={positionInfo}\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    fiatValue0={fiatValue0}\n    fiatValue1={fiatValue1}\n    fiatFeeValue0={fiatFeeValue0}\n    fiatFeeValue1={fiatFeeValue1}\n    feeValue0={feeValue0}\n    feeValue1={feeValue1}\n  />{isLpIncentivesEnabled && positionInfo?.version === ProtocolVersion.V4 && Boolean(positionInfo.boostedApr) && <APRSection\n    poolApr={positionInfo.apr}\n    lpIncentiveRewardApr={positionInfo.boostedApr}\n    totalApr={positionInfo.totalApr}\n  />}</Flex></Flex></BodyWrapper></Trace>;\n}\nconst SectionContainer = ({ children }) => {\n  return <Flex\n    p=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    width={380}\n    $lg={{ width: \"100%\" }}\n    borderRadius=\"$rounded16\"\n    gap=\"$spacing24\"\n    $platform-web={{\n      height: \"min-content\"\n    }}\n  >{children}</Flex>;\n};\nconst PositionSection = ({\n  position,\n  currency0Amount,\n  currency1Amount,\n  fiatValue0,\n  fiatValue1\n}) => {\n  const { formatCurrencyAmount } = useFormatter();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const currencyInfo0 = useCurrencyInfo(currency0Amount.currency);\n  const currencyInfo1 = useCurrencyInfo(currency1Amount.currency);\n  const token0Color = useSrcColor(\n    currencyInfo0?.logoUrl ?? void 0,\n    currencyInfo0?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const token1Color = useSrcColor(\n    currencyInfo1?.logoUrl ?? void 0,\n    currencyInfo1?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const totalFiatValue = fiatValue0?.add(fiatValue1 ?? CurrencyAmount.fromRawAmount(fiatValue0.currency, 0));\n  const bars = useMemo(() => {\n    const percent0 = totalFiatValue?.greaterThan(0) && fiatValue0 ? new Percent(fiatValue0.quotient, totalFiatValue.quotient) : void 0;\n    const percent1 = totalFiatValue?.greaterThan(0) && fiatValue1 ? new Percent(fiatValue1.quotient, totalFiatValue.quotient) : void 0;\n    if (!percent0 || !percent1 || !token0Color || !token1Color || !currencyInfo0 || !currencyInfo1) {\n      return [];\n    }\n    return [\n      { value: percent0, color: token0Color, currencyInfo: currencyInfo0 },\n      { value: percent1, color: token1Color, currencyInfo: currencyInfo1 }\n    ];\n  }, [currencyInfo0, currencyInfo1, fiatValue0, fiatValue1, token0Color, token1Color, totalFiatValue]);\n  const rows = useMemo(() => {\n    if (!currencyInfo0 || !currencyInfo1) {\n      return [];\n    }\n    return [\n      {\n        currencyInfo: currencyInfo0,\n        currencyAmount: currency0Amount,\n        fiatValue: fiatValue0\n      },\n      {\n        currencyInfo: currencyInfo1,\n        currencyAmount: currency1Amount,\n        fiatValue: fiatValue1\n      }\n    ];\n  }, [currencyInfo0, currencyInfo1, currency0Amount, currency1Amount, fiatValue0, fiatValue1]);\n  return <SectionContainer><Flex gap=\"$gap8\"><Text color=\"$neutral2\" variant=\"body2\"><Trans i18nKey=\"pool.position\" /></Text>{position.status === PositionStatus.CLOSED ? <Text variant=\"heading2\" $lg={{ variant: \"heading3\" }}>{formatCurrencyAmount({\n    amount: CurrencyAmount.fromRawAmount(currency0Amount.currency, 0),\n    type: NumberType.FiatTokenPrice\n  })}</Text> : <><Text variant=\"heading2\" mb=\"$spacing12\">{fiatValue0 && fiatValue1 ? formatCurrencyAmount({\n    amount: fiatValue0.add(fiatValue1),\n    type: NumberType.FiatTokenPrice\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\"><Flex alignItems=\"center\" row gap=\"$gap8\"><Text variant=\"body1\" color=\"$neutral2\">{t(\"pool.positions.usdValueUnavailable\")}</Text><InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" /></Flex></MouseoverTooltip>}</Text>{bars.length > 0 && <Flex mb=\"$spacing24\"><LiquidityPositionStackedBars bars={bars} /></Flex>}{rows.length > 0 && <LiquidityPositionAmountRows rows={rows} />}</>}</Flex></SectionContainer>;\n};\nconst APRSection = ({\n  poolApr,\n  lpIncentiveRewardApr,\n  totalApr\n}) => {\n  const { address, chainId, symbol } = LP_INCENTIVES_REWARD_TOKEN;\n  const currencyInfo = useCurrencyInfo(address, chainId);\n  const { t } = useTranslation();\n  const { formatPercent } = useLocalizationContext();\n  const displayPoolApr = poolApr ? formatPercent(poolApr) : \"-\";\n  const displayRewardApr = lpIncentiveRewardApr ? formatPercent(lpIncentiveRewardApr) : \"-\";\n  const displayTotalApr = totalApr ? formatPercent(totalApr) : \"-\";\n  return <SectionContainer><Flex justifyContent=\"space-between\" gap=\"$gap8\"><Text color=\"$neutral2\" variant=\"body2\">{t(\"pool.totalAPR\")}</Text><Text color=\"$neutral1\" variant=\"heading2\" pb=\"$spacing4\">{displayTotalApr}</Text><Flex row justifyContent=\"space-between\"><Text color=\"$neutral2\" variant=\"body3\">{t(\"pool.aprText\")}</Text><Text color=\"$neutral1\" variant=\"body3\">{displayPoolApr}</Text></Flex><Flex row justifyContent=\"space-between\"><Text color=\"$neutral2\" variant=\"body3\">{t(\"pool.rewardAPR\")}</Text><Flex row gap=\"$spacing6\" alignItems=\"center\"><CurrencyLogo currencyInfo={currencyInfo} size={16} /><Text color=\"$accent1\" variant=\"body3\">{displayRewardApr} {symbol}</Text></Flex></Flex></Flex></SectionContainer>;\n};\nconst EarningsSection = ({\n  positionInfo,\n  currency0Amount,\n  currency1Amount,\n  fiatFeeValue0,\n  fiatFeeValue1,\n  feeValue0,\n  feeValue1\n}) => {\n  const { formatCurrencyAmount } = useFormatter();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const isLpIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const { uniLpRewardsCurrencyAmount, uniLpRewardsFiatValue, totalEarningsFiatValue, hasRewards, hasFees } = useLpIncentivesFormattedEarnings({\n    liquidityPosition: positionInfo,\n    fiatFeeValue0,\n    fiatFeeValue1\n  });\n  const [currencyInfo0, currencyInfo1, rewardCurrencyInfo] = useCurrencyInfos([\n    currencyId(currency0Amount.currency),\n    currencyId(currency1Amount.currency),\n    buildCurrencyId(UniverseChainId.Mainnet, LP_INCENTIVES_REWARD_TOKEN.address)\n  ]);\n  const token0Color = useSrcColor(\n    currencyInfo0?.logoUrl ?? void 0,\n    currencyInfo0?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const token1Color = useSrcColor(\n    currencyInfo1?.logoUrl ?? void 0,\n    currencyInfo1?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const rewardTokenColor = useSrcColor(\n    rewardCurrencyInfo?.logoUrl ?? void 0,\n    rewardCurrencyInfo?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const bars = useMemo(() => {\n    const percent0 = totalEarningsFiatValue?.greaterThan(0) && fiatFeeValue0 ? new Percent(fiatFeeValue0.quotient, totalEarningsFiatValue.quotient) : void 0;\n    const percent1 = totalEarningsFiatValue?.greaterThan(0) && fiatFeeValue1 ? new Percent(fiatFeeValue1.quotient, totalEarningsFiatValue.quotient) : void 0;\n    if (!percent0 || !percent1 || !token0Color || !token1Color || !currencyInfo0 || !currencyInfo1) {\n      return [];\n    }\n    const rewards = isLpIncentivesEnabled && rewardTokenColor && uniLpRewardsFiatValue?.greaterThan(0) && totalEarningsFiatValue?.greaterThan(0) && hasRewards ? [\n      {\n        value: new Percent(uniLpRewardsFiatValue.quotient, totalEarningsFiatValue.quotient),\n        color: rewardTokenColor,\n        currencyInfo: rewardCurrencyInfo\n      }\n    ] : [];\n    return [\n      { value: percent0, color: token0Color, currencyInfo: currencyInfo0 },\n      { value: percent1, color: token1Color, currencyInfo: currencyInfo1 },\n      ...rewards\n    ];\n  }, [\n    totalEarningsFiatValue,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    token0Color,\n    token1Color,\n    currencyInfo0,\n    currencyInfo1,\n    isLpIncentivesEnabled,\n    rewardTokenColor,\n    uniLpRewardsFiatValue,\n    hasRewards,\n    rewardCurrencyInfo\n  ]);\n  const feeRows = useMemo(() => {\n    if (!currencyInfo0 || !currencyInfo1 || !feeValue0 || !feeValue1) {\n      return [];\n    }\n    return [\n      {\n        currencyInfo: currencyInfo0,\n        currencyAmount: feeValue0,\n        fiatValue: fiatFeeValue0\n      },\n      {\n        currencyInfo: currencyInfo1,\n        currencyAmount: feeValue1,\n        fiatValue: fiatFeeValue1\n      }\n    ];\n  }, [currencyInfo0, currencyInfo1, feeValue0, feeValue1, fiatFeeValue0, fiatFeeValue1]);\n  const rewardRows = useMemo(() => {\n    if (!isLpIncentivesEnabled || !rewardCurrencyInfo || !hasRewards) {\n      return [];\n    }\n    return [\n      {\n        currencyInfo: rewardCurrencyInfo,\n        currencyAmount: uniLpRewardsCurrencyAmount || CurrencyAmount.fromRawAmount(rewardCurrencyInfo.currency, 0),\n        fiatValue: uniLpRewardsFiatValue\n      }\n    ];\n  }, [isLpIncentivesEnabled, rewardCurrencyInfo, uniLpRewardsCurrencyAmount, uniLpRewardsFiatValue, hasRewards]);\n  return <SectionContainer><Flex gap=\"$gap8\"><Text color=\"$neutral2\" variant=\"body2\">{isLpIncentivesEnabled && hasRewards ? t(\"pool.earnings\") : t(\"common.feesEarned\")}</Text>{positionInfo.status === PositionStatus.CLOSED ? <Text variant=\"heading2\">{formatCurrencyAmount({\n    amount: CurrencyAmount.fromRawAmount(currency0Amount.currency, 0),\n    type: NumberType.FiatRewards\n  })}</Text> : <><Text variant=\"heading2\" mb=\"$spacing12\">{totalEarningsFiatValue ? formatCurrencyAmount({\n    amount: totalEarningsFiatValue,\n    type: NumberType.FiatRewards\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\"><Flex alignItems=\"center\" row gap=\"$gap8\"><Text variant=\"body1\" color=\"$neutral2\">{t(\"pool.positions.usdValueUnavailable\")}</Text><InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" /></Flex></MouseoverTooltip>}</Text>{bars.length > 0 && <Flex mb=\"$spacing24\"><LiquidityPositionStackedBars bars={bars} /></Flex>}{isLpIncentivesEnabled ? <>{hasRewards && rewardRows.length > 0 && <><Text color=\"$neutral2\" variant=\"body2\" mb=\"$spacing12\">{t(\"pool.rewards\")}</Text><LiquidityPositionAmountRows rows={rewardRows} /></>}{hasFees && feeRows.length > 0 && <><Text color=\"$neutral2\" variant=\"body2\" mb=\"$spacing12\" mt={hasRewards ? \"$spacing24\" : \"$none\"}>{t(\"common.fees\")}</Text><LiquidityPositionAmountRows rows={feeRows} /></>}</> : feeRows.length > 0 && <LiquidityPositionAmountRows rows={feeRows} />}{(!totalEarningsFiatValue || totalEarningsFiatValue.equalTo(0)) && <Text variant=\"body3\" color=\"$neutral3\">{t(\"pool.earnings.empty\")}</Text>}</>}</Flex></SectionContainer>;\n};\n","\"use strict\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { Text } from \"ui/src\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport function BaseQuoteFiatAmount({\n  price,\n  base,\n  quote,\n  variant\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const quoteCurrencyAmount = tryParseCurrencyAmount(price?.toFixed(), price?.quoteCurrency);\n  const usdPrice = useUSDCValue(quoteCurrencyAmount);\n  if (!price || !base || !quote) {\n    return null;\n  }\n  return <><Text variant={variant ?? \"body3\"} color=\"$neutral1\">{formatPrice({ price, type: NumberType.TokenTx })} {quote?.symbol} = 1 {base?.symbol}</Text>{\" \"}<Text variant={variant ?? \"body3\"} color=\"$neutral2\">\r\n        (\r\n        {formatCurrencyAmount({\n    amount: usdPrice,\n    type: NumberType.FiatTokenPrice\n  })}\r\n        )\r\n      </Text></>;\n}\n","import { useQuery } from \"@connectrpc/connect-query\";\nimport { getPosition } from \"@uniswap/client-pools/dist/pools/v1/api-PoolsService_connectquery\";\nimport { uniswapGetTransport } from \"uniswap/src/data/rest/base\";\nexport function useGetPositionQuery(input) {\n  return useQuery(getPosition, input, { transport: uniswapGetTransport, enabled: !!input });\n}\n"],"names":["BreadcrumbNavContainer","styled","nav","theme","neutral2","BreadcrumbNavLink","Link","transition","duration","fast","neutral3","CurrentPageBreadcrumbContainer","Row","PageTitleText","h1","neutral1","TokenAddressHoverContainer","isDisabled","CopyIcon","Copy","ClickableStyle","CurrentPageBreadcrumb","address","currency","poolName","t","useTranslation","useTheme","hover","setHover","useState","isCopied","setCopied","useCopyClipboard","copy","useCallback","isNative","tokenSymbolName","symbol","shouldEnableCopy","useMedia","md","shouldShowActions","aria-current","data-testid","onMouseEnter","onMouseLeave","onClick","MouseoverTooltip","placement","size","TooltipSize","Max","forceShow","text","disabled","shortenAddress","width","height","color","_cn","Image","img","Container","div","Header","PageWrapper","breakpoint","lg","NotFound","title","subtitle","actionButton","isDarkMode","useIsDarkMode","isMobile","useIsMobile","navigate","useNavigate","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","logImpression","page","InterfacePageName","NOT_FOUND","Trans","i18nKey","src","darkImage","lightImage","alt","className","Button","onPress","variant","LiquidityPositionAmountRows","rows","formatCurrencyAmount","useLocalizationContext","chainUrlParam","getChainUrlParam","currencyInfo","chainId","UniverseChainId","Mainnet","getLink","getTokenDetailsURL","isToken","map","row","TouchableArea","ClickableTamaguiStyle","CurrencyLogo","Text","$lg","numberOfLines","value","fiatValue","type","NumberType","FiatTokenPrice","currencyAmount","TokenNonTx","currencyId","LiquidityPositionStackedBars","bars","formatPercent","scale","useMemo","sum","reduce","acc","bar","add","Percent","sumValue","equalTo","Number","toFixed","scaleLinear","domain","range","safePercentToNumber","percent","i","Flex","borderRadius","backgroundColor","getSnapshot","canvas","targetHeight","context","getContext","ratio","Math","round","devicePixelRatio","style","clearRect","drawImage","NFTGrid","NFTCanvas","NFTImage","PositionNFT","image","animate","setAnimate","canvasRef","useRef","imageRef","current","ref","hidden","onLoad","STARTS_WITH","usePositionTokenURI","tokenId","version","contract","v3Contract","useV3NFTPositionManagerContract","v4Contract","useV4NFTPositionManagerContract","ProtocolVersion","V3","useNFTPositionManagerContract","data","isLoading","error","useQuery","queryKey","ReactQueryCacheKey","PositionTokenURI","queryFn","input","BigNumber","toHexString","toString","tokenURI","valid","loading","startsWith","result","JSON","parse","atob","slice","length","error2","_cn4","_cn3","_cn2","LiquidityPositionAmountsTile","currency0Amount","currency1Amount","fiatValue0","fiatValue1","currencyInfo0","currencyInfo1","totalFiatValue","useCurrencyInfo","CurrencyAmount","fromRawAmount","getChainInfo","urlParam","currency0Link","currency1Link","greaterThan","toExact","quotient","InnerTile","grow","alignItems","gap","p","LiquidityPositionPriceRangeTile","token1","priceOrdering","token0CurrentPrice","token1CurrentPrice","tickSpacing","tickLower","tickUpper","formatPrice","useFormatter","pricesInverted","setPricesInverted","currencyASymbol","baseCurrency","currencyBSymbol","quoteCurrency","controlOptions","display","Error","minPrice","maxPrice","tokenASymbol","tokenBSymbol","useGetRangeDisplay","currentPrice","base","equals","SegmentedControl","options","selectedOption","onSelectOption","selected","values","symbolA","symbolB","price","TokenTx","_cn13","_cn12","_cn11","_cn10","_cn9","_cn8","_cn7","_cn6","_cn5","BodyWrapper","Main","flexDirection","maxWidth","zIndex","py","px","LegacyPositionPage","account","chainInfo","positionInfo","feeValue0","feeValue1","tokenIdFromUrl","useParams","from","parseTokenId","useChainIdFromUrlParam","useAccount","supportedAccountChainId","useSupportedChainId","pathname","useLocation","positionLoading","refetch","useGetPositionQuery","owner","ZERO_ADDRESS","protocolVersion","includes","V4","UNSPECIFIED","position","parseRestPosition","metadata","id","usePendingLPTransactionsChangeListener","dispatch","useAppDispatch","isMigrateToV4Enabled","useFeatureFlag","FeatureFlags","MigrateV3ToV4","status","fiatFeeValue0","fiatFeeValue1","useV3OrV4PositionDerivedInfo","LoadingRows","LoadingRow","textAlign","hasFees","isOwner","addressesAreEquivalent","showV4UnsupportedTooltip","isV4UnsupportedChain","InterfacePageNameLocal","PositionDetails","properties","pool_address","poolId","label","join","fee_tier","feeTier","parseInt","baseCurrencyId","currencyIdToAddress","quoteCurrencyId","Helmet","quoteSymbol","baseSymbol","aria-label","to","ArrowLeft","LiquidityPositionInfo","linkToPool","PositionStatus","CLOSED","emphasis","opacity","setOpenModal","name","ModalName","AddLiquidity","initialState","RemoveLiquidity","LoadingFullscreen","amount","InfoCircleFilled","ClaimFee","mt","mb","ExchangeHorizontal","AnimatedExchangeHorizontal","createIcon","getIcon","props","Svg","viewBox","fill","Path","d","defaultFill","_cn16","_cn14","PositionPageWrapper","isNewPositionPageEnabled","PositionPageV2","MultichainContextProvider","initialChainId","PositionPage","mainViewOptions","timePeriodOptions","isLpIncentivesEnabled","LpIncentives","media","priceInverted","setPriceInverted","getInvertedTuple","selectedHistoryDuration","setSelectedHistoryDuration","HistoryDuration","Month","timePeriodDropdownOpen","setTimePeriodDropdownOpen","mainViewDropdownOpen","setMainViewDropdownOpen","Day","Week","Year","timePeriod","verboseDisplay","mainView","setMainView","fullWidth","screenWidth","useDeviceDimensions","chartWidth","breakpoints","xxl","min","includeNetwork","includeLpIncentives","sm","$sm","BaseQuoteFiatAmount","quote","prev","animation","borderWidth","borderColor","pb","WrappedLiquidityPositionRangeChart","poolAddressOrId","hook","v4hook","positionStatus","priceLower","priceUpper","invert","showXAxis","showYAxis","showLiquidityBars","showChartBorder","crosshairEnabled","isMobileWeb","DropdownSelector","containerStyle","menuLabel","centered","pl","find","RotatableChevron","direction","buttonStyle","dropdownStyle","hideChevron","isOpen","toggleOpen","option","left","PositionSection","EarningsSection","Boolean","boostedApr","APRSection","poolApr","apr","lpIncentiveRewardApr","totalApr","SectionContainer","children","$platform-web","colors","useSporeColors","token0Color","useSrcColor","logoUrl","surface2","val","tokenColor","token1Color","percent0","percent1","LP_INCENTIVES_REWARD_TOKEN","displayPoolApr","displayRewardApr","displayTotalApr","rewardCurrencyInfo","uniLpRewardsCurrencyAmount","uniLpRewardsFiatValue","totalEarningsFiatValue","hasRewards","useLpIncentivesFormattedEarnings","liquidityPosition","useCurrencyInfos","buildCurrencyId","rewardTokenColor","rewards","feeRows","rewardRows","FiatRewards","quoteCurrencyAmount","tryParseCurrencyAmount","usdPrice","useUSDCValue","getPosition","transport","uniswapGetTransport","enabled"],"sourceRoot":""}