{"version":3,"file":"static/js/4301.addb84b0.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Liquidity/DepositInputForm.tsx?a56b","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/Deposit.tsx?5860","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/CreatePositionModal.tsx?3f35","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/CreatePosition.tsx?2c79","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/ConfirmCreatePositionModal.tsx?606a","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/ResetCreatePositionsFormModal.tsx?3f99","webpack://@uniswap/interface/./src/components/Liquidity/DepositInputForm.tsx?ca57","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/ConfirmCreatePositionModal.tsx?9d9a","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/CreatePositionModal.tsx?5bca","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/Deposit.tsx?32c5","../../../packages/ui/src/components/icons/QuestionInCircle.tsx","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/ResetCreatePositionsFormModal.tsx?c97a","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/CreatePosition.tsx?c7b6"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useNativeTokenPercentageBufferExperiment } from \"pages/Pool/Positions/create/hooks/useNativeTokenPercentageBufferExperiment\";\nimport { useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { Flex } from \"ui/src\";\nimport { CurrencyInputPanel } from \"uniswap/src/components/CurrencyInputPanel/CurrencyInputPanel\";\nimport { CurrencyField } from \"uniswap/src/types/currency\";\nfunction UnderCardComponent({ children }) {\n  return <Flex\n    backgroundColor=\"$surface2\"\n    borderBottomLeftRadius=\"$rounded20\"\n    borderBottomRightRadius=\"$rounded20\"\n    py=\"$spacing8\"\n    px=\"$spacing16\"\n  >{children}</Flex>;\n}\nexport function DepositInputForm({\n  token0,\n  token1,\n  currencyAmounts,\n  currencyBalances,\n  currencyAmountsUSDValue,\n  formattedAmounts,\n  onUserInput,\n  onSetMax,\n  deposit0Disabled,\n  deposit1Disabled,\n  token0UnderCardComponent,\n  token1UnderCardComponent,\n  amount0Loading,\n  amount1Loading,\n  autofocus = true\n}) {\n  const bufferPercentage = useNativeTokenPercentageBufferExperiment();\n  const [focusedInputField, setFocusedInputField] = useState(autofocus ? PositionField.TOKEN0 : void 0);\n  const token0CurrencyInfo = useCurrencyInfo(token0);\n  const token1CurrencyInfo = useCurrencyInfo(token1);\n  const handleUserInput = (field) => {\n    return (newValue) => {\n      onUserInput(field, newValue);\n    };\n  };\n  const handleOnSetMax = (field) => {\n    return (amount) => {\n      setFocusedInputField(field);\n      onSetMax(field, amount);\n    };\n  };\n  return <Flex gap=\"$gap4\">{!deposit0Disabled && <Flex gap={2}><CurrencyInputPanel\n    focus={focusedInputField === PositionField.TOKEN0}\n    borderTopLeftRadius=\"$rounded20\"\n    borderTopRightRadius=\"$rounded20\"\n    borderBottomLeftRadius={token0UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    borderBottomRightRadius={token0UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    backgroundColor=\"$surface2\"\n    currencyInfo={token0CurrencyInfo}\n    currencyField={CurrencyField.INPUT}\n    currencyAmount={currencyAmounts?.[PositionField.TOKEN0]}\n    currencyBalance={currencyBalances?.[PositionField.TOKEN0]}\n    nativeTokenPercentageBuffer={bufferPercentage}\n    onSetExactAmount={handleUserInput(PositionField.TOKEN0)}\n    onToggleIsFiatMode={() => void 0}\n    usdValue={currencyAmountsUSDValue?.[PositionField.TOKEN0]}\n    onSetPresetValue={handleOnSetMax(PositionField.TOKEN0)}\n    value={formattedAmounts?.[PositionField.TOKEN0]}\n    onPressIn={() => setFocusedInputField(PositionField.TOKEN0)}\n    isLoading={amount0Loading}\n  />{token0UnderCardComponent && <UnderCardComponent>{token0UnderCardComponent}</UnderCardComponent>}</Flex>}{!deposit1Disabled && <Flex gap={2}><CurrencyInputPanel\n    focus={focusedInputField === PositionField.TOKEN1}\n    py=\"$spacing16\"\n    borderTopLeftRadius=\"$rounded20\"\n    borderTopRightRadius=\"$rounded20\"\n    borderBottomLeftRadius={token1UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    borderBottomRightRadius={token1UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    backgroundColor=\"$surface2\"\n    currencyInfo={token1CurrencyInfo}\n    currencyField={CurrencyField.INPUT}\n    currencyAmount={currencyAmounts?.[PositionField.TOKEN1]}\n    currencyBalance={currencyBalances?.[PositionField.TOKEN1]}\n    nativeTokenPercentageBuffer={bufferPercentage}\n    onSetExactAmount={handleUserInput(PositionField.TOKEN1)}\n    onToggleIsFiatMode={() => void 0}\n    usdValue={currencyAmountsUSDValue?.[PositionField.TOKEN1]}\n    onSetPresetValue={handleOnSetMax(PositionField.TOKEN1)}\n    value={formattedAmounts?.[PositionField.TOKEN1]}\n    onPressIn={() => setFocusedInputField(PositionField.TOKEN1)}\n    isLoading={amount1Loading}\n  />{token1UnderCardComponent && <UnderCardComponent>{token1UnderCardComponent}</UnderCardComponent>}</Flex>}</Flex>;\n}\n","\"use strict\";\nimport { GetHelpHeader } from \"components/Modal/GetHelpHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Flex, Text } from \"ui/src\";\nimport { AlertTriangleFilled } from \"ui/src/components/icons/AlertTriangleFilled\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport default function ConfirmCreatePositionModal({\n  isOpen,\n  onClose,\n  onContinue,\n  priceDifference\n}) {\n  const { t } = useTranslation();\n  return <Modal\n    name={ModalName.ConfirmCreatePosition}\n    onClose={onClose}\n    isDismissible\n    gap=\"$gap24\"\n    padding=\"$padding16\"\n    isModalOpen={isOpen}\n    maxWidth={420}\n  ><Flex row justifyContent=\"flex-end\" alignItems=\"center\" gap=\"$spacing8\" width=\"100%\"><GetHelpHeader closeModal={onClose} /></Flex><Flex flexDirection=\"column\" alignItems=\"center\" gap=\"$spacing16\"><Flex gap=\"$gap16\" backgroundColor=\"$statusCritical2\" borderRadius=\"$rounded12\" p=\"$spacing12\"><AlertTriangleFilled size={20} color=\"$statusCritical\" /></Flex><Flex centered rowGap=\"$spacing8\"><Text variant=\"subheading1\">{t(\"position.deposit.confirm.create.title\")}</Text><Text variant=\"body2\" color=\"$neutral2\" px=\"$spacing8\" textAlign=\"center\">{priceDifference.value < 0 ? t(\"position.deposit.confirm.create.description.less\", {\n    value: priceDifference.absoluteValue\n  }) : t(\"position.deposit.confirm.create.description.more\", {\n    value: priceDifference.absoluteValue\n  })}</Text><Button emphasis=\"text-only\">{t(\"common.button.learn\")}</Button></Flex><Flex row gap=\"$spacing8\" width=\"100%\" mt=\"$spacing8\"><Button emphasis=\"secondary\" onPress={onClose}>{t(\"common.button.cancel\")}</Button><Button onPress={onContinue} variant=\"critical\">{t(\"common.button.proceed\")}</Button></Flex></Flex></Modal>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport {\n  WrappedLiquidityPositionRangeChart,\n  getLiquidityRangeChartProps\n} from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport { LiquidityPositionInfoBadges } from \"components/Liquidity/LiquidityPositionInfoBadges\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport { useUpdatedAmountsFromDependentAmount } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport { getProtocolVersionLabel } from \"components/Liquidity/utils\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { GetHelpHeader } from \"components/Modal/GetHelpHeader\";\nimport { DetailLineItem } from \"components/swap/DetailLineItem\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport { BaseQuoteFiatAmount } from \"pages/Pool/Positions/create/BaseQuoteFiatAmount\";\nimport {\n  useCreatePositionContext,\n  useCreateTxContext,\n  useDepositContext,\n  usePriceRangeContext\n} from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { PoolOutOfSyncError } from \"pages/Pool/Positions/create/PoolOutOfSyncError\";\nimport { formatPrices } from \"pages/Pool/Positions/create/shared\";\nimport { getInvertedTuple, getPoolIdOrAddressFromCreatePositionInfo } from \"pages/Pool/Positions/create/utils\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { liquiditySaga } from \"state/sagas/liquidity/liquiditySaga\";\nimport { Button, Flex, Separator, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { ProgressIndicator } from \"uniswap/src/components/ConfirmSwapModal/ProgressIndicator\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { TokenLogo } from \"uniswap/src/components/CurrencyLogo/TokenLogo\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { useAccountMeta } from \"uniswap/src/contexts/UniswapContext\";\nimport { AccountType } from \"uniswap/src/features/accounts/types\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { isValidLiquidityTxContext } from \"uniswap/src/features/transactions/liquidity/types\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nimport { useAccount } from \"wagmi\";\nexport function CreatePositionModal({ isOpen, onClose }) {\n  const {\n    positionState: { fee, hook },\n    derivedPositionInfo,\n    currentTransactionStep,\n    setCurrentTransactionStep\n  } = useCreatePositionContext();\n  const {\n    derivedPriceRangeInfo,\n    priceRangeState: { priceInverted }\n  } = usePriceRangeContext();\n  const {\n    derivedDepositInfo,\n    depositState: { exactField }\n  } = useDepositContext();\n  const { t } = useTranslation();\n  const { currencies, protocolVersion, creatingPoolOrPair } = derivedPositionInfo;\n  const { formattedAmounts, currencyAmounts, currencyAmountsUSDValue } = derivedDepositInfo;\n  const token0CurrencyInfo = useCurrencyInfo(currencyAmounts?.TOKEN0?.currency);\n  const token1CurrencyInfo = useCurrencyInfo(currencyAmounts?.TOKEN1?.currency);\n  const { formatNumberOrString, formatCurrencyAmount } = useLocalizationContext();\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(currencies, priceInverted);\n  const { formattedPrices } = useMemo(() => {\n    return formatPrices(derivedPriceRangeInfo, formatNumberOrString);\n  }, [formatNumberOrString, derivedPriceRangeInfo]);\n  const versionLabel = getProtocolVersionLabel(protocolVersion);\n  const [steps, setSteps] = useState([]);\n  const dispatch = useDispatch();\n  const { txInfo, gasFeeEstimateUSD, error, refetch, dependentAmount } = useCreateTxContext();\n  const account = useAccountMeta();\n  const selectChain = useSelectChain();\n  const startChainId = useAccount().chainId;\n  const navigate = useNavigate();\n  const trace = useTrace();\n  const onSuccess = useCallback(() => {\n    setSteps([]);\n    setCurrentTransactionStep(void 0);\n    onClose();\n    navigate(\"/positions\");\n  }, [setCurrentTransactionStep, onClose, navigate]);\n  const liquidityRangeChartProps = useMemo(\n    () => getLiquidityRangeChartProps({\n      positionInfo: derivedPositionInfo,\n      priceRangeInfo: derivedPriceRangeInfo,\n      pricesInverted: priceInverted\n    }),\n    [derivedPositionInfo, derivedPriceRangeInfo, priceInverted]\n  );\n  const handleCreate = useCallback(() => {\n    const isValidTx = isValidLiquidityTxContext(txInfo);\n    if (!account || account?.type !== AccountType.SignerMnemonic || !isValidTx || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n      return;\n    }\n    dispatch(\n      liquiditySaga.actions.trigger({\n        selectChain,\n        startChainId,\n        account,\n        liquidityTxContext: txInfo,\n        setCurrentStep: setCurrentTransactionStep,\n        setSteps,\n        onSuccess,\n        onFailure: () => {\n          setCurrentTransactionStep(void 0);\n        },\n        analytics: {\n          ...getLPBaseAnalyticsProperties({\n            trace,\n            version: protocolVersion,\n            fee: fee.feeAmount,\n            currency0: currencyAmounts.TOKEN0.currency,\n            currency1: currencyAmounts.TOKEN1.currency,\n            currency0AmountUsd: currencyAmountsUSDValue?.TOKEN0,\n            currency1AmountUsd: currencyAmountsUSDValue?.TOKEN1,\n            poolId: getPoolIdOrAddressFromCreatePositionInfo(derivedPositionInfo)\n          }),\n          expectedAmountBaseRaw: currencyAmounts.TOKEN0.quotient?.toString() ?? \"0\",\n          expectedAmountQuoteRaw: currencyAmounts.TOKEN1.quotient?.toString() ?? \"0\",\n          createPool: creatingPoolOrPair,\n          createPosition: true\n        }\n      })\n    );\n  }, [\n    txInfo,\n    account,\n    currencyAmounts?.TOKEN0,\n    currencyAmounts?.TOKEN1,\n    dispatch,\n    selectChain,\n    startChainId,\n    setCurrentTransactionStep,\n    onSuccess,\n    trace,\n    protocolVersion,\n    fee.feeAmount,\n    currencyAmountsUSDValue?.TOKEN0,\n    currencyAmountsUSDValue?.TOKEN1,\n    derivedPositionInfo,\n    creatingPoolOrPair\n  ]);\n  const [token0, token1] = currencies;\n  const { updatedFormattedAmounts, updatedUSDAmounts } = useUpdatedAmountsFromDependentAmount({\n    token0,\n    token1,\n    dependentAmount,\n    exactField,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    formattedAmounts,\n    deposit0Disabled: derivedPriceRangeInfo.deposit0Disabled,\n    deposit1Disabled: derivedPriceRangeInfo.deposit1Disabled\n  });\n  return <Modal name={ModalName.CreatePosition} padding=\"$none\" onClose={onClose} isDismissible isModalOpen={isOpen}><Flex px=\"$spacing8\" pt=\"$spacing12\" pb=\"$spacing8\" gap=\"$spacing24\"><Flex px=\"$spacing12\"><GetHelpHeader\n    title={<Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"position.create.modal.header\" /></Text>}\n    closeModal={() => onClose()}\n  /><Flex py=\"$spacing12\" gap=\"$spacing12\" mt=\"$spacing16\"><Flex row alignItems=\"center\" justifyContent=\"space-between\"><Flex><Flex row gap=\"$gap8\"><Text variant=\"heading3\">{currencyAmounts?.TOKEN0?.currency?.symbol}</Text><Text variant=\"heading3\">/</Text><Text variant=\"heading3\">{currencyAmounts?.TOKEN1?.currency?.symbol}</Text></Flex><Flex row gap={2} alignItems=\"center\"><LiquidityPositionInfoBadges\n    size=\"small\"\n    versionLabel={versionLabel}\n    v4hook={hook}\n    feeTier={fee.feeAmount}\n  /></Flex></Flex><DoubleCurrencyLogo\n    currencies={[currencyAmounts?.TOKEN0?.currency, currencyAmounts?.TOKEN1?.currency]}\n    size={iconSizes.icon36}\n  /></Flex>{(protocolVersion === ProtocolVersion.V3 || protocolVersion === ProtocolVersion.V4) && <>{!creatingPoolOrPair && !!liquidityRangeChartProps && <WrappedLiquidityPositionRangeChart width=\"100%\" {...liquidityRangeChartProps} />}<Flex row><Flex fill gap=\"$gap4\"><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.min\" /></Text><Text variant=\"body3\">{`${formattedPrices[0]} ${quoteCurrency?.symbol + \"/\" + baseCurrency?.symbol}`}</Text></Flex><Flex fill gap=\"$gap4\"><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.max\" /></Text><Text variant=\"body3\">{`${formattedPrices[1]} ${quoteCurrency?.symbol + \"/\" + baseCurrency?.symbol}`}</Text></Flex></Flex></>}</Flex>{creatingPoolOrPair && <Flex gap=\"$spacing12\" mt=\"$spacing32\"><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"position.initialPrice\" /></Text><BaseQuoteFiatAmount\n    variant=\"body1\"\n    price={derivedPriceRangeInfo.invertPrice ? derivedPriceRangeInfo.price?.invert() : derivedPriceRangeInfo.price}\n    base={baseCurrency}\n    quote={quoteCurrency}\n  /></Flex>}<Flex gap=\"$spacing12\" pb=\"$spacing8\" mt=\"$spacing32\"><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.depositing\" /></Text><Flex row justifyContent=\"space-between\"><Flex gap=\"$gap4\"><Flex row gap=\"$gap8\"><Text variant=\"body1\">{updatedFormattedAmounts?.TOKEN0}</Text><Text variant=\"body1\">{currencyAmounts?.TOKEN0?.currency.symbol}</Text></Flex><Text variant=\"body3\" color=\"$neutral2\">{formatCurrencyAmount({ value: updatedUSDAmounts?.TOKEN0, type: NumberType.FiatTokenPrice })}</Text></Flex><TokenLogo\n    size={iconSizes.icon36}\n    chainId={currencyAmounts?.TOKEN0?.currency?.chainId}\n    name={currencyAmounts?.TOKEN0?.currency?.name}\n    symbol={currencyAmounts?.TOKEN0?.currency?.symbol}\n    url={token0CurrencyInfo?.logoUrl}\n  /></Flex><Flex row justifyContent=\"space-between\"><Flex gap=\"$gap4\"><Flex row gap=\"$gap8\"><Text variant=\"body1\">{updatedFormattedAmounts?.TOKEN1}</Text><Text variant=\"body1\">{currencyAmounts?.TOKEN1?.currency.symbol}</Text></Flex><Text variant=\"body3\" color=\"$neutral2\">{formatCurrencyAmount({ value: updatedUSDAmounts?.TOKEN1, type: NumberType.FiatTokenPrice })}</Text></Flex><TokenLogo\n    size={iconSizes.icon36}\n    chainId={currencyAmounts?.TOKEN1?.currency?.chainId}\n    name={currencyAmounts?.TOKEN1?.currency?.name}\n    symbol={currencyAmounts?.TOKEN1?.currency?.symbol}\n    url={token1CurrencyInfo?.logoUrl}\n  /></Flex></Flex><ErrorCallout errorMessage={error} onPress={refetch} /><PoolOutOfSyncError /></Flex>{currentTransactionStep && steps.length > 1 ? <ProgressIndicator steps={steps} currentStep={currentTransactionStep} /> : <><Separator mx=\"$padding12\" /><Flex mx=\"$padding12\"><DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.networkCost\" /></Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\"><NetworkLogo\n        chainId={baseCurrency?.chainId || UniverseChainId.Mainnet}\n        size={iconSizes.icon16}\n        shape=\"square\"\n      /><Text variant=\"body3\">{formatCurrencyAmount({ value: gasFeeEstimateUSD, type: NumberType.FiatGasPrice })}</Text></Flex>\n    }}\n  /></Flex>{currentTransactionStep ? <Flex><Button size=\"large\" variant=\"branded\" loading={true} key=\"create-position-confirm\">{t(\"common.confirmWallet\")}</Button></Flex> : <Flex row><Button size=\"large\" variant=\"branded\" onPress={handleCreate} isDisabled={!txInfo?.action}>{t(\"common.button.create\")}</Button></Flex>}</>}</Flex></Modal>;\n}\n","\"use strict\";\nimport { DepositInputForm } from \"components/Liquidity/DepositInputForm\";\nimport { useUpdatedAmountsFromDependentAmount } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport ConfirmCreatePositionModal from \"pages/Pool/Positions/create/ConfirmCreatePositionModal\";\nimport {\n  useCreatePositionContext,\n  useCreateTxContext,\n  useDepositContext,\n  usePriceRangeContext\n} from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { CreatePositionModal } from \"pages/Pool/Positions/create/CreatePositionModal\";\nimport { useCallback, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { PositionField } from \"types/position\";\nimport { Button, Flex, Text } from \"ui/src\";\nimport { WarningSeverity } from \"uniswap/src/components/modals/WarningModal/types\";\nexport const DepositStep = () => {\n  const {\n    derivedPositionInfo: { currencies }\n  } = useCreatePositionContext();\n  const { t } = useTranslation();\n  const { derivedPriceRangeInfo } = usePriceRangeContext();\n  const {\n    depositState: { exactField },\n    setDepositState,\n    derivedDepositInfo: {\n      formattedAmounts,\n      currencyAmounts,\n      currencyAmountsUSDValue,\n      currencyBalances,\n      error: inputError\n    }\n  } = useDepositContext();\n  const { txInfo, error: dataFetchingError, dependentAmount } = useCreateTxContext();\n  const { deposit0Disabled, deposit1Disabled, priceDifference } = derivedPriceRangeInfo;\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n  const handleUserInput = (field, newValue) => {\n    setDepositState((prev) => ({\n      exactField: field,\n      exactAmounts: {\n        ...prev.exactAmounts,\n        [field]: newValue\n      }\n    }));\n  };\n  const handleOnSetMax = (field, amount) => {\n    setDepositState((prev) => ({\n      exactField: field,\n      exactAmounts: {\n        ...prev.exactAmounts,\n        [field]: amount\n      }\n    }));\n  };\n  const handleReview = useCallback(() => {\n    if (priceDifference?.warning === WarningSeverity.High) {\n      setIsConfirmModalOpen(true);\n      return;\n    }\n    setIsReviewModalOpen(true);\n  }, [priceDifference?.warning]);\n  const [token0, token1] = currencies;\n  const { updatedFormattedAmounts, updatedUSDAmounts, updatedDeposit0Disabled, updatedDeposit1Disabled } = useUpdatedAmountsFromDependentAmount({\n    token0,\n    token1,\n    dependentAmount,\n    exactField,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    formattedAmounts,\n    deposit0Disabled,\n    deposit1Disabled\n  });\n  if (!token0 || !token1) {\n    return null;\n  }\n  const disabled = !!inputError || !txInfo?.txRequest;\n  const requestLoading = Boolean(\n    !dataFetchingError && !inputError && !txInfo?.txRequest && currencyAmounts?.TOKEN0 && currencyAmounts.TOKEN1\n  );\n  return <><Flex gap={32}><Flex gap=\"$spacing4\"><Text variant=\"subheading1\"><Trans i18nKey=\"common.depositTokens\" /></Text><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"position.deposit.description\" /></Text></Flex></Flex><DepositInputForm\n    autofocus={false}\n    token0={token0}\n    token1={token1}\n    formattedAmounts={updatedFormattedAmounts}\n    currencyAmounts={currencyAmounts}\n    currencyAmountsUSDValue={updatedUSDAmounts}\n    currencyBalances={currencyBalances}\n    onUserInput={handleUserInput}\n    onSetMax={handleOnSetMax}\n    deposit0Disabled={updatedDeposit0Disabled}\n    deposit1Disabled={updatedDeposit1Disabled}\n    amount0Loading={requestLoading && exactField === PositionField.TOKEN1}\n    amount1Loading={requestLoading && exactField === PositionField.TOKEN0}\n  /><Flex row><Button\n    size=\"large\"\n    variant=\"branded\"\n    onPress={handleReview}\n    isDisabled={disabled}\n    key=\"Position-Create-DepositButton\"\n    loading={requestLoading}\n  >{inputError ? inputError : t(\"swap.button.review\")}</Button></Flex><CreatePositionModal isOpen={isReviewModalOpen} onClose={() => setIsReviewModalOpen(false)} />{priceDifference?.warning === WarningSeverity.High && <ConfirmCreatePositionModal\n    isOpen={isConfirmModalOpen}\n    onClose={() => setIsConfirmModalOpen(false)}\n    onContinue={() => {\n      setIsConfirmModalOpen(false);\n      setIsReviewModalOpen(true);\n    }}\n    priceDifference={priceDifference}\n  />}</>;\n};\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [QuestionInCircle, AnimatedQuestionInCircle] = createIcon({\n  name: \"QuestionInCircle\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}><Path\n    d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n    stroke=\"currentColor\"\n    strokeWidth=\"1.5\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /><Path\n    d=\"M9.08997 9.00001C9.32507 8.33167 9.78912 7.76811 10.3999 7.40914C11.0107 7.05016 11.7289 6.91894 12.4271 7.03872C13.1254 7.15849 13.7588 7.52153 14.215 8.06353C14.6713 8.60554 14.921 9.29153 14.92 10C14.92 12 11.92 13 11.92 13\"\n    stroke=\"currentColor\"\n    strokeWidth=\"1.5\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  /><Path d=\"M12 17H12.01\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" /></Svg>\n});\n","\"use strict\";\nimport { GetHelpHeader } from \"components/Modal/GetHelpHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Flex, Text, useSporeColors } from \"ui/src\";\nimport { QuestionInCircle } from \"ui/src/components/icons/QuestionInCircle\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport default function ResetCreatePositionFormModal({\n  isOpen,\n  onClose,\n  onHandleReset\n}) {\n  const colors = useSporeColors();\n  const { t } = useTranslation();\n  const handleReset = () => {\n    onHandleReset();\n    onClose();\n  };\n  return <Modal\n    name={ModalName.ResetCreatePositionsForm}\n    onClose={onClose}\n    isDismissible\n    gap=\"$gap24\"\n    padding=\"$padding16\"\n    isModalOpen={isOpen}\n    maxWidth={420}\n  ><Flex row justifyContent=\"flex-end\" alignItems=\"center\" gap=\"$spacing8\" width=\"100%\"><GetHelpHeader closeModal={onClose} /></Flex><Flex flexDirection=\"column\" alignItems=\"center\" gap=\"$spacing16\"><Flex gap=\"$gap16\" backgroundColor=\"$surface3\" borderRadius=\"$rounded12\" p=\"$spacing12\"><QuestionInCircle size={20} color={colors.neutral1.val} /></Flex><Flex centered rowGap=\"$spacing2\"><Text variant=\"subheading1\">{t(\"common.areYouSure\")}</Text><Text variant=\"body2\" color=\"$neutral2\" px=\"$spacing8\" textAlign=\"center\">{t(\"position.resetDescription\")}</Text></Flex><Flex row gap=\"$spacing8\" width=\"100%\" mt=\"$spacing8\"><Button size=\"small\" emphasis=\"secondary\" onPress={onClose}>{t(\"common.button.cancel\")}</Button><Button size=\"small\" onPress={handleReset}>{t(\"common.button.reset\")}</Button></Flex></Flex></Modal>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport { getProtocolVersionLabel, parseProtocolVersion } from \"components/Liquidity/utils\";\nimport { PoolProgressIndicator } from \"components/PoolProgressIndicator/PoolProgressIndicator\";\nimport {\n  CreatePositionContextProvider,\n  CreateTxContextProvider,\n  DepositContextProvider,\n  PriceRangeContextProvider\n} from \"pages/Pool/Positions/create/ContextProviders\";\nimport {\n  DEFAULT_DEPOSIT_STATE,\n  DEFAULT_PRICE_RANGE_STATE,\n  useCreatePositionContext,\n  useCreateTxContext,\n  useDepositContext,\n  usePriceRangeContext\n} from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { DepositStep } from \"pages/Pool/Positions/create/Deposit\";\nimport { EditSelectTokensStep } from \"pages/Pool/Positions/create/EditStep\";\nimport { SelectPriceRangeStep, SelectPriceRangeStepV2 } from \"pages/Pool/Positions/create/RangeSelectionStep\";\nimport ResetCreatePositionFormModal from \"pages/Pool/Positions/create/ResetCreatePositionsFormModal\";\nimport { SelectTokensStep } from \"pages/Pool/Positions/create/SelectTokenStep\";\nimport { useInitialPoolInputs } from \"pages/Pool/Positions/create/hooks\";\nimport { Container } from \"pages/Pool/Positions/create/shared\";\nimport { DEFAULT_POSITION_STATE, PositionFlowStep } from \"pages/Pool/Positions/create/types\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { MultichainContextProvider } from \"state/multichain/MultichainContext\";\nimport { useMultichainContext } from \"state/multichain/useMultichainContext\";\nimport { PositionField } from \"types/position\";\nimport { Button, Flex, Text, TouchableArea, styled, useMedia } from \"ui/src\";\nimport { RotateLeft } from \"ui/src/components/icons/RotateLeft\";\nimport { INTERFACE_NAV_HEIGHT } from \"ui/src/theme\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal, SectionName } from \"uniswap/src/features/telemetry/constants\";\nimport { TransactionSettingsContextProvider } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionSettingKey } from \"uniswap/src/features/transactions/settings/slice\";\nimport { SwapFormSettings } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/SwapFormSettings\";\nimport { Deadline } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/settingsConfigurations/Deadline/Deadline\";\nimport { usePrevious } from \"utilities/src/react/hooks\";\nconst WIDTH = {\n  positionCard: 600,\n  sidebar: 360\n};\nfunction CreatePositionInner() {\n  const {\n    positionState: { protocolVersion },\n    derivedPositionInfo: { creatingPoolOrPair },\n    step,\n    setStep\n  } = useCreatePositionContext();\n  const v2Selected = protocolVersion === ProtocolVersion.V2;\n  const { error, refetch } = useCreateTxContext();\n  const handleContinue = useCallback(() => {\n    if (v2Selected) {\n      if (step === PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER && creatingPoolOrPair) {\n        setStep(PositionFlowStep.PRICE_RANGE);\n      } else {\n        setStep(PositionFlowStep.DEPOSIT);\n      }\n    } else {\n      setStep((prevStep) => prevStep + 1);\n    }\n  }, [creatingPoolOrPair, setStep, step, v2Selected]);\n  if (step === PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER) {\n    return <Trace logImpression section={SectionName.CreatePositionSelectTokensStep}><SelectTokensStep onContinue={handleContinue} /></Trace>;\n  }\n  if (step === PositionFlowStep.PRICE_RANGE) {\n    return <Trace logImpression section={SectionName.CreatePositionPriceRangeStep}><EditSelectTokensStep /><Container>{v2Selected ? <SelectPriceRangeStepV2 /> : <SelectPriceRangeStep />}<DepositStep /><ErrorCallout errorMessage={error} onPress={refetch} /></Container></Trace>;\n  }\n  return <Trace logImpression section={SectionName.CreatePositionDepositStep}><EditSelectTokensStep /><Container><DepositStep /></Container><ErrorCallout errorMessage={error} onPress={refetch} /></Trace>;\n}\nconst Sidebar = () => {\n  const { t } = useTranslation();\n  const {\n    positionState: { protocolVersion },\n    derivedPositionInfo: { creatingPoolOrPair },\n    step,\n    setStep\n  } = useCreatePositionContext();\n  const PoolProgressSteps = useMemo(() => {\n    const createStep = (label, stepEnum) => ({\n      label,\n      active: step === stepEnum,\n      // This relies on the ordering of PositionFlowStep enum values matching the actual order in the form.\n      onPress: stepEnum < step ? () => setStep(stepEnum) : void 0\n    });\n    if (protocolVersion === ProtocolVersion.V2) {\n      if (creatingPoolOrPair) {\n        return [\n          createStep(t(`position.step.select`), PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER),\n          createStep(t(\"position.step.price\"), PositionFlowStep.PRICE_RANGE)\n        ];\n      }\n      return [\n        createStep(t(\"position.step.select\"), PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER),\n        createStep(t(\"position.step.deposit\"), PositionFlowStep.DEPOSIT)\n      ];\n    }\n    return [\n      createStep(t(\"position.step.select\"), PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER),\n      createStep(t(\"position.step.range\"), PositionFlowStep.PRICE_RANGE)\n    ];\n  }, [creatingPoolOrPair, protocolVersion, setStep, step, t]);\n  return <Flex\n    width={WIDTH.sidebar}\n    alignSelf=\"flex-start\"\n    $platform-web={{ position: \"sticky\", top: INTERFACE_NAV_HEIGHT + 25 }}\n  ><PoolProgressIndicator steps={PoolProgressSteps} /></Flex>;\n};\nconst ResetButton = ({ onClickReset, isDisabled }) => {\n  const { t } = useTranslation();\n  return <Button size=\"small\" emphasis=\"tertiary\" onPress={onClickReset} isDisabled={isDisabled} icon={<RotateLeft />}>{t(\"common.button.reset\")}</Button>;\n};\nconst ToolbarContainer = styled(Flex, {\n  row: true,\n  centered: true,\n  gap: \"$gap8\",\n  $md: {\n    \"$platform-web\": {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr auto\",\n      gridColumnGap: \"8px\"\n    }\n  }\n});\nconst Toolbar = ({ defaultInitialToken }) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { positionState, setPositionState, setStep, reset: resetCreatePositionState } = useCreatePositionContext();\n  const { protocolVersion } = positionState;\n  const { setPriceRangeState } = usePriceRangeContext();\n  const [versionDropdownOpen, setVersionDropdownOpen] = useState(false);\n  const [showResetModal, setShowResetModal] = useState(false);\n  const { priceRangeState, reset: resetPriceRangeState } = usePriceRangeContext();\n  const { depositState, reset: resetDepositState } = useDepositContext();\n  const { reset: resetMultichainState } = useMultichainContext();\n  const { isTestnetModeEnabled } = useEnabledChains();\n  const prevIsTestnetModeEnabled = usePrevious(isTestnetModeEnabled) ?? false;\n  const isFormUnchanged = useMemo(() => {\n    return positionState.currencyInputs.TOKEN0 === defaultInitialToken && !positionState.currencyInputs.TOKEN1 && positionState.fee === DEFAULT_POSITION_STATE.fee && positionState.hook === DEFAULT_POSITION_STATE.hook && priceRangeState.initialPrice === DEFAULT_PRICE_RANGE_STATE.initialPrice && depositState === DEFAULT_DEPOSIT_STATE;\n  }, [\n    positionState.currencyInputs,\n    positionState.fee,\n    positionState.hook,\n    priceRangeState,\n    depositState,\n    defaultInitialToken\n  ]);\n  const handleReset = useCallback(() => {\n    resetCreatePositionState();\n    resetPriceRangeState();\n    resetMultichainState();\n    resetDepositState();\n  }, [resetDepositState, resetCreatePositionState, resetMultichainState, resetPriceRangeState]);\n  useEffect(() => {\n    if (isTestnetModeEnabled !== prevIsTestnetModeEnabled) {\n      handleReset();\n    }\n  }, [handleReset, isTestnetModeEnabled, prevIsTestnetModeEnabled]);\n  const handleVersionChange = useCallback(\n    (version) => {\n      const versionUrl = getProtocolVersionLabel(version);\n      if (versionUrl) {\n        navigate(`/positions/create/${versionUrl}`);\n      }\n      setPositionState((prevState) => ({\n        ...DEFAULT_POSITION_STATE,\n        currencyInputs: prevState.currencyInputs,\n        protocolVersion: version\n      }));\n      setPriceRangeState(DEFAULT_PRICE_RANGE_STATE);\n      setStep(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n      setVersionDropdownOpen(false);\n    },\n    [setPositionState, setPriceRangeState, setStep, navigate, setVersionDropdownOpen]\n  );\n  const versionOptions = useMemo(\n    () => [ProtocolVersion.V4, ProtocolVersion.V3, ProtocolVersion.V2].filter((version) => version != protocolVersion).map((version) => <TouchableArea key={`version-${version}`} onPress={() => handleVersionChange(version)}><Flex p=\"$spacing8\" borderRadius=\"$rounded8\" hoverStyle={{ backgroundColor: \"$surface2\" }}><Text variant=\"body2\">{t(\"position.new.protocol\", { protocol: getProtocolVersionLabel(version) })}</Text></Flex></TouchableArea>),\n    [handleVersionChange, protocolVersion, t]\n  );\n  return <Flex><ResetCreatePositionFormModal\n    isOpen={showResetModal}\n    onClose={() => setShowResetModal(false)}\n    onHandleReset={handleReset}\n  /><ToolbarContainer><ResetButton onClickReset={() => setShowResetModal(true)} isDisabled={isFormUnchanged} />{\n    /* <DropdownSelector\n      containerStyle={{ width: 'auto' }}\n      buttonStyle={{ py: '$spacing8', px: '$spacing12' }}\n      dropdownStyle={{ width: 200, borderRadius: '$rounded16' }}\n      menuLabel={\n        <Text variant=\"buttonLabel3\" lineHeight=\"16px\">\n          {t('position.protocol', { protocol: getProtocolVersionLabel(protocolVersion) })}\n        </Text>\n      }\n      isOpen={versionDropdownOpen}\n      toggleOpen={() => setVersionDropdownOpen(!versionDropdownOpen)}\n      alignRight\n    >\n      {versionOptions}\n    </DropdownSelector> */\n  }<Flex\n    borderRadius=\"$rounded12\"\n    borderWidth=\"$spacing1\"\n    borderColor=\"$surface3\"\n    height=\"38px\"\n    px=\"$gap8\"\n    alignItems=\"center\"\n    pt=\"$spacing2\"\n  ><SwapFormSettings\n    position=\"relative\"\n    adjustRightAlignment={false}\n    adjustTopAlignment={false}\n    settings={[Deadline]}\n    iconColor=\"$neutral1\"\n    iconSize=\"$icon.16\"\n  /></Flex></ToolbarContainer></Flex>;\n};\nexport default function CreatePosition() {\n  const media = useMedia();\n  const { t } = useTranslation();\n  const { protocolVersion } = useParams();\n  const paramsProtocolVersion = parseProtocolVersion(\"v3\");\n  const initialInputs = useInitialPoolInputs();\n  const initialProtocolVersion = paramsProtocolVersion ?? ProtocolVersion.V4;\n  return <Trace logImpression page={InterfacePageNameLocal.CreatePosition}><MultichainContextProvider initialChainId={initialInputs[PositionField.TOKEN0].chainId}><TransactionSettingsContextProvider settingKey={TransactionSettingKey.LP}><CreatePositionContextProvider\n    initialState={{\n      currencyInputs: initialInputs,\n      protocolVersion: initialProtocolVersion\n    }}\n  ><PriceRangeContextProvider><DepositContextProvider><CreateTxContextProvider><Flex\n    mt=\"$spacing24\"\n    width=\"100%\"\n    px=\"$spacing40\"\n    maxWidth={WIDTH.positionCard + WIDTH.sidebar + 80}\n    $xl={{\n      px: \"$spacing12\",\n      maxWidth: WIDTH.positionCard,\n      mx: \"auto\"\n    }}\n  ><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to=\"/positions\">{t(\"pool.positions.title\")} <ChevronRight size={14} /></BreadcrumbNavLink><BreadcrumbNavLink to=\"/positions/create\">{t(\"pool.newPosition.title\")}</BreadcrumbNavLink></BreadcrumbNavContainer><Flex\n    row\n    alignSelf=\"flex-end\"\n    alignItems=\"center\"\n    gap=\"$gap20\"\n    width=\"100%\"\n    justifyContent=\"space-between\"\n    mr=\"auto\"\n    mb=\"$spacing32\"\n    $md={{ flexDirection: \"column\", alignItems: \"stretch\" }}\n  ><Text variant=\"heading2\">{t(\"position.new\")}</Text><Toolbar defaultInitialToken={initialInputs[PositionField.TOKEN0]} /></Flex><Flex row gap=\"$spacing20\" justifyContent=\"space-between\" width=\"100%\">{!media.xl && <Sidebar />}<Flex gap=\"$spacing24\" flex={1} maxWidth={WIDTH.positionCard} mb=\"$spacing28\"><CreatePositionInner /></Flex></Flex></Flex></CreateTxContextProvider></DepositContextProvider></PriceRangeContextProvider></CreatePositionContextProvider></TransactionSettingsContextProvider></MultichainContextProvider></Trace>;\n}\n"],"names":["_cn3","_cn2","_cn","UnderCardComponent","children","div","className","DepositInputForm","token0","token1","currencyAmounts","currencyBalances","currencyAmountsUSDValue","formattedAmounts","onUserInput","onSetMax","deposit0Disabled","deposit1Disabled","token0UnderCardComponent","token1UnderCardComponent","amount0Loading","amount1Loading","autofocus","bufferPercentage","useNativeTokenPercentageBufferExperiment","focusedInputField","setFocusedInputField","useState","PositionField","TOKEN0","token0CurrencyInfo","useCurrencyInfo","token1CurrencyInfo","handleUserInput","field","newValue","handleOnSetMax","amount","CurrencyInputPanel","focus","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","currencyInfo","currencyField","CurrencyField","INPUT","currencyAmount","currencyBalance","nativeTokenPercentageBuffer","onSetExactAmount","onToggleIsFiatMode","usdValue","onSetPresetValue","value","onPressIn","isLoading","TOKEN1","py","ConfirmCreatePositionModal","isOpen","onClose","onContinue","priceDifference","t","useTranslation","Modal","name","ModalName","ConfirmCreatePosition","isDismissible","gap","padding","isModalOpen","maxWidth","GetHelpHeader","closeModal","AlertTriangleFilled","size","color","Text","variant","px","textAlign","absoluteValue","Button","emphasis","onPress","_cn13","_cn12","_cn9","_cn8","_cn6","_cn5","CreatePositionModal","quoteCurrency","baseCurrency","derivedPriceRangeInfo","updatedFormattedAmounts","updatedUSDAmounts","txInfo","positionState","fee","hook","derivedPositionInfo","currentTransactionStep","setCurrentTransactionStep","useCreatePositionContext","priceRangeState","priceInverted","usePriceRangeContext","derivedDepositInfo","depositState","exactField","useDepositContext","currencies","protocolVersion","creatingPoolOrPair","currency","formatNumberOrString","formatCurrencyAmount","useLocalizationContext","getInvertedTuple","formattedPrices","useMemo","formatPrices","versionLabel","getProtocolVersionLabel","steps","setSteps","dispatch","useDispatch","gasFeeEstimateUSD","error","refetch","dependentAmount","useCreateTxContext","account","useAccountMeta","selectChain","useSelectChain","startChainId","useAccount","chainId","navigate","useNavigate","trace","useTrace","onSuccess","useCallback","liquidityRangeChartProps","getLiquidityRangeChartProps","positionInfo","priceRangeInfo","pricesInverted","handleCreate","isValidTx","isValidLiquidityTxContext","type","AccountType","SignerMnemonic","liquiditySaga","actions","trigger","liquidityTxContext","setCurrentStep","onFailure","analytics","getLPBaseAnalyticsProperties","version","feeAmount","currency0","currency1","currency0AmountUsd","currency1AmountUsd","poolId","getPoolIdOrAddressFromCreatePositionInfo","expectedAmountBaseRaw","quotient","toString","expectedAmountQuoteRaw","createPool","createPosition","useUpdatedAmountsFromDependentAmount","CreatePosition","title","Trans","i18nKey","symbol","LiquidityPositionInfoBadges","v4hook","feeTier","DoubleCurrencyLogo","iconSizes","icon36","ProtocolVersion","V3","V4","WrappedLiquidityPositionRangeChart","width","BaseQuoteFiatAmount","price","invertPrice","invert","base","quote","NumberType","FiatTokenPrice","TokenLogo","url","logoUrl","ErrorCallout","errorMessage","PoolOutOfSyncError","length","ProgressIndicator","currentStep","DetailLineItem","LineItem","Label","Value","NetworkLogo","UniverseChainId","Mainnet","icon16","shape","FiatGasPrice","loading","isDisabled","action","DepositStep","setDepositState","inputError","dataFetchingError","isReviewModalOpen","setIsReviewModalOpen","isConfirmModalOpen","setIsConfirmModalOpen","handleReview","warning","WarningSeverity","High","updatedDeposit0Disabled","updatedDeposit1Disabled","disabled","txRequest","requestLoading","Boolean","prev","exactAmounts","QuestionInCircle","AnimatedQuestionInCircle","createIcon","getIcon","props","Svg","viewBox","fill","Path","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ResetCreatePositionFormModal","onHandleReset","colors","useSporeColors","ResetCreatePositionsForm","neutral1","val","handleReset","_cn4","WIDTH","positionCard","sidebar","CreatePositionInner","step","setStep","v2Selected","V2","handleContinue","PositionFlowStep","SELECT_TOKENS_AND_FEE_TIER","PRICE_RANGE","DEPOSIT","prevStep","Trace","logImpression","section","SectionName","CreatePositionSelectTokensStep","SelectTokensStep","CreatePositionPriceRangeStep","EditSelectTokensStep","Container","SelectPriceRangeStepV2","SelectPriceRangeStep","CreatePositionDepositStep","Sidebar","PoolProgressSteps","createStep","label","stepEnum","active","Flex","alignSelf","$platform-web","position","top","INTERFACE_NAV_HEIGHT","PoolProgressIndicator","ResetButton","onClickReset","icon","RotateLeft","ToolbarContainer","styled","row","centered","$md","display","gridTemplateColumns","gridColumnGap","Toolbar","defaultInitialToken","setPositionState","reset","resetCreatePositionState","setPriceRangeState","versionDropdownOpen","setVersionDropdownOpen","showResetModal","setShowResetModal","resetPriceRangeState","resetDepositState","resetMultichainState","useMultichainContext","isTestnetModeEnabled","useEnabledChains","prevIsTestnetModeEnabled","usePrevious","isFormUnchanged","currencyInputs","DEFAULT_POSITION_STATE","initialPrice","DEFAULT_PRICE_RANGE_STATE","DEFAULT_DEPOSIT_STATE","useEffect","handleVersionChange","versionUrl","prevState","filter","map","TouchableArea","protocol","SwapFormSettings","adjustRightAlignment","adjustTopAlignment","settings","Deadline","iconColor","iconSize","media","useMedia","useParams","paramsProtocolVersion","parseProtocolVersion","initialInputs","useInitialPoolInputs","initialProtocolVersion","page","InterfacePageNameLocal","MultichainContextProvider","initialChainId","TransactionSettingsContextProvider","settingKey","TransactionSettingKey","LP","CreatePositionContextProvider","initialState","PriceRangeContextProvider","DepositContextProvider","CreateTxContextProvider","mt","$xl","mx","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","xl","flex","mb"],"sourceRoot":""}